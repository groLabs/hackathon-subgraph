{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "LogNewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "namesOfParticipants",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "price",
          "type": "uint128[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "targets",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestingTime",
          "type": "uint32"
        }
      ],
      "name": "LogNewCollectiveInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "LogNewPoolInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "LogTokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_depositedShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "name": "LogTokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        }
      ],
      "name": "LogTokensUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BP",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VEST_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "updated",
          "type": "bool"
        }
      ],
      "name": "calculateShareToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectiveInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "vestingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "collectiveStart",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getClaimable",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_namesOfParticipants",
          "type": "string[]"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "vestingTime",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "collectiveStart",
              "type": "uint32"
            }
          ],
          "internalType": "struct BuidlCollective.Collective",
          "name": "_collectiveInfo",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint128[]",
          "name": "_prices",
          "type": "uint128[]"
        },
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_targets",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "namesOfParticipants",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "noOfTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pokeApproval",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "readToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "price",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "internalType": "struct BuidlCollective.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startCollective",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "price",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValueLeft",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "updateAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/BuidlCollective.sol",
    "6": "contracts/solmate/src/tokens/ERC20.sol",
    "7": "interfaces/IBuidlCollective.sol"
  },
  "ast": {
    "absolutePath": "contracts/BuidlCollective.sol",
    "exportedSymbols": {
      "BuidlCollective": [
        1178
      ],
      "ERC20": [
        1797
      ],
      "IBuidlCollective": [
        1860
      ]
    },
    "id": 1179,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "interfaces/IBuidlCollective.sol",
        "file": "../interfaces/IBuidlCollective.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1179,
        "sourceUnit": 1861,
        "src": "25:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/solmate/src/tokens/ERC20.sol",
        "file": "./solmate/src/tokens/ERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1179,
        "sourceUnit": 1798,
        "src": "70:53:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "78:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1797,
              "src": "153:5:3"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "153:5:3"
          },
          {
            "baseName": {
              "id": 7,
              "name": "IBuidlCollective",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1860,
              "src": "160:16:3"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "160:16:3"
          }
        ],
        "canonicalName": "BuidlCollective",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1178,
        "linearizedBaseContracts": [
          1178,
          1860,
          1797
        ],
        "name": "BuidlCollective",
        "nameLocation": "134:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "collectiveStarted",
            "nameLocation": "221:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "216:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "216:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "collectiveInitialized",
            "nameLocation": "249:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "244:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "244:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fed45587",
            "id": 15,
            "mutability": "mutable",
            "name": "namesOfParticipants",
            "nameLocation": "292:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "276:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 13,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "276:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 14,
              "nodeType": "ArrayTypeName",
              "src": "276:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36e9b344",
            "id": 17,
            "mutability": "mutable",
            "name": "noOfTokens",
            "nameLocation": "332:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "317:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.Collective",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "vestingTime",
                "nameLocation": "383:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "376:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "376:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "411:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "404:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "404:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "collectiveStart",
                "nameLocation": "433:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "426:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Collective",
            "nameLocation": "355:10:3",
            "nodeType": "StructDefinition",
            "scope": 1178,
            "src": "348:107:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 27,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "494:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "477:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "477:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "477:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5dab711",
            "id": 32,
            "mutability": "mutable",
            "name": "tokenInfo",
            "nameLocation": "544:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "507:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "515:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "507:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
              },
              "valueType": {
                "id": 30,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29,
                  "name": "TokenInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "526:9:3"
                },
                "referencedDeclaration": 41,
                "src": "526:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenInfo_$41_storage_ptr",
                  "typeString": "struct BuidlCollective.TokenInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 34,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "575:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "560:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "560:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.TokenInfo",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "622:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "614:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "614:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "646:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "638:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "669:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "661:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "661:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenInfo",
            "nameLocation": "594:9:3",
            "nodeType": "StructDefinition",
            "scope": 1178,
            "src": "587:93:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01e1d114",
            "id": 43,
            "mutability": "mutable",
            "name": "totalAssets",
            "nameLocation": "701:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "686:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e0c9802f",
            "id": 46,
            "mutability": "mutable",
            "name": "collectiveInfo",
            "nameLocation": "821:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "803:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Collective_$24_storage",
              "typeString": "struct BuidlCollective.Collective"
            },
            "typeName": {
              "id": 45,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44,
                "name": "Collective",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24,
                "src": "803:10:3"
              },
              "referencedDeclaration": 24,
              "src": "803:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Collective_$24_storage_ptr",
                "typeString": "struct BuidlCollective.Collective"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "9cfdbd5e",
            "id": 49,
            "mutability": "constant",
            "name": "BP",
            "nameLocation": "934:2:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "911:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 47,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "911:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "939:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "7d9fce4d",
            "id": 54,
            "mutability": "constant",
            "name": "VEST_MULTIPLIER",
            "nameLocation": "974:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "950:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "950:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 51,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "992:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 52,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "998:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "992:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 59,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "1042:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "1006:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1014:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1006:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
              },
              "valueType": {
                "id": 57,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 56,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "1025:8:3"
                },
                "referencedDeclaration": 79,
                "src": "1025:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$79_storage_ptr",
                  "typeString": "struct BuidlCollective.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d32e81a5",
            "id": 61,
            "mutability": "mutable",
            "name": "lastCheckpoint",
            "nameLocation": "1088:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "1073:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1073:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77a1d3a",
            "id": 63,
            "mutability": "mutable",
            "name": "lastTWAP",
            "nameLocation": "1202:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "1187:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1187:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 65,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "1268:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "1253:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1253:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5da69cb6",
            "id": 70,
            "mutability": "mutable",
            "name": "releaseFactor",
            "nameLocation": "1300:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 1178,
            "src": "1285:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1285:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              },
              "id": 69,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 67,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1316:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "33",
                "id": 68,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1324:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "1316:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.UserInfo",
            "id": 79,
            "members": [
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "depositedShare",
                "nameLocation": "1411:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "1403:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1403:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "lastCheckpointTWAP",
                "nameLocation": "1491:18:3",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "1483:26:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1483:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "lastCheckpointTime",
                "nameLocation": "1580:18:3",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "1572:26:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1572:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "lastCheckpointPercentageVested",
                "nameLocation": "1676:30:3",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "1668:38:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 77,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1668:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "1339:8:3",
            "nodeType": "StructDefinition",
            "scope": 1178,
            "src": "1332:381:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1740:56:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 82,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1758:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1758:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 84,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1772:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1758:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1750:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:28:3"
                },
                {
                  "id": 88,
                  "nodeType": "PlaceholderStatement",
                  "src": "1788:1:3"
                }
              ]
            },
            "id": 90,
            "name": "onlyAdmin",
            "nameLocation": "1728:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:2:3"
            },
            "src": "1719:77:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1938:68:3",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1948:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1956:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1956:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1948:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:18:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1993:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 109,
                      "name": "LogNewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1981:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1976:23:3"
                }
              ]
            },
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 99,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92,
                    "src": "1911:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 100,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "1918:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 101,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96,
                    "src": "1927:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 102,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 98,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1797,
                  "src": "1905:5:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1905:32:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1837:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1823:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1866:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1852:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1889:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1883:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1813:91:3"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:0:3"
            },
            "scope": 1178,
            "src": "1802:204:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2559:815:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 136,
                          "name": "collectiveInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2577:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2602:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2577:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2569:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:39:3"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 141,
                      "name": "collectiveInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2618:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2642:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2618:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:28:3"
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 145,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2656:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 146,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2664:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2664:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2656:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:18:3"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2684:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "_collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "2701:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_memory_ptr",
                        "typeString": "struct BuidlCollective.Collective memory"
                      }
                    },
                    "src": "2684:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$24_storage",
                      "typeString": "struct BuidlCollective.Collective storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:32:3"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 154,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "2726:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "2726:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2759:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2726:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:34:3"
                },
                {
                  "assignments": [
                    161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 161,
                      "mutability": "mutable",
                      "name": "tokenLength",
                      "nameLocation": "2778:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2770:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2770:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "initialValue": {
                    "expression": {
                      "id": 162,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "2792:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2792:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2770:36:3"
                },
                {
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2858:230:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 178,
                                "name": "_namesOfParticipants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "2897:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2918:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2897:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 175,
                              "name": "namesOfParticipants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2872:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2872:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2872:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "2872:49:3"
                      },
                      {
                        "assignments": [
                          185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 185,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "2952:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 214,
                            "src": "2935:18:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo"
                            },
                            "typeName": {
                              "id": 184,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 183,
                                "name": "TokenInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 41,
                                "src": "2935:9:3"
                              },
                              "referencedDeclaration": 41,
                              "src": "2935:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$41_storage_ptr",
                                "typeString": "struct BuidlCollective.TokenInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 197,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 187,
                                "name": "_targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 132,
                                "src": "2966:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 189,
                              "indexExpression": {
                                "id": 188,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2975:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2966:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 190,
                                "name": "_prices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "2979:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                                  "typeString": "uint128[] memory"
                                }
                              },
                              "id": 192,
                              "indexExpression": {
                                "id": 191,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2987:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2979:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 193,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "2991:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 195,
                              "indexExpression": {
                                "id": 194,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "2998:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2991:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 186,
                            "name": "TokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "2956:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenInfo_$41_storage_ptr_$",
                              "typeString": "type(struct BuidlCollective.TokenInfo storage pointer)"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2956:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2935:66:3"
                      },
                      {
                        "expression": {
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 198,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3015:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 202,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 199,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "3025:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 201,
                              "indexExpression": {
                                "id": 200,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "3033:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3025:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3015:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 203,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "3039:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "src": "3015:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                            "typeString": "struct BuidlCollective.TokenInfo storage ref"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "3015:25:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 209,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "3066:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 211,
                              "indexExpression": {
                                "id": 210,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 166,
                                "src": "3074:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3066:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 206,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "3054:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3054:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3054:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "3054:23:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2836:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 170,
                      "name": "tokenLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "2840:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2836:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 215,
                  "initializationExpression": {
                    "assignments": [
                      166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2829:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "2821:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2821:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 168,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2833:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2821:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2853:3:3",
                      "subExpression": {
                        "id": 172,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2853:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 174,
                    "nodeType": "ExpressionStatement",
                    "src": "2853:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "2816:272:3"
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 216,
                      "name": "noOfTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3097:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 217,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3110:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3110:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3097:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "3097:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 222,
                        "name": "_namesOfParticipants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "3179:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "id": 223,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "3213:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 224,
                        "name": "_prices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "3234:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        }
                      },
                      {
                        "id": 225,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "3255:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 226,
                        "name": "_targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "3275:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 227,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "3297:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3297:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 229,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "3331:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vestingTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19,
                        "src": "3331:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 221,
                      "name": "LogNewCollectiveInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "3138:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint128_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (string memory[] memory,address[] memory,uint128[] memory,address[] memory,uint256[] memory,uint32,uint32)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3138:229:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "EmitStatement",
                  "src": "3133:234:3"
                }
              ]
            },
            "functionSelector": "6b954292",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "2308:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_namesOfParticipants",
                  "nameLocation": "2344:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2328:36:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2328:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "2328:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_collectiveInfo",
                  "nameLocation": "2392:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2374:33:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collective_$24_memory_ptr",
                    "typeString": "struct BuidlCollective.Collective"
                  },
                  "typeName": {
                    "id": 119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 118,
                      "name": "Collective",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24,
                      "src": "2374:10:3"
                    },
                    "referencedDeclaration": 24,
                    "src": "2374:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$24_storage_ptr",
                      "typeString": "struct BuidlCollective.Collective"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "2434:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2417:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 121,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2417:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 122,
                    "nodeType": "ArrayTypeName",
                    "src": "2417:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_prices",
                  "nameLocation": "2468:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2451:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 124,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "2451:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 125,
                    "nodeType": "ArrayTypeName",
                    "src": "2451:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "2502:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2485:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 127,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2485:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 128,
                    "nodeType": "ArrayTypeName",
                    "src": "2485:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_targets",
                  "nameLocation": "2535:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2518:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2518:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 131,
                    "nodeType": "ArrayTypeName",
                    "src": "2518:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2318:231:3"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:0:3"
            },
            "scope": 1178,
            "src": "2299:1075:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "3488:78:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 242,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3506:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3527:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3506:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3498:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3498:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 248,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "3556:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 247,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "3543:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3543:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3543:16:3"
                }
              ]
            },
            "functionSelector": "4c33fe94",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "3478:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3478:9:3"
              }
            ],
            "name": "cancel",
            "nameLocation": "3442:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3465:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "3449:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3448:20:3"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3488:0:3"
            },
            "scope": 1178,
            "src": "3433:133:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "3631:71:3",
              "statements": [
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 259,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "3641:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 260,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "3649:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3641:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "3641:17:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 264,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3685:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 263,
                      "name": "LogNewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "3673:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3673:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "EmitStatement",
                  "src": "3668:27:3"
                }
              ]
            },
            "functionSelector": "e2f273bd",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "3621:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3621:9:3"
              }
            ],
            "name": "updateAdmin",
            "nameLocation": "3581:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "3601:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "3593:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:19:3"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3631:0:3"
            },
            "scope": 1178,
            "src": "3572:130:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "3754:1190:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 274,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3772:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3793:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3772:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3764:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3764:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3764:35:3"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 279,
                      "name": "collectiveStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3809:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3829:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3809:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:24:3"
                },
                {
                  "assignments": [
                    287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "3860:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "3843:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3843:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 286,
                        "nodeType": "ArrayTypeName",
                        "src": "3843:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "id": 288,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "3870:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3843:33:3"
                },
                {
                  "assignments": [
                    292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "_tokenInfo",
                      "nameLocation": "3903:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "3886:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                        "typeString": "struct BuidlCollective.TokenInfo"
                      },
                      "typeName": {
                        "id": 291,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 290,
                          "name": "TokenInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41,
                          "src": "3886:9:3"
                        },
                        "referencedDeclaration": 41,
                        "src": "3886:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$41_storage_ptr",
                          "typeString": "struct BuidlCollective.TokenInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3886:27:3"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "3931:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "3923:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3923:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 296,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3923:20:3"
                },
                {
                  "body": {
                    "id": 374,
                    "nodeType": "Block",
                    "src": "3994:709:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 307,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4008:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 308,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "4021:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 309,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "4031:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 311,
                              "indexExpression": {
                                "id": 310,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "4039:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4031:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4021:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "src": "4008:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo memory"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "4008:34:3"
                      },
                      {
                        "assignments": [
                          316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 316,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4064:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "4056:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 315,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4056:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 319,
                        "initialValue": {
                          "expression": {
                            "id": 317,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4073:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "4073:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4056:34:3"
                      },
                      {
                        "assignments": [
                          321
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 321,
                            "mutability": "mutable",
                            "name": "contributor",
                            "nameLocation": "4112:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "4104:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 320,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4104:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 324,
                        "initialValue": {
                          "expression": {
                            "id": 322,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4126:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "4126:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4104:37:3"
                      },
                      {
                        "assignments": [
                          326
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 326,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "4163:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "4155:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 325,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "4155:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 329,
                        "initialValue": {
                          "expression": {
                            "id": 327,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4171:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "4171:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4155:32:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 336,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "4232:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 339,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4253:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4245:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 337,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4245:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4245:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 341,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "4260:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 331,
                                    "name": "_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 287,
                                    "src": "4207:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 333,
                                  "indexExpression": {
                                    "id": 332,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 298,
                                    "src": "4215:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4207:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 330,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1797,
                                "src": "4201:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4201:17:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1797",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1606,
                            "src": "4201:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4201:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "4201:66:3"
                      },
                      {
                        "assignments": [
                          345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 345,
                            "mutability": "mutable",
                            "name": "assetValue",
                            "nameLocation": "4515:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "4507:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 344,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4507:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 364,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 346,
                                    "name": "target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "4529:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 347,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 326,
                                    "src": "4538:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "4529:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4546:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4552:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "4546:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "4529:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 353,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4528:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4574:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 356,
                                        "name": "_tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 287,
                                        "src": "4586:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 358,
                                      "indexExpression": {
                                        "id": 357,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 298,
                                        "src": "4594:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4586:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 355,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1797,
                                    "src": "4580:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4580:17:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$1797",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1427,
                                "src": "4580:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4580:28:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "4574:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4528:80:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4507:101:3"
                      },
                      {
                        "expression": {
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 365,
                            "name": "_totalAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "4622:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 366,
                            "name": "assetValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "4638:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4622:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "4622:26:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 370,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "4668:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 371,
                              "name": "assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "4681:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 369,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "4662:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4662:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 373,
                        "nodeType": "ExpressionStatement",
                        "src": "4662:30:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 300,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3969:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 301,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "3973:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3973:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3969:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 375,
                  "initializationExpression": {
                    "assignments": [
                      298
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3966:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "3958:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3958:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 299,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3958:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3989:3:3",
                      "subExpression": {
                        "id": 304,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3989:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 306,
                    "nodeType": "ExpressionStatement",
                    "src": "3989:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3953:750:3"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 376,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4712:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "4712:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 381,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4752:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4752:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4745:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4745:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4745:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4712:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4712:56:3"
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 386,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4778:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 387,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "4795:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collectiveStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "4795:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 389,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "4828:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$24_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "4828:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "4795:53:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4778:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:70:3"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 394,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "4858:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 395,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "4872:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4858:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4858:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 399,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4921:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4921:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "LogNewPoolInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "4899:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "EmitStatement",
                  "src": "4894:43:3"
                }
              ]
            },
            "functionSelector": "4ae99d30",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 271,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 270,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "3744:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3744:9:3"
              }
            ],
            "name": "startCollective",
            "nameLocation": "3717:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3732:2:3"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3754:0:3"
            },
            "scope": 1178,
            "src": "3708:1236:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "5242:103:3",
              "statements": [
                {
                  "assignments": [
                    415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 415,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "nameLocation": "5260:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 426,
                      "src": "5252:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5252:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "baseExpression": {
                      "id": 416,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "5272:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "id": 417,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "5279:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5272:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5252:36:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 420,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5306:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 421,
                          "name": "tokenInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "5317:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                          }
                        },
                        "id": 423,
                        "indexExpression": {
                          "id": 422,
                          "name": "tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5327:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5317:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                          "typeString": "struct BuidlCollective.TokenInfo storage ref"
                        }
                      }
                    ],
                    "id": 424,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5305:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                      "typeString": "tuple(address,struct BuidlCollective.TokenInfo storage ref)"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "5298:40:3"
                }
              ]
            },
            "functionSelector": "a9320688",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readToken",
            "nameLocation": "5152:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5179:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "5171:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5161:32:3"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "5215:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5215:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "5224:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenInfo_$41_memory_ptr",
                    "typeString": "struct BuidlCollective.TokenInfo"
                  },
                  "typeName": {
                    "id": 411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 410,
                      "name": "TokenInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41,
                      "src": "5224:9:3"
                    },
                    "referencedDeclaration": 41,
                    "src": "5224:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenInfo_$41_storage_ptr",
                      "typeString": "struct BuidlCollective.TokenInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5214:27:3"
            },
            "scope": 1178,
            "src": "5143:202:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "5473:513:3",
              "statements": [
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "approvals",
                      "nameLocation": "5497:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "5483:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 435,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5483:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 436,
                        "nodeType": "ArrayTypeName",
                        "src": "5483:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 441,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "5520:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5520:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5509:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 438,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5513:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 439,
                        "nodeType": "ArrayTypeName",
                        "src": "5513:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5509:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5483:51:3"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "contributor",
                      "nameLocation": "5552:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "5544:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5544:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5544:19:3"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "5581:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "5573:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5573:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 450,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5573:17:3"
                },
                {
                  "body": {
                    "id": 508,
                    "nodeType": "Block",
                    "src": "5640:314:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 461,
                            "name": "contributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "5654:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 462,
                                "name": "tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "5668:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                }
                              },
                              "id": 466,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 463,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27,
                                  "src": "5678:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 465,
                                "indexExpression": {
                                  "id": 464,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "5685:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5678:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5668:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                                "typeString": "struct BuidlCollective.TokenInfo storage ref"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "5668:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5654:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "5654:39:3"
                      },
                      {
                        "expression": {
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 470,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "5707:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 477,
                                "name": "contributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "5746:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 480,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5767:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                      "typeString": "contract BuidlCollective"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                      "typeString": "contract BuidlCollective"
                                    }
                                  ],
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5759:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 478,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5759:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5759:13:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 472,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "5725:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 474,
                                    "indexExpression": {
                                      "id": 473,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 452,
                                      "src": "5732:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5725:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 471,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1797,
                                  "src": "5719:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5719:16:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1797",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1439,
                              "src": "5719:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5719:54:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5707:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 484,
                        "nodeType": "ExpressionStatement",
                        "src": "5707:66:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "5791:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 486,
                                "name": "tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "5804:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                }
                              },
                              "id": 490,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 487,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27,
                                  "src": "5814:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 489,
                                "indexExpression": {
                                  "id": 488,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "5821:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5814:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5804:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                                "typeString": "struct BuidlCollective.TokenInfo storage ref"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "5804:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5791:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 506,
                          "nodeType": "Block",
                          "src": "5891:53:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 500,
                                    "name": "approvals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 437,
                                    "src": "5909:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 502,
                                  "indexExpression": {
                                    "id": 501,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 452,
                                    "src": "5919:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5909:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5924:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5909:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 505,
                              "nodeType": "ExpressionStatement",
                              "src": "5909:20:3"
                            }
                          ]
                        },
                        "id": 507,
                        "nodeType": "IfStatement",
                        "src": "5787:157:3",
                        "trueBody": {
                          "id": 499,
                          "nodeType": "Block",
                          "src": "5833:52:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 493,
                                    "name": "approvals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 437,
                                    "src": "5851:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 495,
                                  "indexExpression": {
                                    "id": 494,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 452,
                                    "src": "5861:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5851:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5866:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5851:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 498,
                              "nodeType": "ExpressionStatement",
                              "src": "5851:19:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 454,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "5616:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 455,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5620:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5620:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5616:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 509,
                  "initializationExpression": {
                    "assignments": [
                      452
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5613:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 509,
                        "src": "5605:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5605:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 453,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5605:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5635:3:3",
                      "subExpression": {
                        "id": 458,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "5635:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 460,
                    "nodeType": "ExpressionStatement",
                    "src": "5635:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "5600:354:3"
                },
                {
                  "expression": {
                    "id": 510,
                    "name": "approvals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 437,
                    "src": "5970:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "functionReturnParameters": 432,
                  "id": 511,
                  "nodeType": "Return",
                  "src": "5963:16:3"
                }
              ]
            },
            "functionSelector": "a4c8b46b",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pokeApproval",
            "nameLocation": "5422:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:2:3"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "5458:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 429,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "5458:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 430,
                    "nodeType": "ArrayTypeName",
                    "src": "5458:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:15:3"
            },
            "scope": 1178,
            "src": "5413:573:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "6069:285:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 515,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6083:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6083:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 517,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6101:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6083:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 542,
                    "nodeType": "Block",
                    "src": "6322:26:3",
                    "statements": [
                      {
                        "id": 541,
                        "nodeType": "PlaceholderStatement",
                        "src": "6336:1:3"
                      }
                    ]
                  },
                  "id": 543,
                  "nodeType": "IfStatement",
                  "src": "6079:269:3",
                  "trueBody": {
                    "id": 540,
                    "nodeType": "Block",
                    "src": "6117:199:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 519,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "6131:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 520,
                                      "name": "totalStaked",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "6160:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 521,
                                      "name": "BP",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "6174:2:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "6160:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 523,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "6180:5:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 524,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "6180:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 525,
                                          "name": "lastCheckpoint",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61,
                                          "src": "6198:14:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6180:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 527,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6179:34:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6160:53:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 529,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6159:55:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 530,
                              "name": "totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "6233:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6159:85:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6131:113:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "6131:113:3"
                      },
                      {
                        "expression": {
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 534,
                            "name": "lastCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "6258:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 535,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6275:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6275:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6258:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 538,
                        "nodeType": "ExpressionStatement",
                        "src": "6258:32:3"
                      },
                      {
                        "id": 539,
                        "nodeType": "PlaceholderStatement",
                        "src": "6304:1:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 545,
            "name": "updateCheckpoint",
            "nameLocation": "6050:16:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6066:2:3"
            },
            "src": "6041:313:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "6422:1214:3",
              "statements": [
                {
                  "assignments": [
                    553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "6440:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6432:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6432:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "expression": {
                      "id": 554,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6447:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6447:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6432:25:3"
                },
                {
                  "assignments": [
                    558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 558,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "6475:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6467:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 557,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6467:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 563,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 561,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "6488:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                          "typeString": "contract BuidlCollective"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                          "typeString": "contract BuidlCollective"
                        }
                      ],
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6480:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 559,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6480:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6480:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6467:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 565,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "6512:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 567,
                          "indexExpression": {
                            "id": 566,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "6522:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6512:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 568,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "6531:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6512:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555345522042414c414e4345204e4f5420454e4f554748",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6544:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb902c597ada2a369cea97caa8183a979e56b66635e4895bc7cdc78a63fa6697",
                          "typeString": "literal_string \"USER BALANCE NOT ENOUGH\""
                        },
                        "value": "USER BALANCE NOT ENOUGH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb902c597ada2a369cea97caa8183a979e56b66635e4895bc7cdc78a63fa6697",
                          "typeString": "literal_string \"USER BALANCE NOT ENOUGH\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6504:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6504:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "6504:66:3"
                },
                {
                  "id": 585,
                  "nodeType": "UncheckedBlock",
                  "src": "6691:107:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 573,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "6715:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 575,
                          "indexExpression": {
                            "id": 574,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "6725:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6715:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 576,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "6734:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6715:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 578,
                      "nodeType": "ExpressionStatement",
                      "src": "6715:30:3"
                    },
                    {
                      "expression": {
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 579,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1433,
                            "src": "6759:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 581,
                          "indexExpression": {
                            "id": 580,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "6769:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6759:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 582,
                          "name": "_assetValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 547,
                          "src": "6776:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6759:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 584,
                      "nodeType": "ExpressionStatement",
                      "src": "6759:28:3"
                    }
                  ]
                },
                {
                  "assignments": [
                    587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "_depositedShare",
                      "nameLocation": "6816:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6808:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6808:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 588,
                              "name": "_assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "6835:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 589,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "6849:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "6835:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 591,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "6854:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6835:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 593,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6834:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 594,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6885:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6834:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6808:88:3"
                },
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "mutability": "mutable",
                      "name": "_lastCheckpointTWAP",
                      "nameLocation": "6914:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6906:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 597,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6906:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "id": 599,
                    "name": "lastTWAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "6936:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6906:38:3"
                },
                {
                  "assignments": [
                    602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 602,
                      "mutability": "mutable",
                      "name": "_lastCheckpointTime",
                      "nameLocation": "6962:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "6954:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 601,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6954:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "expression": {
                      "id": 603,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6984:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6984:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6954:45:3"
                },
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "_lastCheckpointPercentageVested",
                      "nameLocation": "7017:31:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "7009:39:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7009:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 608,
                      "name": "getVestingPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "7051:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7051:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7009:61:3"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "_stakePosition",
                      "nameLocation": "7096:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 648,
                      "src": "7080:30:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$79_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo"
                      },
                      "typeName": {
                        "id": 612,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 611,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79,
                          "src": "7080:8:3"
                        },
                        "referencedDeclaration": 79,
                        "src": "7080:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage_ptr",
                          "typeString": "struct BuidlCollective.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 615,
                        "name": "_depositedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "7135:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 616,
                        "name": "_lastCheckpointTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7164:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 617,
                        "name": "_lastCheckpointTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "7197:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 618,
                        "name": "_lastCheckpointPercentageVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7230:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "UserInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "7113:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserInfo_$79_storage_ptr_$",
                        "typeString": "type(struct BuidlCollective.UserInfo storage pointer)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7113:158:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$79_memory_ptr",
                      "typeString": "struct BuidlCollective.UserInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7080:191:3"
                },
                {
                  "expression": {
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 621,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "7281:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                          "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                        }
                      },
                      "id": 624,
                      "indexExpression": {
                        "expression": {
                          "id": 622,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7290:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7290:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7281:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                        "typeString": "struct BuidlCollective.UserInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 625,
                      "name": "_stakePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "7304:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$79_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo memory"
                      }
                    },
                    "src": "7281:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                      "typeString": "struct BuidlCollective.UserInfo storage ref"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7281:37:3"
                },
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 628,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "7328:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 629,
                      "name": "_assetValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "7343:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7328:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "7328:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "7378:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 634,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "7384:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 635,
                        "name": "_assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 547,
                        "src": "7388:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 632,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "7369:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "EmitStatement",
                  "src": "7364:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7444:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7444:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 641,
                        "name": "_assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 547,
                        "src": "7468:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 642,
                        "name": "_depositedShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "7493:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 643,
                        "name": "_lastCheckpointTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7522:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 644,
                        "name": "_lastCheckpointTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "7555:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 645,
                        "name": "_lastCheckpointPercentageVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "7588:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 638,
                      "name": "LogTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "7415:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7415:214:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "EmitStatement",
                  "src": "7410:219:3"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 649,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 549,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "6405:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6405:16:3"
              }
            ],
            "name": "stake",
            "nameLocation": "6369:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_assetValue",
                  "nameLocation": "6383:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "6375:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6374:21:3"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6422:0:3"
            },
            "scope": 1178,
            "src": "6360:1276:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "7710:408:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 657,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7727:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7727:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 656,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "7720:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7720:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "7720:18:3"
                },
                {
                  "assignments": [
                    662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 662,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "7756:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "7748:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 661,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7748:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 663,
                              "name": "_assetValueLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "7761:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 664,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "7779:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "7761:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 666,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "7784:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7761:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 668,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7760:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 669,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "7803:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7760:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7748:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 673,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 662,
                          "src": "7845:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 674,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "7849:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 677,
                            "indexExpression": {
                              "expression": {
                                "id": 675,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7858:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7858:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7849:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "7849:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7845:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e5354414b4520414d4f554e5420544f4f20424947",
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7898:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        },
                        "value": "UNSTAKE AMOUNT TOO BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7824:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7824:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "7824:108:3"
                },
                {
                  "expression": {
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 683,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "7942:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 686,
                        "indexExpression": {
                          "expression": {
                            "id": 684,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7951:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7951:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7942:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "7942:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 688,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "7981:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7942:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "7942:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 698,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8022:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8022:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 700,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "8034:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 694,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8006:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7998:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 692,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7998:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7998:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 691,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1797,
                          "src": "7992:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7992:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1797",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1545,
                      "src": "7992:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7992:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "7992:58:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8083:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8083:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 706,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "8095:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 703,
                      "name": "LogTokensUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1841,
                      "src": "8065:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8065:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "EmitStatement",
                  "src": "8060:51:3"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 653,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "7693:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7693:16:3"
              }
            ],
            "name": "unstake",
            "nameLocation": "7651:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_assetValueLeft",
                  "nameLocation": "7667:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "7659:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7659:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7658:25:3"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7710:0:3"
            },
            "scope": 1178,
            "src": "7642:476:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "8172:357:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 715,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "8186:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 718,
                        "indexExpression": {
                          "expression": {
                            "id": 716,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8195:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8195:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8186:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "8186:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8225:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8186:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 723,
                  "nodeType": "IfStatement",
                  "src": "8182:53:3",
                  "trueBody": {
                    "functionReturnParameters": 714,
                    "id": 722,
                    "nodeType": "Return",
                    "src": "8228:7:3"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8251:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8251:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 724,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "8244:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8244:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "8244:18:3"
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "mutability": "mutable",
                      "name": "assetValue",
                      "nameLocation": "8280:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8272:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8272:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 731,
                                  "name": "userInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "8294:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                    "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                  }
                                },
                                "id": 734,
                                "indexExpression": {
                                  "expression": {
                                    "id": 732,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8303:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8303:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8294:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                  "typeString": "struct BuidlCollective.UserInfo storage ref"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "depositedShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "8294:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 736,
                              "name": "totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "8344:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8294:61:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 738,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8293:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 739,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8371:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8293:93:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 741,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "8401:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8293:110:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8272:131:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 751,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8443:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8443:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 753,
                        "name": "assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8455:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 747,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8427:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8419:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 745,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8419:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8419:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 744,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1797,
                          "src": "8413:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8413:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1797",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1545,
                      "src": "8413:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8413:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "8413:53:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 757,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8499:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8499:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 759,
                        "name": "assetValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8511:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 756,
                      "name": "LogTokensUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1841,
                      "src": "8481:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8481:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "EmitStatement",
                  "src": "8476:46:3"
                }
              ]
            },
            "functionSelector": "35322f37",
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 712,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "8155:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8155:16:3"
              }
            ],
            "name": "unstakeAll",
            "nameLocation": "8133:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8143:2:3"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8172:0:3"
            },
            "scope": 1178,
            "src": "8124:405:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "8578:35:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8595:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8595:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 768,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "8588:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:18:3"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 765,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 545,
                  "src": "8561:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8561:16:3"
              }
            ],
            "name": "claim",
            "nameLocation": "8544:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8549:2:3"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8578:0:3"
            },
            "scope": 1178,
            "src": "8535:78:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "8682:976:3",
              "statements": [
                {
                  "assignments": [
                    782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 782,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "8740:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "8732:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 781,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8732:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 787,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 784,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "8770:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8776:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 783,
                      "name": "calculateShareToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "8748:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,bool) view returns (uint256)"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8748:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8732:49:3"
                },
                {
                  "assignments": [
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 792,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "8808:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "8791:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8791:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 791,
                        "nodeType": "ArrayTypeName",
                        "src": "8791:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 794,
                  "initialValue": {
                    "id": 793,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "8818:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8791:33:3"
                },
                {
                  "assignments": [
                    799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "8851:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 908,
                      "src": "8834:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 797,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8834:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 798,
                        "nodeType": "ArrayTypeName",
                        "src": "8834:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 803,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 792,
                          "src": "8875:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8875:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8861:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8865:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 801,
                        "nodeType": "ArrayTypeName",
                        "src": "8865:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8861:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8834:56:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 807,
                      "name": "share",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "8904:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8912:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8904:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 907,
                  "nodeType": "IfStatement",
                  "src": "8900:752:3",
                  "trueBody": {
                    "id": 906,
                    "nodeType": "Block",
                    "src": "8915:737:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 810,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "8929:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 812,
                              "indexExpression": {
                                "id": 811,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "8938:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8929:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTWAP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74,
                            "src": "8929:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 814,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "8965:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8929:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "8929:44:3"
                      },
                      {
                        "expression": {
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 817,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "8987:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 819,
                              "indexExpression": {
                                "id": 818,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "8996:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8987:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointPercentageVested",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "8987:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 821,
                              "name": "getVestingPercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1177,
                              "src": "9035:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9035:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8987:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 824,
                        "nodeType": "ExpressionStatement",
                        "src": "8987:67:3"
                      },
                      {
                        "expression": {
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 825,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "9068:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 827,
                              "indexExpression": {
                                "id": 826,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "9077:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9068:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "9068:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 829,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9104:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9104:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9068:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "9068:51:3"
                      },
                      {
                        "expression": {
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 833,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "9133:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 835,
                              "indexExpression": {
                                "id": 834,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "9142:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9133:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "9133:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 837,
                            "name": "share",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "9166:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9133:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "9133:38:3"
                      },
                      {
                        "assignments": [
                          841
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 841,
                            "mutability": "mutable",
                            "name": "shareToBurn",
                            "nameLocation": "9193:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 906,
                            "src": "9185:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 840,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9185:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 848,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 842,
                                  "name": "share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "9208:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 843,
                                  "name": "totalAssets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43,
                                  "src": "9216:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9208:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 845,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9207:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 846,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "9231:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9207:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9185:61:3"
                      },
                      {
                        "assignments": [
                          850
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 850,
                            "mutability": "mutable",
                            "name": "assetValue",
                            "nameLocation": "9268:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 906,
                            "src": "9260:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 849,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9260:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 854,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 851,
                            "name": "shareToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "9281:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 852,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9295:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "9281:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9260:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 858,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9325:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$1178",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9317:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 856,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9317:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9317:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 860,
                              "name": "assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 850,
                              "src": "9332:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 855,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "9311:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9311:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "9311:32:3"
                      },
                      {
                        "body": {
                          "id": 897,
                          "nodeType": "Block",
                          "src": "9402:174:3",
                          "statements": [
                            {
                              "assignments": [
                                875
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 875,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "9428:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 897,
                                  "src": "9420:14:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 874,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9420:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 880,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 877,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 782,
                                    "src": "9457:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 878,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 864,
                                    "src": "9464:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 876,
                                  "name": "convertShareToToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "9437:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9437:29:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9420:46:3"
                            },
                            {
                              "expression": {
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 881,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 799,
                                    "src": "9484:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 883,
                                  "indexExpression": {
                                    "id": 882,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 864,
                                    "src": "9492:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9484:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 884,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 875,
                                  "src": "9497:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9484:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 886,
                              "nodeType": "ExpressionStatement",
                              "src": "9484:19:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 893,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 776,
                                    "src": "9548:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 894,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 875,
                                    "src": "9554:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 888,
                                          "name": "_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 792,
                                          "src": "9527:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 890,
                                        "indexExpression": {
                                          "id": 889,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 864,
                                          "src": "9535:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9527:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 887,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1797,
                                      "src": "9521:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1797_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9521:17:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1797",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1545,
                                  "src": "9521:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9521:40:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 896,
                              "nodeType": "ExpressionStatement",
                              "src": "9521:40:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 867,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "9377:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 868,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "9381:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9381:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9377:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 898,
                        "initializationExpression": {
                          "assignments": [
                            864
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 864,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9370:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 898,
                              "src": "9362:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 863,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9362:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 866,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9374:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9362:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9397:3:3",
                            "subExpression": {
                              "id": 871,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "9397:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 873,
                          "nodeType": "ExpressionStatement",
                          "src": "9397:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "9357:219:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 900,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "9611:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 901,
                              "name": "share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "9617:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 902,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "9624:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 903,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "9633:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 899,
                            "name": "LogTokensClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "9594:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9594:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "EmitStatement",
                        "src": "9589:52:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "8628:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8643:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "8635:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8635:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8634:14:3"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "8675:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "8667:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8667:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8666:15:3"
            },
            "scope": 1178,
            "src": "8619:1039:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "9779:168:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 919,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 913,
                          "src": "9797:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 920,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "9807:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9807:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9797:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e4964204f5554204f4620424f554e44",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9822:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e4b6ebfa97bf10611ceaa6a5f54b8c438953bde6ac20a53ed93791301a5c6ac",
                          "typeString": "literal_string \"tokenId OUT OF BOUND\""
                        },
                        "value": "tokenId OUT OF BOUND"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e4b6ebfa97bf10611ceaa6a5f54b8c438953bde6ac20a53ed93791301a5c6ac",
                          "typeString": "literal_string \"tokenId OUT OF BOUND\""
                        }
                      ],
                      "id": 918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9789:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9789:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "9789:56:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 926,
                                  "name": "tokenInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "9875:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$41_storage_$",
                                    "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                  }
                                },
                                "id": 930,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 927,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "9885:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 929,
                                  "indexExpression": {
                                    "id": 928,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 913,
                                    "src": "9892:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9885:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9875:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenInfo_$41_storage",
                                  "typeString": "struct BuidlCollective.TokenInfo storage ref"
                                }
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "9875:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 932,
                              "name": "share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "9911:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9875:41:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 934,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9874:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 935,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "9920:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9874:61:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 937,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "9938:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9874:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 917,
                  "id": 939,
                  "nodeType": "Return",
                  "src": "9855:85:3"
                }
              ]
            },
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertShareToToken",
            "nameLocation": "9673:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "9710:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "9702:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9702:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9733:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "9725:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9725:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9692:54:3"
            },
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "9770:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9770:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9769:9:3"
            },
            "scope": 1178,
            "src": "9664:283:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "10473:289:3",
              "statements": [
                {
                  "assignments": [
                    950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "10491:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 992,
                      "src": "10483:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10483:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 955,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "10521:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10527:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 951,
                      "name": "calculateShareToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "10499:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,bool) view returns (uint256)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10499:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10483:50:3"
                },
                {
                  "assignments": [
                    960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "_claimables",
                      "nameLocation": "10560:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 992,
                      "src": "10543:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10543:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 959,
                        "nodeType": "ArrayTypeName",
                        "src": "10543:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 967,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 964,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "10588:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10588:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10574:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10578:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 962,
                        "nodeType": "ArrayTypeName",
                        "src": "10578:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10574:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10543:59:3"
                },
                {
                  "body": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "10656:71:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 979,
                              "name": "_claimables",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "10670:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 981,
                            "indexExpression": {
                              "id": 980,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "10682:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10670:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 983,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 950,
                                "src": "10707:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 984,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "10714:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 982,
                              "name": "convertShareToToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "10687:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10687:29:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10670:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 987,
                        "nodeType": "ExpressionStatement",
                        "src": "10670:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 972,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "10632:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 973,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "10636:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10636:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10632:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 989,
                  "initializationExpression": {
                    "assignments": [
                      969
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 969,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10625:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "10617:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10617:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 971,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10629:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10617:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10651:3:3",
                      "subExpression": {
                        "id": 976,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "10651:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 978,
                    "nodeType": "ExpressionStatement",
                    "src": "10651:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10612:115:3"
                },
                {
                  "expression": {
                    "id": 990,
                    "name": "_claimables",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 960,
                    "src": "10744:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 948,
                  "id": 991,
                  "nodeType": "Return",
                  "src": "10737:18:3"
                }
              ]
            },
            "functionSelector": "a583024b",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimable",
            "nameLocation": "10407:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10428:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "10420:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10420:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10419:14:3"
            },
            "returnParameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "10455:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 945,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10455:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 946,
                    "nodeType": "ArrayTypeName",
                    "src": "10455:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10454:18:3"
            },
            "scope": 1178,
            "src": "10398:364:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "11102:1280:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1002,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11116:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11116:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1004,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "11135:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1006,
                        "indexExpression": {
                          "id": 1005,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "11144:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11135:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "11135:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11116:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1011,
                  "nodeType": "IfStatement",
                  "src": "11112:66:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11177:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1001,
                    "id": 1010,
                    "nodeType": "Return",
                    "src": "11170:8:3"
                  }
                },
                {
                  "assignments": [
                    1013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1013,
                      "mutability": "mutable",
                      "name": "elapsedTime",
                      "nameLocation": "11196:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "11188:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11188:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1021,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1014,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11210:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11210:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1016,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "11240:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1018,
                        "indexExpression": {
                          "id": 1017,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "11249:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11240:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "11240:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11210:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11188:85:3"
                },
                {
                  "assignments": [
                    1023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1023,
                      "mutability": "mutable",
                      "name": "elapsedVestingPercentage",
                      "nameLocation": "11291:24:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "11283:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1022,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11283:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1031,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1024,
                        "name": "getVestingPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "11318:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11318:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1026,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "11352:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 1028,
                        "indexExpression": {
                          "id": 1027,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "11361:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11352:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointPercentageVested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "11352:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11318:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11283:114:3"
                },
                {
                  "assignments": [
                    1033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1033,
                      "mutability": "mutable",
                      "name": "elapsedTWAP",
                      "nameLocation": "11436:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "11428:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11428:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11428:19:3"
                },
                {
                  "condition": {
                    "id": 1035,
                    "name": "updated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "11461:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1068,
                    "nodeType": "Block",
                    "src": "11559:219:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1046,
                            "name": "elapsedTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "11573:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1047,
                                "name": "lastTWAP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "11603:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1048,
                                    "name": "userInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "11630:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                      "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                    }
                                  },
                                  "id": 1050,
                                  "indexExpression": {
                                    "id": 1049,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 995,
                                    "src": "11639:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11630:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                    "typeString": "struct BuidlCollective.UserInfo storage ref"
                                  }
                                },
                                "id": 1051,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lastCheckpointTWAP",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 74,
                                "src": "11630:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11603:60:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1053,
                                        "name": "totalStaked",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65,
                                        "src": "11683:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1054,
                                        "name": "BP",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49,
                                        "src": "11697:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "src": "11683:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1059,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 1056,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "11703:5:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1057,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "11703:15:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 1058,
                                            "name": "lastCheckpoint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61,
                                            "src": "11721:14:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11703:32:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1060,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "11702:34:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11683:53:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1062,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11682:55:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1063,
                                "name": "totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "11756:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11682:85:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11603:164:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11573:194:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "11573:194:3"
                      }
                    ]
                  },
                  "id": 1069,
                  "nodeType": "IfStatement",
                  "src": "11457:321:3",
                  "trueBody": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "11470:83:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1036,
                            "name": "elapsedTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "11484:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1037,
                              "name": "lastTWAP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "11498:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1038,
                                  "name": "userInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "11509:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                    "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                  }
                                },
                                "id": 1040,
                                "indexExpression": {
                                  "id": 1039,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 995,
                                  "src": "11518:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11509:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                  "typeString": "struct BuidlCollective.UserInfo storage ref"
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastCheckpointTWAP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74,
                              "src": "11509:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11498:44:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11484:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "11484:58:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "avgPercentageStaked",
                      "nameLocation": "11795:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "11787:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1070,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11787:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1072,
                      "name": "elapsedTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "11817:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1073,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "11831:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11817:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11787:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1076,
                      "name": "avgPercentageStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "11856:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11879:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11856:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1081,
                  "nodeType": "IfStatement",
                  "src": "11852:38:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11889:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1001,
                    "id": 1080,
                    "nodeType": "Return",
                    "src": "11882:8:3"
                  }
                },
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "userShareOfStaked",
                      "nameLocation": "11972:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "11964:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11964:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1093,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1084,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "11993:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$79_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 1086,
                              "indexExpression": {
                                "id": 1085,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "12002:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11993:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$79_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "11993:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1088,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12025:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11993:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1090,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11992:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1091,
                      "name": "avgPercentageStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "12043:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11992:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11964:98:3"
                },
                {
                  "assignments": [
                    1095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1095,
                      "mutability": "mutable",
                      "name": "userEntitlement",
                      "nameLocation": "12118:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1118,
                      "src": "12110:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12110:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1102,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1096,
                            "name": "elapsedVestingPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "12137:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1097,
                            "name": "userShareOfStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "12176:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12137:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1099,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12136:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1100,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "12197:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12136:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12110:89:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1103,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "12214:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1104,
                      "name": "releaseFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "12229:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12214:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1116,
                    "nodeType": "Block",
                    "src": "12297:79:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1109,
                                  "name": "userEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1095,
                                  "src": "12319:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1110,
                                  "name": "elapsedTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1013,
                                  "src": "12337:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12319:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1112,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12318:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1113,
                            "name": "releaseFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "12352:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12318:47:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1001,
                        "id": 1115,
                        "nodeType": "Return",
                        "src": "12311:54:3"
                      }
                    ]
                  },
                  "id": 1117,
                  "nodeType": "IfStatement",
                  "src": "12210:166:3",
                  "trueBody": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "12244:47:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1106,
                          "name": "userEntitlement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1095,
                          "src": "12265:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1001,
                        "id": 1107,
                        "nodeType": "Return",
                        "src": "12258:22:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e9963916",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateShareToClaim",
            "nameLocation": "11000:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "11039:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "11031:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11031:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "updated",
                  "nameLocation": "11058:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "11053:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11053:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11021:50:3"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "11093:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11093:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11092:9:3"
            },
            "scope": 1178,
            "src": "10991:1391:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "12497:400:3",
              "statements": [
                {
                  "assignments": [
                    1125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1125,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "12514:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "12507:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1124,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12507:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1128,
                  "initialValue": {
                    "expression": {
                      "id": 1126,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "12526:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collectiveStart",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "12526:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12507:49:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1129,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "12570:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12583:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12570:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1134,
                  "nodeType": "IfStatement",
                  "src": "12566:28:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12593:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1123,
                    "id": 1133,
                    "nodeType": "Return",
                    "src": "12586:8:3"
                  }
                },
                {
                  "assignments": [
                    1136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "vestingTime",
                      "nameLocation": "12611:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "12604:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1135,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12604:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1139,
                  "initialValue": {
                    "expression": {
                      "id": 1137,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "12625:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$24_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vestingTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "12625:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12604:47:3"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nameLocation": "12668:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "12661:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12661:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1149,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1144,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12688:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12688:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12681:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 1142,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12681:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12681:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1147,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "12707:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12681:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12661:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1150,
                      "name": "vestingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "12730:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 1151,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
                      "src": "12745:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12730:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "IfStatement",
                  "src": "12726:40:3",
                  "trueBody": {
                    "expression": {
                      "id": 1153,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "12764:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "functionReturnParameters": 1123,
                    "id": 1154,
                    "nodeType": "Return",
                    "src": "12757:9:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1156,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
                      "src": "12780:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 1157,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "12794:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$24_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cliff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "12794:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "12780:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1162,
                  "nodeType": "IfStatement",
                  "src": "12776:48:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12823:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1123,
                    "id": 1161,
                    "nodeType": "Return",
                    "src": "12816:8:3"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1165,
                                "name": "timePassed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1141,
                                "src": "12850:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 1164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12842:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1163,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12842:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12842:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1167,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12864:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12842:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1169,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12841:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1172,
                          "name": "vestingTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "12878:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12870:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12870:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12870:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12841:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1123,
                  "id": 1175,
                  "nodeType": "Return",
                  "src": "12834:56:3"
                }
              ]
            },
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingPercent",
            "nameLocation": "12445:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12462:2:3"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "12488:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12488:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12487:9:3"
            },
            "scope": 1178,
            "src": "12436:461:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1179,
        "src": "125:12774:3",
        "usedErrors": []
      }
    ],
    "src": "0:12900:3"
  },
  "bytecode": "60e06040526203f4806012553480156200001857600080fd5b506040516200335f3803806200335f8339810160408190526200003b91620002e8565b82828282600090805190602001906200005692919062000175565b5081516200006c90600190602085019062000175565b5060ff81166080524660a05262000082620000d9565b60c0525050600b80546001600160a01b031916339081179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f3915060200160405180910390a15050506200044e565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200010d9190620003aa565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b82805462000183906200036d565b90600052602060002090601f016020900481019282620001a75760008555620001f2565b82601f10620001c257805160ff1916838001178555620001f2565b82800160010185558215620001f2579182015b82811115620001f2578251825591602001919060010190620001d5565b506200020092915062000204565b5090565b5b8082111562000200576000815560010162000205565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024357600080fd5b81516001600160401b03808211156200026057620002606200021b565b604051601f8301601f19908116603f011681019082821181831017156200028b576200028b6200021b565b81604052838152602092508683858801011115620002a857600080fd5b600091505b83821015620002cc5785820183015181830184015290820190620002ad565b83821115620002de5760008385830101525b9695505050505050565b600080600060608486031215620002fe57600080fd5b83516001600160401b03808211156200031657600080fd5b620003248783880162000231565b945060208601519150808211156200033b57600080fd5b506200034a8682870162000231565b925050604084015160ff811681146200036257600080fd5b809150509250925092565b600181811c908216806200038257607f821691505b60208210811415620003a457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003c757607f831692505b6020808410821415620003e857634e487b7160e01b86526022600452602486fd5b818015620003ff5760018114620004115762000440565b60ff1986168952848901965062000440565b60008a81526020902060005b86811015620004385781548b8201529085019083016200041d565b505084890196505b509498975050505050505050565b60805160a05160c051612ee16200047e6000396000610bd201526000610b9d015260006103480152612ee16000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80637d9fce4d1161013b578063d32e81a5116100b8578063e2f273bd1161007c578063e2f273bd146105c8578063e9963916146105db578063f5dab711146105ee578063f851a4401461065b578063fed455871461066e57600080fd5b8063d32e81a51461052a578063d505accf14610533578063d77a1d3a14610546578063dd62ed3e1461054f578063e0c9802f1461057a57600080fd5b8063a4c8b46b116100ff578063a4c8b46b1461047d578063a583024b14610492578063a694fc3a146104b2578063a9059cbb146104c5578063a9320688146104d857600080fd5b80637d9fce4d1461041f5780637ecebe001461042e578063817b1cd21461044e57806395d89b41146104575780639cfdbd5e1461045f57600080fd5b806335322f37116101c95780634e71d92d1161018d5780634e71d92d146103b05780634f64b2be146103b85780635da69cb6146103e35780636b954292146103ec57806370a08231146103ff57600080fd5b806335322f371461037c5780633644e5151461038457806336e9b3441461038c5780634ae99d30146103955780634c33fe941461039d57600080fd5b80631959a002116102105780631959a0021461029f57806323b872dd146102f45780632e17de781461030757806330adf81f1461031c578063313ce5671461034357600080fd5b806301e1d1141461024257806306fdde031461025e578063095ea7b31461027357806318160ddd14610296575b600080fd5b61024b600c5481565b6040519081526020015b60405180910390f35b610266610681565b6040516102559190612391565b6102866102813660046123b9565b61070f565b6040519015158152602001610255565b61024b60025481565b6102d46102ad3660046123e5565b600e6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610255565b610286610302366004612402565b61077c565b61031a610315366004612443565b61085c565b005b61024b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610255565b61031a610a22565b61024b610b99565b61024b60085481565b61031a610bf4565b61031a6103ab3660046123e5565b610f2d565b61031a610f60565b6103cb6103c6366004612443565b610fca565b6040516001600160a01b039091168152602001610255565b61024b60125481565b61031a6103fa366004612773565b610ff4565b61024b61040d3660046123e5565b60036020526000908152604090205481565b61024b670de0b6b3a764000081565b61024b61043c3660046123e5565b60056020526000908152604090205481565b61024b60115481565b6102666112a8565b61046861271081565b60405163ffffffff9091168152602001610255565b6104856112b5565b6040516102559190612856565b6104a56104a03660046123e5565b61149a565b60405161025591906128d7565b61031a6104c0366004612443565b611544565b6102866104d33660046123b9565b6117c3565b6104eb6104e6366004612443565b611829565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b0316818301529101519091166060820152608001610255565b61024b600f5481565b61031a6105413660046128f9565b6118ba565b61024b60105481565b61024b61055d36600461296a565b600460209081526000928352604080842090915290825290205481565b600d546105a19063ffffffff808216916401000000008104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610255565b61031a6105d63660046123e5565b611b0b565b61024b6105e93660046129b1565b611b70565b61062f6105fc3660046123e5565b600a6020526000908152604090208054600182015460029092015490916001600160801b0316906001600160a01b031683565b604080519384526001600160801b0390921660208401526001600160a01b031690820152606001610255565b600b546103cb906001600160a01b031681565b61026661067c366004612443565b611d3f565b6000805461068e906129df565b80601f01602080910402602001604051908101604052809291908181526020018280546106ba906129df565b80156107075780601f106106dc57610100808354040283529160200191610707565b820191906000526020600020905b8154815290600101906020018083116106ea57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061076a9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146107d8576107b38382612a30565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610800908490612a30565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020612e8c833981519152906108499087815260200190565b60405180910390a3506001949350505050565b600f54421115610a1657600c54600f546108769042612a30565b6011546108869061271090612a47565b6108909190612a47565b61089a9190612a66565b601060008282546108ab9190612a88565b909155505042600f556108bd33611d6a565b50600c54600090670de0b6b3a76400006108d961271085612a47565b6108e39190612a47565b6108ed9190612a66565b336000908152600e6020526040902054909150811061094c5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b336000908152600e60205260408120805483929061096b908490612a30565b909155505060405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190612aa0565b5060408051338152602081018490527f0f499973e7d3e9601430a8fbff3e36e448210cda3fbec16fad26da79f6d0dba4910160405180910390a15050565b6108bd33611d6a565b50565b600f54421115610b8357600c54600f54610a3c9042612a30565b601154610a4c9061271090612a47565b610a569190612a47565b610a609190612a66565b60106000828254610a719190612a88565b909155505042600f55336000908152600e6020526040902054610a9057565b610a9933611d6a565b50600c54336000908152600e6020526040812054909161271091670de0b6b3a764000091610ac691612a47565b610ad09190612a66565b610ada9190612a66565b60405163a9059cbb60e01b815233600482015260248101829052909150309063a9059cbb906044016020604051808303816000875af1158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b459190612aa0565b5060408051338152602081018390527f0f499973e7d3e9601430a8fbff3e36e448210cda3fbec16fad26da79f6d0dba491015b60405180910390a150565b336000908152600e6020526040902054610a9057565b60007f00000000000000000000000000000000000000000000000000000000000000004614610bcf57610bca611ff2565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b600b546001600160a01b03163314610c0b57600080fd5b60065460ff1615610c1b57600080fd5b6006805460ff19166001179055600980546040805160208084028201810190925282815260009390929091830182828015610c7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c61575b50505050509050610ca9604080516060810182526000808252602082018190529181019190915290565b6000805b8351811015610ea857600a6000858381518110610ccc57610ccc612abd565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251606081018452815480825260018301546001600160801b0316938201849052600290920154909416928401839052875193965092879085908110610d3c57610d3c612abd565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc19190612aa0565b506000878581518110610dd657610dd6612abd565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190612ad3565b610e4a90600a612bd4565b610e5d6001600160801b03841686612a47565b610e6f90670de0b6b3a7640000612a47565b610e799190612a66565b9050610e858187612a88565b9550610e91838261208c565b505050508080610ea090612be3565b915050610cad565b50600d805463ffffffff60401b1916600160401b4263ffffffff90811682029290921792839055610ee792640100000000810483169291900416612bfe565b63ffffffff16600f55600c8190556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a1505050565b600b546001600160a01b03163314610f4457600080fd5b60065460ff1615610f5457600080fd5b806001600160a01b0316ff5b600f54421115610fc157600c54600f54610f7a9042612a30565b601154610f8a9061271090612a47565b610f949190612a47565b610f9e9190612a66565b60106000828254610faf9190612a88565b909155505042600f55610a1f33611d6a565b610a1f33611d6a565b60098181548110610fda57600080fd5b6000918252602090912001546001600160a01b0316905081565b600654610100900460ff161561100957600080fd5b6006805461ff001916610100179055600b80546001600160a01b031916331790558451600d80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b199081169282166401000000000267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b8181101561124257600788828151811061109f5761109f612abd565b602090810291909101810151825460018101845560009384529282902081516110d194919091019291909101906122ab565b50600060405180606001604052808584815181106110f1576110f1612abd565b6020026020010151815260200187848151811061111057611110612abd565b60200260200101516001600160801b0316815260200186848151811061113857611138612abd565b60200260200101516001600160a01b0316815250905080600a600089858151811061116557611165612abd565b6020908102919091018101516001600160a01b03908116835282820193909352604091820160002084518155908401516001820180546fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055920151600290920180546001600160a01b0319169290911691909117905586516009908890849081106111f4576111f4612abd565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055508061123a81612be3565b915050611083565b50600954600855600d546040517f489170cfe0f7fcdd8410d20d8a81df8f038624bbcd9814cca42d477e9d1bb46991611297918a91899189918991899163ffffffff6401000000008204811692911690612c98565b60405180910390a150505050505050565b6001805461068e906129df565b60095460609060009067ffffffffffffffff8111156112d6576112d661245c565b6040519080825280602002602001820160405280156112ff578160200160208202803683370190505b50905060008060005b60095481101561149157600a60006009838154811061132957611329612abd565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060020154600980549190921694508290811061137057611370612abd565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156113c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ed9190612d6d565b9150600a60006009838154811061140657611406612abd565b60009182526020808320909101546001600160a01b03168352820192909252604001902054821061145a57600184828151811061144557611445612abd565b9115156020928302919091019091015261147f565b600084828151811061146e5761146e612abd565b911515602092830291909101909101525b8061148981612be3565b915050611308565b50919392505050565b606060006114a9836000611b70565b60095490915060009067ffffffffffffffff8111156114ca576114ca61245c565b6040519080825280602002602001820160405280156114f3578160200160208202803683370190505b50905060005b60095481101561153c5761150d83826120e6565b82828151811061151f5761151f612abd565b60209081029190910101528061153481612be3565b9150506114f9565b509392505050565b600f5442111561176857600c54600f5461155e9042612a30565b60115461156e9061271090612a47565b6115789190612a47565b6115829190612a66565b601060008282546115939190612a88565b909155505042600f553360008181526003602052604090205430908311156115f75760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610943565b6001600160a01b03808316600090815260036020526040808220805487900390559183168152908120805485019055600c54670de0b6b3a764000061163e61271087612a47565b6116489190612a47565b6116529190612a66565b6010549091504260006116636121a5565b60408051608081018252868152602080820187815282840187815260608401868152336000908152600e909452948320845181559151600183015551600282015592516003909301929092556011805493945090928a92906116c6908490612a88565b92505081905550856001600160a01b0316876001600160a01b0316600080516020612e8c8339815191528a60405161170091815260200190565b60405180910390a360408051338152602081018a9052908101869052606081018590526080810184905260a081018390527f9dfa08abae6c607453d7ef936fd3d42c4afc359dcfa226a49be696604a2468459060c00160405180910390a15050505050505050565b3360008181526003602052604090205430908311156115f75760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610943565b336000908152600360205260408120805483919083906117e4908490612a30565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020612e8c8339815191529061076a9086815260200190565b6040805160608101825260008082526020820181905291810182905260006009848154811061185a5761185a612abd565b60009182526020808320909101546001600160a01b03908116808452600a835260409384902084516060810186528154815260018201546001600160801b0316948101949094526002015490911692820192909252909590945092505050565b4284101561190a5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610943565b6000611914610b99565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611a2d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611a635750886001600160a01b0316816001600160a01b0316145b611aa05760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610943565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b600b546001600160a01b03163314611b2257600080fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f390602001610b78565b6001600160a01b0382166000908152600e60205260408120600201544211611b9a57506000610776565b6001600160a01b0383166000908152600e6020526040812060020154611bc09042612a30565b6001600160a01b0385166000908152600e602052604081206003015491925090611be86121a5565b611bf29190612a30565b905060008415611c2c576001600160a01b0386166000908152600e6020526040902060010154601054611c259190612a30565b9050611c96565b600c54600f54611c3c9042612a30565b601154611c4c9061271090612a47565b611c569190612a47565b611c609190612a66565b6001600160a01b0387166000908152600e6020526040902060010154601054611c899190612a30565b611c939190612a88565b90505b6000611ca28483612a66565b905080611cb6576000945050505050610776565b6001600160a01b0387166000908152600e60205260408120548290611cde9061271090612a47565b611ce89190612a66565b90506000612710611cf98387612a47565b611d039190612a66565b90506012548610611d1b579550610776945050505050565b601254611d288783612a47565b611d329190612a66565b9650505050505050610776565b60078181548110611d4f57600080fd5b90600052602060002001600091509050805461068e906129df565b600080611d78836001611b70565b905060006009805480602002602001604051908101604052809291908181526020018280548015611dd257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611db4575b505050505090506000815167ffffffffffffffff811115611df557611df561245c565b604051908082528060200260200182016040528015611e1e578160200160208202803683370190505b5090508215611fea576010546001600160a01b0386166000908152600e6020526040902060010155611e4e6121a5565b6001600160a01b0386166000908152600e602052604081206003810192909255426002830155815485929190611e85908490612a30565b9091555050600c54600090670de0b6b3a764000090611ea49086612a47565b611eae9190612a66565b90506000611ebe61271083612a66565b9050611eca3082612249565b60005b8451811015611fa9576000611ee287836120e6565b905080858381518110611ef757611ef7612abd565b602002602001018181525050858281518110611f1557611f15612abd565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015611f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f949190612aa0565b50508080611fa190612be3565b915050611ecd565b507fbbfaf902cec9107d8131a7888c2b89c5e5820ff6319b992657e8eaa9a36feced87868686604051611fdf9493929190612d86565b60405180910390a150505b505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516120249190612dca565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b806002600082825461209e9190612a88565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020612e8c83398151915291015b60405180910390a35050565b60095460009082106121315760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b92590813d5550813d1881093d5539160621b6044820152606401610943565b61271063ffffffff16670de0b6b3a764000084600a60006009878154811061215b5761215b612abd565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461218a9190612a47565b6121949190612a66565b61219e9190612a66565b9392505050565b600d54600090600160401b900463ffffffff16806121c557600091505090565b600d5463ffffffff1660006121da8342612e66565b90508063ffffffff168263ffffffff16116121fa57506127109392505050565b600d5463ffffffff64010000000090910481169082161161221f576000935050505090565b63ffffffff8083169061223790612710908416612a47565b6122419190612a66565b935050505090565b6001600160a01b03821660009081526003602052604081208054839290612271908490612a30565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020612e8c833981519152906020016120da565b8280546122b7906129df565b90600052602060002090601f0160209004810192826122d9576000855561231f565b82601f106122f257805160ff191683800117855561231f565b8280016001018555821561231f579182015b8281111561231f578251825591602001919060010190612304565b5061232b92915061232f565b5090565b5b8082111561232b5760008155600101612330565b6000815180845260005b8181101561236a5760208185018101518683018201520161234e565b8181111561237c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061219e6020830184612344565b6001600160a01b0381168114610a1f57600080fd5b600080604083850312156123cc57600080fd5b82356123d7816123a4565b946020939093013593505050565b6000602082840312156123f757600080fd5b813561219e816123a4565b60008060006060848603121561241757600080fd5b8335612422816123a4565b92506020840135612432816123a4565b929592945050506040919091013590565b60006020828403121561245557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561249b5761249b61245c565b604052919050565b600067ffffffffffffffff8211156124bd576124bd61245c565b5060051b60200190565b6000601f83818401126124d957600080fd5b823560206124ee6124e9836124a3565b612472565b82815260059290921b8501810191818101908784111561250d57600080fd5b8287015b848110156125a457803567ffffffffffffffff808211156125325760008081fd5b818a0191508a603f8301126125475760008081fd5b8582013560408282111561255d5761255d61245c565b61256e828b01601f19168901612472565b92508183528c818386010111156125855760008081fd5b8181850189850137506000908201870152845250918301918301612511565b50979650505050505050565b803563ffffffff811681146125c457600080fd5b919050565b6000606082840312156125db57600080fd5b6040516060810181811067ffffffffffffffff821117156125fe576125fe61245c565b60405290508061260d836125b0565b815261261b602084016125b0565b602082015261262c604084016125b0565b60408201525092915050565b600082601f83011261264957600080fd5b813560206126596124e9836124a3565b82815260059290921b8401810191818101908684111561267857600080fd5b8286015b8481101561269c57803561268f816123a4565b835291830191830161267c565b509695505050505050565b600082601f8301126126b857600080fd5b813560206126c86124e9836124a3565b82815260059290921b840181019181810190868411156126e757600080fd5b8286015b8481101561269c5780356001600160801b038116811461270b5760008081fd5b83529183019183016126eb565b600082601f83011261272957600080fd5b813560206127396124e9836124a3565b82815260059290921b8401810191818101908684111561275857600080fd5b8286015b8481101561269c578035835291830191830161275c565b600080600080600080610100878903121561278d57600080fd5b863567ffffffffffffffff808211156127a557600080fd5b6127b18a838b016124c7565b97506127c08a60208b016125c9565b965060808901359150808211156127d657600080fd5b6127e28a838b01612638565b955060a08901359150808211156127f857600080fd5b6128048a838b016126a7565b945060c089013591508082111561281a57600080fd5b6128268a838b01612638565b935060e089013591508082111561283c57600080fd5b5061284989828a01612718565b9150509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015612890578351151583529284019291840191600101612872565b50909695505050505050565b600081518084526020808501945080840160005b838110156128cc578151875295820195908201906001016128b0565b509495945050505050565b60208152600061219e602083018461289c565b60ff81168114610a1f57600080fd5b600080600080600080600060e0888a03121561291457600080fd5b873561291f816123a4565b9650602088013561292f816123a4565b95506040880135945060608801359350608088013561294d816128ea565b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561297d57600080fd5b8235612988816123a4565b91506020830135612998816123a4565b809150509250929050565b8015158114610a1f57600080fd5b600080604083850312156129c457600080fd5b82356129cf816123a4565b91506020830135612998816129a3565b600181811c908216806129f357607f821691505b60208210811415612a1457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612a4257612a42612a1a565b500390565b6000816000190483118215151615612a6157612a61612a1a565b500290565b600082612a8357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612a9b57612a9b612a1a565b500190565b600060208284031215612ab257600080fd5b815161219e816129a3565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ae557600080fd5b815161219e816128ea565b600181815b80851115612b2b578160001904821115612b1157612b11612a1a565b80851615612b1e57918102915b93841c9390800290612af5565b509250929050565b600082612b4257506001610776565b81612b4f57506000610776565b8160018114612b655760028114612b6f57612b8b565b6001915050610776565b60ff841115612b8057612b80612a1a565b50506001821b610776565b5060208310610133831016604e8410600b8410161715612bae575081810a610776565b612bb88383612af0565b8060001904821115612bcc57612bcc612a1a565b029392505050565b600061219e60ff841683612b33565b6000600019821415612bf757612bf7612a1a565b5060010190565b600063ffffffff808316818516808303821115612c1d57612c1d612a1a565b01949350505050565b600081518084526020808501945080840160005b838110156128cc5781516001600160a01b031687529582019590820190600101612c3a565b600081518084526020808501945080840160005b838110156128cc5781516001600160801b031687529582019590820190600101612c73565b60e08082528851908201819052600090610100600582901b8401810191908401906020808d01855b83811015612cee5760ff19888703018552612cdc868351612344565b95509382019390820190600101612cc0565b505085840381870152505050612d04818a612c26565b90508281036040840152612d188189612c5f565b90508281036060840152612d2c8188612c26565b90508281036080840152612d40818761289c565b915050612d5560a083018563ffffffff169052565b63ffffffff831660c083015298975050505050505050565b600060208284031215612d7f57600080fd5b5051919050565b60018060a01b0385168152836020820152608060408201526000612dad6080830185612c26565b8281036060840152612dbf818561289c565b979650505050505050565b600080835481600182811c915080831680612de657607f831692505b6020808410821415612e0657634e487b7160e01b86526022600452602486fd5b818015612e1a5760018114612e2b57612e58565b60ff19861689528489019650612e58565b60008a81526020902060005b86811015612e505781548b820152908501908301612e37565b505084890196505b509498975050505050505050565b600063ffffffff83811690831681811015612e8357612e83612a1a565b03939250505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212202fa2b8ce0e0d54d1e3fce7da4326de3500d24d8f6d798b9f6cc4db1eb482f93d64736f6c634300080a0033",
  "bytecodeSha1": "477951dc6f48248700a4f39ca24fd2ee96d639b6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "BuidlCollective",
  "coverageMap": {
    "branches": {
      "3": {
        "BuidlCollective._claim": {
          "105": [
            8904,
            8913,
            false
          ]
        },
        "BuidlCollective.calculateShareToClaim": {
          "101": [
            11116,
            11168,
            false
          ],
          "102": [
            11461,
            11468,
            false
          ],
          "103": [
            11856,
            11880,
            false
          ],
          "104": [
            12214,
            12242,
            false
          ]
        },
        "BuidlCollective.cancel": {
          "97": [
            3506,
            3532,
            true
          ]
        },
        "BuidlCollective.convertShareToToken": {
          "106": [
            9797,
            9820,
            true
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "107": [
            12730,
            12755,
            false
          ],
          "108": [
            12780,
            12814,
            false
          ]
        },
        "BuidlCollective.initialize": {
          "98": [
            2577,
            2607,
            true
          ]
        },
        "BuidlCollective.pokeApproval": {
          "99": [
            5791,
            5831,
            false
          ]
        },
        "BuidlCollective.stake": {
          "100": [
            6512,
            6542,
            true
          ]
        },
        "BuidlCollective.startCollective": {
          "96": [
            3772,
            3798,
            true
          ]
        },
        "BuidlCollective.unstake": {
          "95": [
            7845,
            7884,
            true
          ]
        }
      },
      "6": {
        "ERC20.DOMAIN_SEPARATOR": {
          "110": [
            5497,
            5530,
            true
          ]
        },
        "ERC20.permit": {
          "111": [
            4324,
            4351,
            true
          ],
          "112": [
            5166,
            5196,
            false
          ],
          "113": [
            5200,
            5225,
            true
          ]
        },
        "ERC20.transferFrom": {
          "109": [
            3552,
            3580,
            false
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "3": {
        "BuidlCollective._claim": {
          "74": [
            8929,
            8973
          ],
          "75": [
            8987,
            9054
          ],
          "76": [
            9068,
            9119
          ],
          "77": [
            9133,
            9171
          ],
          "78": [
            9311,
            9343
          ],
          "79": [
            9484,
            9503
          ],
          "80": [
            9521,
            9561
          ],
          "81": [
            9397,
            9400
          ],
          "82": [
            9589,
            9641
          ]
        },
        "BuidlCollective.calculateShareToClaim": {
          "68": [
            11170,
            11178
          ],
          "69": [
            11484,
            11542
          ],
          "70": [
            11573,
            11767
          ],
          "71": [
            11882,
            11890
          ],
          "72": [
            12258,
            12280
          ],
          "73": [
            12311,
            12365
          ]
        },
        "BuidlCollective.cancel": {
          "28": [
            3498,
            3533
          ],
          "29": [
            3543,
            3559
          ]
        },
        "BuidlCollective.claim": {
          "30": [
            8588,
            8606
          ]
        },
        "BuidlCollective.convertShareToToken": {
          "87": [
            9789,
            9845
          ],
          "88": [
            9855,
            9940
          ]
        },
        "BuidlCollective.getClaimable": {
          "48": [
            10670,
            10716
          ],
          "49": [
            10651,
            10654
          ],
          "50": [
            10737,
            10755
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "89": [
            12586,
            12594
          ],
          "90": [
            12816,
            12824
          ],
          "91": [
            12834,
            12890
          ]
        },
        "BuidlCollective.initialize": {
          "31": [
            2569,
            2608
          ],
          "32": [
            2618,
            2646
          ],
          "33": [
            2656,
            2674
          ],
          "34": [
            2684,
            2716
          ],
          "35": [
            2726,
            2760
          ],
          "36": [
            2872,
            2921
          ],
          "37": [
            3015,
            3040
          ],
          "38": [
            3054,
            3077
          ],
          "39": [
            2853,
            2856
          ],
          "40": [
            3097,
            3123
          ],
          "41": [
            3133,
            3367
          ]
        },
        "BuidlCollective.pokeApproval": {
          "42": [
            5654,
            5693
          ],
          "43": [
            5707,
            5773
          ],
          "44": [
            5851,
            5870
          ],
          "45": [
            5909,
            5929
          ],
          "46": [
            5635,
            5638
          ],
          "47": [
            5963,
            5979
          ]
        },
        "BuidlCollective.readToken": {
          "61": [
            5298,
            5338
          ]
        },
        "BuidlCollective.stake": {
          "51": [
            6504,
            6570
          ],
          "52": [
            6715,
            6745
          ],
          "53": [
            6759,
            6787
          ],
          "54": [
            7281,
            7318
          ],
          "55": [
            7328,
            7354
          ],
          "56": [
            7364,
            7400
          ],
          "57": [
            7410,
            7629
          ]
        },
        "BuidlCollective.startCollective": {
          "17": [
            3764,
            3799
          ],
          "18": [
            3809,
            3833
          ],
          "19": [
            4008,
            4042
          ],
          "20": [
            4201,
            4267
          ],
          "21": [
            4622,
            4648
          ],
          "22": [
            4662,
            4692
          ],
          "23": [
            3989,
            3992
          ],
          "24": [
            4712,
            4768
          ],
          "25": [
            4778,
            4848
          ],
          "26": [
            4858,
            4884
          ],
          "27": [
            4894,
            4937
          ]
        },
        "BuidlCollective.unstake": {
          "8": [
            7720,
            7738
          ],
          "9": [
            7824,
            7932
          ],
          "10": [
            7942,
            7982
          ],
          "11": [
            7992,
            8050
          ],
          "12": [
            8060,
            8111
          ]
        },
        "BuidlCollective.unstakeAll": {
          "13": [
            8244,
            8262
          ],
          "14": [
            8413,
            8466
          ],
          "15": [
            8476,
            8522
          ]
        },
        "BuidlCollective.updateAdmin": {
          "66": [
            3641,
            3658
          ],
          "67": [
            3668,
            3695
          ]
        }
      },
      "6": {
        "ERC20.DOMAIN_SEPARATOR": {
          "16": [
            5478,
            5616
          ]
        },
        "ERC20._burn": {
          "92": [
            6718,
            6743
          ],
          "93": [
            6886,
            6907
          ],
          "94": [
            6928,
            6967
          ]
        },
        "ERC20._mint": {
          "84": [
            6385,
            6406
          ],
          "85": [
            6552,
            6575
          ],
          "86": [
            6596,
            6633
          ]
        },
        "ERC20.approve": {
          "0": [
            2788,
            2827
          ],
          "1": [
            2838,
            2880
          ],
          "2": [
            2891,
            2902
          ]
        },
        "ERC20.computeDomainSeparator": {
          "83": [
            5713,
            6114
          ]
        },
        "ERC20.permit": {
          "62": [
            4316,
            4379
          ],
          "63": [
            5141,
            5273
          ],
          "64": [
            5288,
            5332
          ],
          "65": [
            5353,
            5389
          ]
        },
        "ERC20.transfer": {
          "58": [
            3029,
            3060
          ],
          "59": [
            3206,
            3229
          ],
          "60": [
            3250,
            3287
          ]
        },
        "ERC20.transferFrom": {
          "3": [
            3594,
            3640
          ],
          "4": [
            3651,
            3676
          ],
          "5": [
            3822,
            3845
          ],
          "6": [
            3866,
            3897
          ],
          "7": [
            3908,
            3919
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "ERC20",
    "IBuidlCollective"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061023d5760003560e01c80637d9fce4d1161013b578063d32e81a5116100b8578063e2f273bd1161007c578063e2f273bd146105c8578063e9963916146105db578063f5dab711146105ee578063f851a4401461065b578063fed455871461066e57600080fd5b8063d32e81a51461052a578063d505accf14610533578063d77a1d3a14610546578063dd62ed3e1461054f578063e0c9802f1461057a57600080fd5b8063a4c8b46b116100ff578063a4c8b46b1461047d578063a583024b14610492578063a694fc3a146104b2578063a9059cbb146104c5578063a9320688146104d857600080fd5b80637d9fce4d1461041f5780637ecebe001461042e578063817b1cd21461044e57806395d89b41146104575780639cfdbd5e1461045f57600080fd5b806335322f37116101c95780634e71d92d1161018d5780634e71d92d146103b05780634f64b2be146103b85780635da69cb6146103e35780636b954292146103ec57806370a08231146103ff57600080fd5b806335322f371461037c5780633644e5151461038457806336e9b3441461038c5780634ae99d30146103955780634c33fe941461039d57600080fd5b80631959a002116102105780631959a0021461029f57806323b872dd146102f45780632e17de781461030757806330adf81f1461031c578063313ce5671461034357600080fd5b806301e1d1141461024257806306fdde031461025e578063095ea7b31461027357806318160ddd14610296575b600080fd5b61024b600c5481565b6040519081526020015b60405180910390f35b610266610681565b6040516102559190612391565b6102866102813660046123b9565b61070f565b6040519015158152602001610255565b61024b60025481565b6102d46102ad3660046123e5565b600e6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610255565b610286610302366004612402565b61077c565b61031a610315366004612443565b61085c565b005b61024b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610255565b61031a610a22565b61024b610b99565b61024b60085481565b61031a610bf4565b61031a6103ab3660046123e5565b610f2d565b61031a610f60565b6103cb6103c6366004612443565b610fca565b6040516001600160a01b039091168152602001610255565b61024b60125481565b61031a6103fa366004612773565b610ff4565b61024b61040d3660046123e5565b60036020526000908152604090205481565b61024b670de0b6b3a764000081565b61024b61043c3660046123e5565b60056020526000908152604090205481565b61024b60115481565b6102666112a8565b61046861271081565b60405163ffffffff9091168152602001610255565b6104856112b5565b6040516102559190612856565b6104a56104a03660046123e5565b61149a565b60405161025591906128d7565b61031a6104c0366004612443565b611544565b6102866104d33660046123b9565b6117c3565b6104eb6104e6366004612443565b611829565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b0316818301529101519091166060820152608001610255565b61024b600f5481565b61031a6105413660046128f9565b6118ba565b61024b60105481565b61024b61055d36600461296a565b600460209081526000928352604080842090915290825290205481565b600d546105a19063ffffffff808216916401000000008104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610255565b61031a6105d63660046123e5565b611b0b565b61024b6105e93660046129b1565b611b70565b61062f6105fc3660046123e5565b600a6020526000908152604090208054600182015460029092015490916001600160801b0316906001600160a01b031683565b604080519384526001600160801b0390921660208401526001600160a01b031690820152606001610255565b600b546103cb906001600160a01b031681565b61026661067c366004612443565b611d3f565b6000805461068e906129df565b80601f01602080910402602001604051908101604052809291908181526020018280546106ba906129df565b80156107075780601f106106dc57610100808354040283529160200191610707565b820191906000526020600020905b8154815290600101906020018083116106ea57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061076a9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146107d8576107b38382612a30565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610800908490612a30565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020612e8c833981519152906108499087815260200190565b60405180910390a3506001949350505050565b600f54421115610a1657600c54600f546108769042612a30565b6011546108869061271090612a47565b6108909190612a47565b61089a9190612a66565b601060008282546108ab9190612a88565b909155505042600f556108bd33611d6a565b50600c54600090670de0b6b3a76400006108d961271085612a47565b6108e39190612a47565b6108ed9190612a66565b336000908152600e6020526040902054909150811061094c5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b336000908152600e60205260408120805483929061096b908490612a30565b909155505060405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190612aa0565b5060408051338152602081018490527f0f499973e7d3e9601430a8fbff3e36e448210cda3fbec16fad26da79f6d0dba4910160405180910390a15050565b6108bd33611d6a565b50565b600f54421115610b8357600c54600f54610a3c9042612a30565b601154610a4c9061271090612a47565b610a569190612a47565b610a609190612a66565b60106000828254610a719190612a88565b909155505042600f55336000908152600e6020526040902054610a9057565b610a9933611d6a565b50600c54336000908152600e6020526040812054909161271091670de0b6b3a764000091610ac691612a47565b610ad09190612a66565b610ada9190612a66565b60405163a9059cbb60e01b815233600482015260248101829052909150309063a9059cbb906044016020604051808303816000875af1158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b459190612aa0565b5060408051338152602081018390527f0f499973e7d3e9601430a8fbff3e36e448210cda3fbec16fad26da79f6d0dba491015b60405180910390a150565b336000908152600e6020526040902054610a9057565b60007f00000000000000000000000000000000000000000000000000000000000000004614610bcf57610bca611ff2565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b600b546001600160a01b03163314610c0b57600080fd5b60065460ff1615610c1b57600080fd5b6006805460ff19166001179055600980546040805160208084028201810190925282815260009390929091830182828015610c7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c61575b50505050509050610ca9604080516060810182526000808252602082018190529181019190915290565b6000805b8351811015610ea857600a6000858381518110610ccc57610ccc612abd565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251606081018452815480825260018301546001600160801b0316938201849052600290920154909416928401839052875193965092879085908110610d3c57610d3c612abd565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc19190612aa0565b506000878581518110610dd657610dd6612abd565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190612ad3565b610e4a90600a612bd4565b610e5d6001600160801b03841686612a47565b610e6f90670de0b6b3a7640000612a47565b610e799190612a66565b9050610e858187612a88565b9550610e91838261208c565b505050508080610ea090612be3565b915050610cad565b50600d805463ffffffff60401b1916600160401b4263ffffffff90811682029290921792839055610ee792640100000000810483169291900416612bfe565b63ffffffff16600f55600c8190556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a1505050565b600b546001600160a01b03163314610f4457600080fd5b60065460ff1615610f5457600080fd5b806001600160a01b0316ff5b600f54421115610fc157600c54600f54610f7a9042612a30565b601154610f8a9061271090612a47565b610f949190612a47565b610f9e9190612a66565b60106000828254610faf9190612a88565b909155505042600f55610a1f33611d6a565b610a1f33611d6a565b60098181548110610fda57600080fd5b6000918252602090912001546001600160a01b0316905081565b600654610100900460ff161561100957600080fd5b6006805461ff001916610100179055600b80546001600160a01b031916331790558451600d80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b199081169282166401000000000267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b8181101561124257600788828151811061109f5761109f612abd565b602090810291909101810151825460018101845560009384529282902081516110d194919091019291909101906122ab565b50600060405180606001604052808584815181106110f1576110f1612abd565b6020026020010151815260200187848151811061111057611110612abd565b60200260200101516001600160801b0316815260200186848151811061113857611138612abd565b60200260200101516001600160a01b0316815250905080600a600089858151811061116557611165612abd565b6020908102919091018101516001600160a01b03908116835282820193909352604091820160002084518155908401516001820180546fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055920151600290920180546001600160a01b0319169290911691909117905586516009908890849081106111f4576111f4612abd565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055508061123a81612be3565b915050611083565b50600954600855600d546040517f489170cfe0f7fcdd8410d20d8a81df8f038624bbcd9814cca42d477e9d1bb46991611297918a91899189918991899163ffffffff6401000000008204811692911690612c98565b60405180910390a150505050505050565b6001805461068e906129df565b60095460609060009067ffffffffffffffff8111156112d6576112d661245c565b6040519080825280602002602001820160405280156112ff578160200160208202803683370190505b50905060008060005b60095481101561149157600a60006009838154811061132957611329612abd565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060020154600980549190921694508290811061137057611370612abd565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156113c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ed9190612d6d565b9150600a60006009838154811061140657611406612abd565b60009182526020808320909101546001600160a01b03168352820192909252604001902054821061145a57600184828151811061144557611445612abd565b9115156020928302919091019091015261147f565b600084828151811061146e5761146e612abd565b911515602092830291909101909101525b8061148981612be3565b915050611308565b50919392505050565b606060006114a9836000611b70565b60095490915060009067ffffffffffffffff8111156114ca576114ca61245c565b6040519080825280602002602001820160405280156114f3578160200160208202803683370190505b50905060005b60095481101561153c5761150d83826120e6565b82828151811061151f5761151f612abd565b60209081029190910101528061153481612be3565b9150506114f9565b509392505050565b600f5442111561176857600c54600f5461155e9042612a30565b60115461156e9061271090612a47565b6115789190612a47565b6115829190612a66565b601060008282546115939190612a88565b909155505042600f553360008181526003602052604090205430908311156115f75760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610943565b6001600160a01b03808316600090815260036020526040808220805487900390559183168152908120805485019055600c54670de0b6b3a764000061163e61271087612a47565b6116489190612a47565b6116529190612a66565b6010549091504260006116636121a5565b60408051608081018252868152602080820187815282840187815260608401868152336000908152600e909452948320845181559151600183015551600282015592516003909301929092556011805493945090928a92906116c6908490612a88565b92505081905550856001600160a01b0316876001600160a01b0316600080516020612e8c8339815191528a60405161170091815260200190565b60405180910390a360408051338152602081018a9052908101869052606081018590526080810184905260a081018390527f9dfa08abae6c607453d7ef936fd3d42c4afc359dcfa226a49be696604a2468459060c00160405180910390a15050505050505050565b3360008181526003602052604090205430908311156115f75760405162461bcd60e51b81526020600482015260176024820152760aaa68aa440848298829c868a409c9ea8408a9c9eaa8e9604b1b6044820152606401610943565b336000908152600360205260408120805483919083906117e4908490612a30565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020612e8c8339815191529061076a9086815260200190565b6040805160608101825260008082526020820181905291810182905260006009848154811061185a5761185a612abd565b60009182526020808320909101546001600160a01b03908116808452600a835260409384902084516060810186528154815260018201546001600160801b0316948101949094526002015490911692820192909252909590945092505050565b4284101561190a5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610943565b6000611914610b99565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611a2d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611a635750886001600160a01b0316816001600160a01b0316145b611aa05760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610943565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b600b546001600160a01b03163314611b2257600080fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f390602001610b78565b6001600160a01b0382166000908152600e60205260408120600201544211611b9a57506000610776565b6001600160a01b0383166000908152600e6020526040812060020154611bc09042612a30565b6001600160a01b0385166000908152600e602052604081206003015491925090611be86121a5565b611bf29190612a30565b905060008415611c2c576001600160a01b0386166000908152600e6020526040902060010154601054611c259190612a30565b9050611c96565b600c54600f54611c3c9042612a30565b601154611c4c9061271090612a47565b611c569190612a47565b611c609190612a66565b6001600160a01b0387166000908152600e6020526040902060010154601054611c899190612a30565b611c939190612a88565b90505b6000611ca28483612a66565b905080611cb6576000945050505050610776565b6001600160a01b0387166000908152600e60205260408120548290611cde9061271090612a47565b611ce89190612a66565b90506000612710611cf98387612a47565b611d039190612a66565b90506012548610611d1b579550610776945050505050565b601254611d288783612a47565b611d329190612a66565b9650505050505050610776565b60078181548110611d4f57600080fd5b90600052602060002001600091509050805461068e906129df565b600080611d78836001611b70565b905060006009805480602002602001604051908101604052809291908181526020018280548015611dd257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611db4575b505050505090506000815167ffffffffffffffff811115611df557611df561245c565b604051908082528060200260200182016040528015611e1e578160200160208202803683370190505b5090508215611fea576010546001600160a01b0386166000908152600e6020526040902060010155611e4e6121a5565b6001600160a01b0386166000908152600e602052604081206003810192909255426002830155815485929190611e85908490612a30565b9091555050600c54600090670de0b6b3a764000090611ea49086612a47565b611eae9190612a66565b90506000611ebe61271083612a66565b9050611eca3082612249565b60005b8451811015611fa9576000611ee287836120e6565b905080858381518110611ef757611ef7612abd565b602002602001018181525050858281518110611f1557611f15612abd565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015611f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f949190612aa0565b50508080611fa190612be3565b915050611ecd565b507fbbfaf902cec9107d8131a7888c2b89c5e5820ff6319b992657e8eaa9a36feced87868686604051611fdf9493929190612d86565b60405180910390a150505b505050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516120249190612dca565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b806002600082825461209e9190612a88565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020612e8c83398151915291015b60405180910390a35050565b60095460009082106121315760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b92590813d5550813d1881093d5539160621b6044820152606401610943565b61271063ffffffff16670de0b6b3a764000084600a60006009878154811061215b5761215b612abd565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461218a9190612a47565b6121949190612a66565b61219e9190612a66565b9392505050565b600d54600090600160401b900463ffffffff16806121c557600091505090565b600d5463ffffffff1660006121da8342612e66565b90508063ffffffff168263ffffffff16116121fa57506127109392505050565b600d5463ffffffff64010000000090910481169082161161221f576000935050505090565b63ffffffff8083169061223790612710908416612a47565b6122419190612a66565b935050505090565b6001600160a01b03821660009081526003602052604081208054839290612271908490612a30565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020612e8c833981519152906020016120da565b8280546122b7906129df565b90600052602060002090601f0160209004810192826122d9576000855561231f565b82601f106122f257805160ff191683800117855561231f565b8280016001018555821561231f579182015b8281111561231f578251825591602001919060010190612304565b5061232b92915061232f565b5090565b5b8082111561232b5760008155600101612330565b6000815180845260005b8181101561236a5760208185018101518683018201520161234e565b8181111561237c576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061219e6020830184612344565b6001600160a01b0381168114610a1f57600080fd5b600080604083850312156123cc57600080fd5b82356123d7816123a4565b946020939093013593505050565b6000602082840312156123f757600080fd5b813561219e816123a4565b60008060006060848603121561241757600080fd5b8335612422816123a4565b92506020840135612432816123a4565b929592945050506040919091013590565b60006020828403121561245557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561249b5761249b61245c565b604052919050565b600067ffffffffffffffff8211156124bd576124bd61245c565b5060051b60200190565b6000601f83818401126124d957600080fd5b823560206124ee6124e9836124a3565b612472565b82815260059290921b8501810191818101908784111561250d57600080fd5b8287015b848110156125a457803567ffffffffffffffff808211156125325760008081fd5b818a0191508a603f8301126125475760008081fd5b8582013560408282111561255d5761255d61245c565b61256e828b01601f19168901612472565b92508183528c818386010111156125855760008081fd5b8181850189850137506000908201870152845250918301918301612511565b50979650505050505050565b803563ffffffff811681146125c457600080fd5b919050565b6000606082840312156125db57600080fd5b6040516060810181811067ffffffffffffffff821117156125fe576125fe61245c565b60405290508061260d836125b0565b815261261b602084016125b0565b602082015261262c604084016125b0565b60408201525092915050565b600082601f83011261264957600080fd5b813560206126596124e9836124a3565b82815260059290921b8401810191818101908684111561267857600080fd5b8286015b8481101561269c57803561268f816123a4565b835291830191830161267c565b509695505050505050565b600082601f8301126126b857600080fd5b813560206126c86124e9836124a3565b82815260059290921b840181019181810190868411156126e757600080fd5b8286015b8481101561269c5780356001600160801b038116811461270b5760008081fd5b83529183019183016126eb565b600082601f83011261272957600080fd5b813560206127396124e9836124a3565b82815260059290921b8401810191818101908684111561275857600080fd5b8286015b8481101561269c578035835291830191830161275c565b600080600080600080610100878903121561278d57600080fd5b863567ffffffffffffffff808211156127a557600080fd5b6127b18a838b016124c7565b97506127c08a60208b016125c9565b965060808901359150808211156127d657600080fd5b6127e28a838b01612638565b955060a08901359150808211156127f857600080fd5b6128048a838b016126a7565b945060c089013591508082111561281a57600080fd5b6128268a838b01612638565b935060e089013591508082111561283c57600080fd5b5061284989828a01612718565b9150509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015612890578351151583529284019291840191600101612872565b50909695505050505050565b600081518084526020808501945080840160005b838110156128cc578151875295820195908201906001016128b0565b509495945050505050565b60208152600061219e602083018461289c565b60ff81168114610a1f57600080fd5b600080600080600080600060e0888a03121561291457600080fd5b873561291f816123a4565b9650602088013561292f816123a4565b95506040880135945060608801359350608088013561294d816128ea565b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561297d57600080fd5b8235612988816123a4565b91506020830135612998816123a4565b809150509250929050565b8015158114610a1f57600080fd5b600080604083850312156129c457600080fd5b82356129cf816123a4565b91506020830135612998816129a3565b600181811c908216806129f357607f821691505b60208210811415612a1457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612a4257612a42612a1a565b500390565b6000816000190483118215151615612a6157612a61612a1a565b500290565b600082612a8357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612a9b57612a9b612a1a565b500190565b600060208284031215612ab257600080fd5b815161219e816129a3565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ae557600080fd5b815161219e816128ea565b600181815b80851115612b2b578160001904821115612b1157612b11612a1a565b80851615612b1e57918102915b93841c9390800290612af5565b509250929050565b600082612b4257506001610776565b81612b4f57506000610776565b8160018114612b655760028114612b6f57612b8b565b6001915050610776565b60ff841115612b8057612b80612a1a565b50506001821b610776565b5060208310610133831016604e8410600b8410161715612bae575081810a610776565b612bb88383612af0565b8060001904821115612bcc57612bcc612a1a565b029392505050565b600061219e60ff841683612b33565b6000600019821415612bf757612bf7612a1a565b5060010190565b600063ffffffff808316818516808303821115612c1d57612c1d612a1a565b01949350505050565b600081518084526020808501945080840160005b838110156128cc5781516001600160a01b031687529582019590820190600101612c3a565b600081518084526020808501945080840160005b838110156128cc5781516001600160801b031687529582019590820190600101612c73565b60e08082528851908201819052600090610100600582901b8401810191908401906020808d01855b83811015612cee5760ff19888703018552612cdc868351612344565b95509382019390820190600101612cc0565b505085840381870152505050612d04818a612c26565b90508281036040840152612d188189612c5f565b90508281036060840152612d2c8188612c26565b90508281036080840152612d40818761289c565b915050612d5560a083018563ffffffff169052565b63ffffffff831660c083015298975050505050505050565b600060208284031215612d7f57600080fd5b5051919050565b60018060a01b0385168152836020820152608060408201526000612dad6080830185612c26565b8281036060840152612dbf818561289c565b979650505050505050565b600080835481600182811c915080831680612de657607f831692505b6020808410821415612e0657634e487b7160e01b86526022600452602486fd5b818015612e1a5760018114612e2b57612e58565b60ff19861689528489019650612e58565b60008a81526020902060005b86811015612e505781548b820152908501908301612e37565b505084890196505b509498975050505050505050565b600063ffffffff83811690831681811015612e8357612e83612a1a565b03939250505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212202fa2b8ce0e0d54d1e3fce7da4326de3500d24d8f6d798b9f6cc4db1eb482f93d64736f6c634300080a0033",
  "deployedSourceMap": "125:12774:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:26;;;;;;;;;160:25:8;;;148:2;133:18;686:26:3;;;;;;;;1062:18:6;;;:::i;:::-;;;;;;;:::i;2670:239::-;;;;;;:::i;:::-;;:::i;:::-;;;1519:14:8;;1512:22;1494:41;;1482:2;1467:18;2670:239:6;1354:187:8;1336:26:6;;;;;;1006:44:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:25:8;;;2085:2;2070:18;;2063:34;;;;2113:18;;;2106:34;2171:2;2156:18;;2149:34;2016:3;2001:19;1006:44:3;1798:391:8;3322:604:6;;;;;;:::i;:::-;;:::i;7642:476:3:-;;;;;;:::i;:::-;;:::i;:::-;;1677:167:6;;1727:117;1677:167;;1114:31;;;;;;;;3194:4:8;3182:17;;;3164:36;;3152:2;3137:18;1114:31:6;3022:184:8;8124:405:3;;;:::i;5402:221:6:-;;;:::i;317:25:3:-;;;;;;3708:1236;;;:::i;3433:133::-;;;;;;:::i;:::-;;:::i;8535:78::-;;;:::i;477:23::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3635:32:8;;;3617:51;;3605:2;3590:18;477:23:3;3471:203:8;1285:40:3;;;;;;2299:1075;;;;;;:::i;:::-;;:::i;1369:44:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;950:50:3;;992:8;950:50;;1959:41:6;;;;;;:::i;:::-;;;;;;;;;;;;;;1253:26:3;;;;;;1087:20:6;;;:::i;911:33:3:-;;939:5;911:33;;;;;10507:10:8;10495:23;;;10477:42;;10465:2;10450:18;911:33:3;10333:192:8;5413:573:3;;;:::i;:::-;;;;;;;:::i;10398:364::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6360:1276::-;;;;;;:::i;:::-;;:::i;2915:401:6:-;;;;;;:::i;:::-;;:::i;5143:202:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;12164:15:8;;;12146:34;;12216:13;;12211:2;12196:18;;;12189:41;;;;12276:15;;12270:22;-1:-1:-1;;;;;12266:63:8;12246:18;;;12239:91;12376:15;;12370:22;12366:31;;;12361:2;12346:18;;12339:59;12095:3;12080:19;5143:202:3;11883:521:8;1073:29:3;;;;;;4117:1279:6;;;;;;:::i;:::-;;:::i;1187:23:3:-;;;;;;1420:64:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;803:32:3;;;;;;;;;;;;;;;;-1:-1:-1;;;803:32:3;;;;;;;;;;13933:10:8;13970:15;;;13952:34;;14022:15;;;14017:2;14002:18;;13995:43;14074:15;;14054:18;;;14047:43;;;;13911:2;13896:18;803:32:3;13727:369:8;3572:130:3;;;;;;:::i;:::-;;:::i;10991:1391::-;;;;;;:::i;:::-;;:::i;507:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:46:3;;-1:-1:-1;;;;;507:46:3;;;;;;;14813:25:8;;;-1:-1:-1;;;;;14874:47:8;;;14869:2;14854:18;;14847:75;-1:-1:-1;;;;;14958:32:8;14938:18;;;14931:60;14801:2;14786:18;507:46:3;14611:386:8;560:20:3;;;;;-1:-1:-1;;;;;560:20:3;;;276:35;;;;;;:::i;:::-;;:::i;1062:18:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2670:239::-;2798:10;2768:4;2788:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2788:30:6;;;;;;;;;;:39;;;2843:37;2768:4;;2788:30;;2843:37;;;;2821:6;160:25:8;;148:2;133:18;;14:177;2843:37:6;;;;;;;;-1:-1:-1;2898:4:6;2670:239;;;;;:::o;3322:604::-;-1:-1:-1;;;;;3474:15:6;;3440:4;3474:15;;;:9;:15;;;;;;;;3490:10;3474:27;;;;;;;;-1:-1:-1;;3552:28:6;;3548:92;;3624:16;3634:6;3624:7;:16;:::i;:::-;-1:-1:-1;;;;;3594:15:6;;;;;;:9;:15;;;;;;;;3610:10;3594:27;;;;;;;:46;3548:92;-1:-1:-1;;;;;3651:15:6;;;;;;:9;:15;;;;;:25;;3670:6;;3651:15;:25;;3670:6;;3651:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3822:13:6;;;;;;;:9;:13;;;;;;;:23;;;;;;3871:26;3822:13;;3871:26;;;-1:-1:-1;;;;;;;;;;;3871:26:6;;;3839:6;160:25:8;;148:2;133:18;;14:177;3871:26:6;;;;;;;;-1:-1:-1;3915:4:6;;3322:604;-1:-1:-1;;;;3322:604:6:o;7642:476:3:-;6101:14;;6083:15;:32;6079:269;;;6233:11;;6198:14;;6180:32;;:15;:32;:::i;:::-;6160:11;;:16;;939:5;;6160:16;:::i;:::-;:53;;;;:::i;:::-;6159:85;;;;:::i;:::-;6131:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;6275:15:3;6258:14;:32;7720:18:::1;7727:10;7720:6;:18::i;:::-;-1:-1:-1::0;7803:11:3::1;::::0;7748:9:::1;::::0;992:8:::1;7761:20;939:5;7761:15:::0;:20:::1;:::i;:::-;:38;;;;:::i;:::-;7760:54;;;;:::i;:::-;7858:10;7849:20;::::0;;;:8:::1;:20;::::0;;;;:35;7748:66;;-1:-1:-1;7845:39:3;::::1;7824:108;;;::::0;-1:-1:-1;;;7824:108:3;;16379:2:8;7824:108:3::1;::::0;::::1;16361:21:8::0;16418:2;16398:18;;;16391:30;-1:-1:-1;;;16437:18:8;;;16430:52;16499:18;;7824:108:3::1;;;;;;;;;7951:10;7942:20;::::0;;;:8:::1;:20;::::0;;;;:40;;7981:1;;7942:20;:40:::1;::::0;7981:1;;7942:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;7992:58:3::1;::::0;-1:-1:-1;;;7992:58:3;;8022:10:::1;7992:58;::::0;::::1;16702:51:8::0;16769:18;;;16762:34;;;8006:4:3::1;::::0;7992:29:::1;::::0;16675:18:8;;7992:58:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8065:46:3::1;::::0;;8083:10:::1;16702:51:8::0;;16784:2;16769:18;;16762:34;;;8065:46:3::1;::::0;16675:18:8;8065:46:3::1;;;;;;;7710:408;7642:476:::0;:::o;6079:269::-;7720:18:::1;7727:10;7720:6;:18::i;6079:269::-:0;7642:476;:::o;8124:405::-;6101:14;;6083:15;:32;6079:269;;;6233:11;;6198:14;;6180:32;;:15;:32;:::i;:::-;6160:11;;:16;;939:5;;6160:16;:::i;:::-;:53;;;;:::i;:::-;6159:85;;;;:::i;:::-;6131:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;6275:15:3;6258:14;:32;8195:10:::1;8186:20;::::0;;;:8:::1;:20;::::0;;;;:35;8182:53:::1;;8124:405::o:0;8182:53::-:1;8244:18;8251:10;8244:6;:18::i;:::-;-1:-1:-1::0;8344:11:3::1;::::0;8303:10:::1;8272:18;8294:20:::0;;;:8:::1;:20;::::0;;;;:35;8272:18;;939:5:::1;::::0;992:8:::1;::::0;8294:61:::1;::::0;::::1;:::i;:::-;8293:93;;;;:::i;:::-;:110;;;;:::i;:::-;8413:53;::::0;-1:-1:-1;;;8413:53:3;;8443:10:::1;8413:53;::::0;::::1;16702:51:8::0;16769:18;;;16762:34;;;8272:131:3;;-1:-1:-1;8427:4:3::1;::::0;8413:29:::1;::::0;16675:18:8;;8413:53:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8481:41:3::1;::::0;;8499:10:::1;16702:51:8::0;;16784:2;16769:18;;16762:34;;;8481:41:3::1;::::0;16675:18:8;8481:41:3::1;;;;;;;;8172:357;8124:405::o:0;6079:269::-;8195:10:::1;8186:20;::::0;;;:8:::1;:20;::::0;;;;:35;8182:53:::1;;8124:405::o:0;5402:221:6:-;5459:7;5514:16;5497:13;:33;:119;;5592:24;:22;:24::i;:::-;5478:138;;5402:221;:::o;5497:119::-;-1:-1:-1;5549:24:6;;5402:221::o;3708:1236:3:-;1772:5;;-1:-1:-1;;;;;1772:5:3;1758:10;:19;1750:28;;;;;;3772:17:::1;::::0;::::1;;:26;3764:35;;;::::0;::::1;;3809:17;:24:::0;;-1:-1:-1;;3809:24:3::1;3829:4;3809:24;::::0;;3870:6:::1;3843:33:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;3809:17:::1;::::0;3843:33;;3870:6;;3843:33;::::1;3870:6:::0;3843:33;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;3843:33:3::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;3886:27;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;3886:27:3::1;3923:20;3958:9:::0;3953:750:::1;3973:7;:14;3969:1;:18;3953:750;;;4021:9;:21;4031:7;4039:1;4031:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;4021:21:3;;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;4021:21:3;4008:34;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4008:34:3::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;4207:10;;4008:34;;-1:-1:-1;4008:34:3;4207:7;;4215:1;;4207:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;4201:66:::1;::::0;-1:-1:-1;;;4201:66:3;;-1:-1:-1;;;;;17447:15:8;;;4201:66:3::1;::::0;::::1;17429:34:8::0;4253:4:3::1;17479:18:8::0;;;17472:43;17531:18;;;17524:34;;;4201:30:3;;::::1;::::0;::::1;::::0;17364:18:8;;4201:66:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4507:18;4586:7;4594:1;4586:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4580:26:3::1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4574:34;::::0;:2:::1;:34;:::i;:::-;4529:14;-1:-1:-1::0;;;;;4529:14:3;::::1;:6:::0;:14:::1;:::i;:::-;:25;::::0;4546:8:::1;4529:25;:::i;:::-;4528:80;;;;:::i;:::-;4507:101:::0;-1:-1:-1;4622:26:3::1;4507:101:::0;4622:26;::::1;:::i;:::-;;;4662:30;4668:11;4681:10;4662:5;:30::i;:::-;3994:709;;;;3989:3;;;;;:::i;:::-;;;;3953:750;;;-1:-1:-1::0;4712:14:3::1;:56:::0;;-1:-1:-1;;;;4712:56:3::1;-1:-1:-1::0;;;4752:15:3::1;4712:56;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;4795:53:::1;::::0;4828:20;;::::1;::::0;::::1;::::0;4795:30;;::::1;;:53;:::i;:::-;4778:70;;:14;:70:::0;4858:11:::1;:26:::0;;;4899:38:::1;::::0;4921:15:::1;160:25:8::0;;4899:38:3::1;::::0;148:2:8;133:18;4899:38:3::1;;;;;;;3754:1190;;;3708:1236::o:0;3433:133::-;1772:5;;-1:-1:-1;;;;;1772:5:3;1758:10;:19;1750:28;;;;;;3506:17:::1;::::0;::::1;;:26;3498:35;;;::::0;::::1;;3556:2;-1:-1:-1::0;;;;;3543:16:3::1;;8535:78:::0;6101:14;;6083:15;:32;6079:269;;;6233:11;;6198:14;;6180:32;;:15;:32;:::i;:::-;6160:11;;:16;;939:5;;6160:16;:::i;:::-;:53;;;;:::i;:::-;6159:85;;;;:::i;:::-;6131:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;6275:15:3;6258:14;:32;8588:18:::1;8595:10;8588:6;:18::i;6079:269::-:0;8588:18:::1;8595:10;8588:6;:18::i;477:23::-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;477:23:3;;-1:-1:-1;477:23:3;:::o;2299:1075::-;2577:21;;;;;;;:30;2569:39;;;;;;2618:21;:28;;-1:-1:-1;;2618:28:3;;;;;2656:5;:18;;-1:-1:-1;;;;;;2656:18:3;2664:10;2656:18;;;2684:32;;:14;:32;;;;;;;;;;;;;;-1:-1:-1;;;2684:32:3;-1:-1:-1;;;;2726:34:3;;;2684:32;;;;;-1:-1:-1;;2684:32:3;;;;;;;;;;;;;;;;2726:34;;;;;;2792:14;;2618:28;2816:272;2840:11;2836:1;:15;2816:272;;;2872:19;2897:20;2918:1;2897:23;;;;;;;;:::i;:::-;;;;;;;;;;;;2872:49;;;;;;;-1:-1:-1;2872:49:3;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2935:18;2956:45;;;;;;;;2966:8;2975:1;2966:11;;;;;;;;:::i;:::-;;;;;;;2956:45;;;;2979:7;2987:1;2979:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2956:45:3;;;;;2991:6;2998:1;2991:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2956:45:3;;;;2935:66;;3039:1;3015:9;:21;3025:7;3033:1;3025:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3015:21:3;;;;;;;;;;;;;;;;-1:-1:-1;3015:21:3;:25;;;;;;;;;;;;;-1:-1:-1;;3015:25:3;-1:-1:-1;;;;;3015:25:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3015:25:3;;;;;;;;;;;3066:10;;3054:6;;3066:10;;3074:1;;3066:10;;;;;;:::i;:::-;;;;;;;;;;;;3054:23;;;;;;;-1:-1:-1;3054:23:3;;;;;;;;;;-1:-1:-1;;;;;;3054:23:3;-1:-1:-1;;;;;3054:23:3;;;;;;;;;-1:-1:-1;2853:3:3;;;;:::i;:::-;;;;2816:272;;;-1:-1:-1;3110:6:3;:13;3097:10;:26;3297:14;:20;3138:229;;;;;;3179:20;;3213:7;;3234;;3255:6;;3275:8;;3297:20;;;;;;;3331:26;;;3138:229;:::i;:::-;;;;;;;;2559:815;2299:1075;;;;;;:::o;1087:20:6:-;;;;;;;:::i;5413:573:3:-;5520:6;:13;5458;;5483:23;;5509:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5509:25:3;;5483:51;;5544:19;5573:17;5605:9;5600:354;5620:6;:13;5616:17;;5600:354;;;5668:9;:20;5678:6;5685:1;5678:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5678:9:3;;;5668:20;;;;;;;;;;;;;;;:25;;;5725:6;:9;;5668:25;;;;;-1:-1:-1;5732:1:3;;5725:9;;;;;;:::i;:::-;;;;;;;;;;;5719:54;;-1:-1:-1;;;5719:54:3;;-1:-1:-1;;;;;22539:15:8;;;5719:54:3;;;22521:34:8;5767:4:3;22571:18:8;;;22564:43;5725:9:3;;;;5719:26;;22456:18:8;;5719:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5707:66;;5804:9;:20;5814:6;5821:1;5814:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5814:9:3;5804:20;;;;;;;;;;;;:27;5791:40;;5787:157;;5866:4;5851:9;5861:1;5851:12;;;;;;;;:::i;:::-;:19;;;:12;;;;;;;;;;;:19;5787:157;;;5924:5;5909:9;5919:1;5909:12;;;;;;;;:::i;:::-;:20;;;:12;;;;;;;;;;;:20;5787:157;5635:3;;;;:::i;:::-;;;;5600:354;;;-1:-1:-1;5970:9:3;;5413:573;-1:-1:-1;;;5413:573:3:o;10398:364::-;10455:16;10483:13;10499:34;10521:4;10527:5;10499:21;:34::i;:::-;10588:6;:13;10483:50;;-1:-1:-1;10543:28:3;;10574;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10574:28:3;;10543:59;;10617:9;10612:115;10636:6;:13;10632:17;;10612:115;;;10687:29;10707:5;10714:1;10687:19;:29::i;:::-;10670:11;10682:1;10670:14;;;;;;;;:::i;:::-;;;;;;;;;;:46;10651:3;;;;:::i;:::-;;;;10612:115;;;-1:-1:-1;10744:11:3;10398:364;-1:-1:-1;;;10398:364:3:o;6360:1276::-;6101:14;;6083:15;:32;6079:269;;;6233:11;;6198:14;;6180:32;;:15;:32;:::i;:::-;6160:11;;:16;;939:5;;6160:16;:::i;:::-;:53;;;;:::i;:::-;6159:85;;;;:::i;:::-;6131:8;;:113;;;;;;;:::i;:::-;;;;-1:-1:-1;;6275:15:3;6258:14;:32;6447:10:::1;6432:12;6512:15:::0;;;:9:::1;:15;::::0;;;;;6488:4:::1;::::0;6512:30;-1:-1:-1;6512:30:3::1;6504:66;;;::::0;-1:-1:-1;;;6504:66:3;;23009:2:8;6504:66:3::1;::::0;::::1;22991:21:8::0;23048:2;23028:18;;;23021:30;-1:-1:-1;;;23067:18:8;;;23060:53;23130:18;;6504:66:3::1;22807:347:8::0;6504:66:3::1;-1:-1:-1::0;;;;;6715:15:3;;::::1;;::::0;;;:9:::1;:15;::::0;;;;;:30;;;;::::1;::::0;;6759:13;;::::1;::::0;;;;;:28;;;::::1;::::0;;6885:11:::1;::::0;992:8:::1;6835:16;939:5;6734:11:::0;6835:16:::1;:::i;:::-;:34;;;;:::i;:::-;6834:62;;;;:::i;:::-;6936:8;::::0;6808:88;;-1:-1:-1;6984:15:3::1;6906:27;7051:19;:17;:19::i;:::-;7113:158;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;7290:10:::1;7080:30;7281:20:::0;;;:8:::1;:20:::0;;;;;;:37;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;7328:11:::1;:26:::0;;7009:61;;-1:-1:-1;7113:158:3;;7343:11;;7080:30;7328:26:::1;::::0;7343:11;;7328:26:::1;:::i;:::-;;;;;;;;7384:2;-1:-1:-1::0;;;;;7369:31:3::1;7378:4;-1:-1:-1::0;;;;;7369:31:3::1;-1:-1:-1::0;;;;;;;;;;;7388:11:3::1;7369:31;;;;160:25:8::0;;148:2;133:18;;14:177;7369:31:3::1;;;;;;;;7415:214;::::0;;7444:10:::1;23446:51:8::0;;23528:2;23513:18;;23506:34;;;23556:18;;;23549:34;;;23614:2;23599:18;;23592:34;;;23657:3;23642:19;;23635:35;;;23484:3;23686:19;;23679:35;;;7415:214:3::1;::::0;23433:3:8;23418:19;7415:214:3::1;;;;;;;6422:1214;;;;;;;7642:476:::0;:::o;6079:269::-;6447:10:::1;6432:12;6512:15:::0;;;:9:::1;:15;::::0;;;;;6488:4:::1;::::0;6512:30;-1:-1:-1;6512:30:3::1;6504:66;;;::::0;-1:-1:-1;;;6504:66:3;;23009:2:8;6504:66:3::1;::::0;::::1;22991:21:8::0;23048:2;23028:18;;;23021:30;-1:-1:-1;;;23067:18:8;;;23060:53;23130:18;;6504:66:3::1;22807:347:8::0;2915:401:6;3039:10;3009:4;3029:21;;;:9;:21;;;;;:31;;3054:6;;3029:21;3009:4;;3029:31;;3054:6;;3029:31;:::i;:::-;;;;-1:-1:-1;;;;;;;3206:13:6;;;;;;:9;:13;;;;;;;:23;;;;;;3255:32;3264:10;;-1:-1:-1;;;;;;;;;;;3255:32:6;;;3223:6;160:25:8;;148:2;133:18;;14:177;5143:202:3;-1:-1:-1;;;;;;;;5215:7:3;-1:-1:-1;;;;;;;;;;;;;;;5252:17:3;5272:6;5279:8;5272:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5272:16:3;;;5317:20;;;:9;:20;;;;;;;5298:40;;;;;;;;;;;5272:16;5298:40;;;-1:-1:-1;;;;;5298:40:3;;;;;;;;;;;;;;;;;;;;;5272:16;;5298:40;;-1:-1:-1;5143:202:3;-1:-1:-1;;;5143:202:3:o;4117:1279:6:-;4336:15;4324:8;:27;;4316:63;;;;-1:-1:-1;;;4316:63:6;;23927:2:8;4316:63:6;;;23909:21:8;23966:2;23946:18;;;23939:30;24005:25;23985:18;;;23978:53;24048:18;;4316:63:6;23725:347:8;4316:63:6;4544:14;4658:18;:16;:18::i;:::-;-1:-1:-1;;;;;4925:13:6;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4733:271;;1727:117;4733:271;;;24364:25:8;24443:18;;;24436:43;;;;24515:15;;;24495:18;;;24488:43;24547:18;;;24540:34;;;24590:19;;;24583:35;;;;24634:19;;;;24627:35;;;4733:271:6;;;;;;;;;;24336:19:8;;;4733:271:6;;;4698:328;;;;;;;;-1:-1:-1;;;4588:456:6;;;24931:27:8;24974:11;;;24967:27;;;;25010:12;;;25003:28;;;;25047:12;;4588:456:6;;;-1:-1:-1;;4588:456:6;;;;;;;;;4561:497;;4588:456;4561:497;;;;5073:24;5100:26;;;;;;;;;25297:25:8;;;25370:4;25358:17;;25338:18;;;25331:45;;;;25392:18;;;25385:34;;;25435:18;;;25428:34;;;4561:497:6;;-1:-1:-1;5073:24:6;5100:26;;25269:19:8;;5100:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:26:6;;-1:-1:-1;;5100:26:6;;;-1:-1:-1;;;;;;;5166:30:6;;;;;;:59;;;5220:5;-1:-1:-1;;;;;5200:25:6;:16;-1:-1:-1;;;;;5200:25:6;;5166:59;5141:132;;;;-1:-1:-1;;;5141:132:6;;25675:2:8;5141:132:6;;;25657:21:8;25714:2;25694:18;;;25687:30;-1:-1:-1;;;25733:18:8;;;25726:44;25787:18;;5141:132:6;25473:338:8;5141:132:6;-1:-1:-1;;;;;5288:27:6;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5358:31;160:25:8;;;5288:36:6;;-1:-1:-1;5358:31:6;;;;;;133:18:8;5358:31:6;;;;;;;4117:1279;;;;;;;:::o;3572:130:3:-;1772:5;;-1:-1:-1;;;;;1772:5:3;1758:10;:19;1750:28;;;;;;3641:5:::1;:17:::0;;-1:-1:-1;;;;;;3641:17:3::1;-1:-1:-1::0;;;;;3641:17:3;::::1;::::0;;::::1;::::0;;;3673:22:::1;::::0;3617:51:8;;;3673:22:3::1;::::0;3605:2:8;3590:18;3673:22:3::1;3471:203:8::0;10991:1391:3;-1:-1:-1;;;;;11135:14:3;;11093:7;11135:14;;;:8;:14;;;;;:33;;;11116:15;:52;11112:66;;-1:-1:-1;11177:1:3;11170:8;;11112:66;-1:-1:-1;;;;;11240:14:3;;11188:19;11240:14;;;:8;:14;;;;;:33;;;11210:63;;:15;:63;:::i;:::-;-1:-1:-1;;;;;11352:14:3;;11283:32;11352:14;;;:8;:14;;;;;:45;;;11188:85;;-1:-1:-1;11283:32:3;11318:19;:17;:19::i;:::-;:79;;;;:::i;:::-;11283:114;;11428:19;11461:7;11457:321;;;-1:-1:-1;;;;;11509:14:3;;;;;;:8;:14;;;;;:33;;;11498:8;;:44;;11509:33;11498:44;:::i;:::-;11484:58;;11457:321;;;11756:11;;11721:14;;11703:32;;:15;:32;:::i;:::-;11683:11;;:16;;939:5;;11683:16;:::i;:::-;:53;;;;:::i;:::-;11682:85;;;;:::i;:::-;-1:-1:-1;;;;;11630:14:3;;;;;;:8;:14;;;;;:33;;;11603:8;;:60;;11630:33;11603:60;:::i;:::-;:164;;;;:::i;:::-;11573:194;;11457:321;11787:27;11817:25;11831:11;11817;:25;:::i;:::-;11787:55;-1:-1:-1;11856:24:3;11852:38;;11889:1;11882:8;;;;;;;;11852:38;-1:-1:-1;;;;;11993:14:3;;11964:25;11993:14;;;:8;:14;;;;;:29;12043:19;;11993:34;;939:5;;11993:34;:::i;:::-;11992:70;;;;:::i;:::-;11964:98;-1:-1:-1;12110:23:3;939:5;12137:56;11964:98;12137:24;:56;:::i;:::-;12136:63;;;;:::i;:::-;12110:89;;12229:13;;12214:11;:28;12210:166;;12265:15;-1:-1:-1;12258:22:3;;-1:-1:-1;;;;;12258:22:3;12210:166;12352:13;;12319:29;12337:11;12319:15;:29;:::i;:::-;12318:47;;;;:::i;:::-;12311:54;;;;;;;;;;276:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8619:1039::-;8667:13;8732;8748:33;8770:4;8776;8748:21;:33::i;:::-;8732:49;;8791:24;8818:6;8791:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8791:33:3;;;;;;;;;;;;;;;;;;;;;;;8834:24;8875:7;:14;8861:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8861:29:3;-1:-1:-1;8834:56:3;-1:-1:-1;8904:9:3;;8900:752;;8965:8;;-1:-1:-1;;;;;8929:14:3;;;;;;:8;:14;;;;;:33;;:44;9035:19;:17;:19::i;:::-;-1:-1:-1;;;;;8987:14:3;;;;;;:8;:14;;;;;:45;;;:67;;;;9104:15;9068:33;;;:51;9133:38;;9166:5;;8987:14;;9133:38;;9166:5;;9133:38;:::i;:::-;;;;-1:-1:-1;;9216:11:3;;9185:19;;992:8;;9208:19;;:5;:19;:::i;:::-;9207:39;;;;:::i;:::-;9185:61;-1:-1:-1;9260:18:3;9281:16;939:5;9185:61;9281:16;:::i;:::-;9260:37;;9311:32;9325:4;9332:10;9311:5;:32::i;:::-;9362:9;9357:219;9381:7;:14;9377:1;:18;9357:219;;;9420:14;9437:29;9457:5;9464:1;9437:19;:29::i;:::-;9420:46;;9497:6;9484:7;9492:1;9484:10;;;;;;;;:::i;:::-;;;;;;:19;;;;;9527:7;9535:1;9527:10;;;;;;;;:::i;:::-;;;;;;;;;;;9521:40;;-1:-1:-1;;;9521:40:3;;-1:-1:-1;;;;;16720:32:8;;;9521:40:3;;;16702:51:8;16769:18;;;16762:34;;;9521:26:3;;;;;;16675:18:8;;9521:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9402:174;9397:3;;;;;:::i;:::-;;;;9357:219;;;;9594:47;9611:4;9617:5;9624:7;9633;9594:47;;;;;;;;;:::i;:::-;;;;;;;;8915:737;;8900:752;8682:976;;;8619:1039;;;:::o;5629:492:6:-;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;27953:25:8;;;;27994:18;;27987:34;;;;5998:14:6;28037:18:8;;;28030:34;6034:13:6;28080:18:8;;;28073:34;6077:4:6;28123:19:8;;;28116:61;27925:19;;5759:341:6;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;6315:325::-;6400:6;6385:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6552:13:6;;;;;;:9;:13;;;;;;;;:23;;;;;;6601:32;160:25:8;;;-1:-1:-1;;;;;;;;;;;6601:32:6;133:18:8;6601:32:6;;;;;;;;6315:325;;:::o;9664:283:3:-;9807:6;:13;9770:7;;9797:23;;9789:56;;;;-1:-1:-1;;;9789:56:3;;28390:2:8;9789:56:3;;;28372:21:8;28429:2;28409:18;;;28402:30;-1:-1:-1;;;28448:18:8;;;28441:50;28508:18;;9789:56:3;28188:344:8;9789:56:3;939:5;9874:66;;992:8;9911:5;9875:9;:26;9885:6;9892:7;9885:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;9885:15:3;9875:26;;;;;;;;;;;;:33;:41;;;;:::i;:::-;9874:61;;;;:::i;:::-;:66;;;;:::i;:::-;9855:85;9664:283;-1:-1:-1;;;9664:283:3:o;12436:461::-;12526:14;:30;12488:7;;-1:-1:-1;;;12526:30:3;;;;;12566:28;;12593:1;12586:8;;;12436:461;:::o;12566:28::-;12625:14;:26;;;12604:18;12681:35;12707:9;12688:15;12681:35;:::i;:::-;12661:55;;12745:10;12730:25;;:11;:25;;;12726:40;;-1:-1:-1;939:5:3;;12436:461;-1:-1:-1;;;12436:461:3:o;12726:40::-;12794:14;:20;;;;;;;;12780:34;;;;12776:48;;12823:1;12816:8;;;;;12436:461;:::o;12776:48::-;12870:20;;;;;12842:24;;939:5;;12842:19;;:24;:::i;:::-;12841:49;;;;:::i;:::-;12834:56;;;;;12436:461;:::o;6646:328:6:-;-1:-1:-1;;;;;6718:15:6;;;;;;:9;:15;;;;;:25;;6737:6;;6718:15;:25;;6737:6;;6718:25;:::i;:::-;;;;-1:-1:-1;;6886:11:6;:21;;;;;;;6933:34;;160:25:8;;;-1:-1:-1;;;;;;;6933:34:6;;;-1:-1:-1;;;;;;;;;;;6933:34:6;148:2:8;133:18;6933:34:6;14:177:8;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:472:8;238:3;276:5;270:12;303:6;298:3;291:19;328:1;338:162;352:6;349:1;346:13;338:162;;;414:4;470:13;;;466:22;;460:29;442:11;;;438:20;;431:59;367:12;338:162;;;518:6;515:1;512:13;509:87;;;584:1;577:4;568:6;563:3;559:16;555:27;548:38;509:87;-1:-1:-1;650:2:8;629:15;-1:-1:-1;;625:29:8;616:39;;;;657:4;612:50;;196:472;-1:-1:-1;;196:472:8:o;673:220::-;822:2;811:9;804:21;785:4;842:45;883:2;872:9;868:18;860:6;842:45;:::i;898:131::-;-1:-1:-1;;;;;973:31:8;;963:42;;953:70;;1019:1;1016;1009:12;1034:315;1102:6;1110;1163:2;1151:9;1142:7;1138:23;1134:32;1131:52;;;1179:1;1176;1169:12;1131:52;1218:9;1205:23;1237:31;1262:5;1237:31;:::i;:::-;1287:5;1339:2;1324:18;;;;1311:32;;-1:-1:-1;;;1034:315:8:o;1546:247::-;1605:6;1658:2;1646:9;1637:7;1633:23;1629:32;1626:52;;;1674:1;1671;1664:12;1626:52;1713:9;1700:23;1732:31;1757:5;1732:31;:::i;2194:456::-;2271:6;2279;2287;2340:2;2328:9;2319:7;2315:23;2311:32;2308:52;;;2356:1;2353;2346:12;2308:52;2395:9;2382:23;2414:31;2439:5;2414:31;:::i;:::-;2464:5;-1:-1:-1;2521:2:8;2506:18;;2493:32;2534:33;2493:32;2534:33;:::i;:::-;2194:456;;2586:7;;-1:-1:-1;;;2640:2:8;2625:18;;;;2612:32;;2194:456::o;2655:180::-;2714:6;2767:2;2755:9;2746:7;2742:23;2738:32;2735:52;;;2783:1;2780;2773:12;2735:52;-1:-1:-1;2806:23:8;;2655:180;-1:-1:-1;2655:180:8:o;3679:127::-;3740:10;3735:3;3731:20;3728:1;3721:31;3771:4;3768:1;3761:15;3795:4;3792:1;3785:15;3811:275;3882:2;3876:9;3947:2;3928:13;;-1:-1:-1;;3924:27:8;3912:40;;3982:18;3967:34;;4003:22;;;3964:62;3961:88;;;4029:18;;:::i;:::-;4065:2;4058:22;3811:275;;-1:-1:-1;3811:275:8:o;4091:182::-;4150:4;4183:18;4175:6;4172:30;4169:56;;;4205:18;;:::i;:::-;-1:-1:-1;4250:1:8;4246:14;4262:4;4242:25;;4091:182::o;4278:1539::-;4331:5;4361:4;4405:3;4400:2;4392:6;4388:15;4384:25;4374:53;;4423:1;4420;4413:12;4374:53;4459:6;4446:20;4485:4;4509:59;4525:42;4564:2;4525:42;:::i;:::-;4509:59;:::i;:::-;4602:15;;;4688:1;4684:10;;;;4672:23;;4668:32;;;4633:12;;;;4712:15;;;4709:35;;;4740:1;4737;4730:12;4709:35;4776:2;4768:6;4764:15;4788:1000;4804:6;4799:3;4796:15;4788:1000;;;4890:3;4877:17;4917:18;4967:2;4954:11;4951:19;4948:109;;;5011:1;5040:2;5036;5029:14;4948:109;5092:11;5084:6;5080:24;5070:34;;5144:3;5139:2;5135;5131:11;5127:21;5117:119;;5190:1;5219:2;5215;5208:14;5117:119;5280:2;5276;5272:11;5259:25;5307:2;5332;5328;5325:10;5322:36;;;5338:18;;:::i;:::-;5386:51;5410:11;;;-1:-1:-1;;5406:25:8;5402:34;;5386:51;:::i;:::-;5371:66;;5466:2;5457:7;5450:19;5510:3;5505:2;5500;5496;5492:11;5488:20;5485:29;5482:122;;;5556:1;5586:3;5581;5574:16;5482:122;5661:2;5656;5652;5648:11;5643:2;5634:7;5630:16;5617:47;-1:-1:-1;5711:1:8;5688:16;;;5684:25;;5677:36;5726:20;;-1:-1:-1;5766:12:8;;;;4821;;4788:1000;;;-1:-1:-1;5806:5:8;4278:1539;-1:-1:-1;;;;;;;4278:1539:8:o;5822:163::-;5889:20;;5949:10;5938:22;;5928:33;;5918:61;;5975:1;5972;5965:12;5918:61;5822:163;;;:::o;5990:556::-;6047:5;6095:4;6083:9;6078:3;6074:19;6070:30;6067:50;;;6113:1;6110;6103:12;6067:50;6146:2;6140:9;6188:4;6180:6;6176:17;6259:6;6247:10;6244:22;6223:18;6211:10;6208:34;6205:62;6202:88;;;6270:18;;:::i;:::-;6306:2;6299:22;6339:6;-1:-1:-1;6339:6:8;6369:28;6387:9;6369:28;:::i;:::-;6361:6;6354:44;6431:37;6464:2;6453:9;6449:18;6431:37;:::i;:::-;6426:2;6418:6;6414:15;6407:62;6502:37;6535:2;6524:9;6520:18;6502:37;:::i;:::-;6497:2;6489:6;6485:15;6478:62;;5990:556;;;;:::o;6551:736::-;6605:5;6658:3;6651:4;6643:6;6639:17;6635:27;6625:55;;6676:1;6673;6666:12;6625:55;6712:6;6699:20;6738:4;6762:59;6778:42;6817:2;6778:42;:::i;6762:59::-;6855:15;;;6941:1;6937:10;;;;6925:23;;6921:32;;;6886:12;;;;6965:15;;;6962:35;;;6993:1;6990;6983:12;6962:35;7029:2;7021:6;7017:15;7041:217;7057:6;7052:3;7049:15;7041:217;;;7137:3;7124:17;7154:31;7179:5;7154:31;:::i;:::-;7198:18;;7236:12;;;;7074;;7041:217;;;-1:-1:-1;7276:5:8;6551:736;-1:-1:-1;;;;;;6551:736:8:o;7292:860::-;7346:5;7399:3;7392:4;7384:6;7380:17;7376:27;7366:55;;7417:1;7414;7407:12;7366:55;7453:6;7440:20;7479:4;7503:59;7519:42;7558:2;7519:42;:::i;7503:59::-;7596:15;;;7682:1;7678:10;;;;7666:23;;7662:32;;;7627:12;;;;7706:15;;;7703:35;;;7734:1;7731;7724:12;7703:35;7770:2;7762:6;7758:15;7782:341;7798:6;7793:3;7790:15;7782:341;;;7878:3;7865:17;-1:-1:-1;;;;;7919:5:8;7915:46;7908:5;7905:57;7895:155;;8004:1;8033:2;8029;8022:14;7895:155;8063:18;;8101:12;;;;7815;;7782:341;;8157:661;8211:5;8264:3;8257:4;8249:6;8245:17;8241:27;8231:55;;8282:1;8279;8272:12;8231:55;8318:6;8305:20;8344:4;8368:59;8384:42;8423:2;8384:42;:::i;8368:59::-;8461:15;;;8547:1;8543:10;;;;8531:23;;8527:32;;;8492:12;;;;8571:15;;;8568:35;;;8599:1;8596;8589:12;8568:35;8635:2;8627:6;8623:15;8647:142;8663:6;8658:3;8655:15;8647:142;;;8729:17;;8717:30;;8767:12;;;;8680;;8647:142;;8823:1406;9088:6;9096;9104;9112;9120;9128;9181:3;9169:9;9160:7;9156:23;9152:33;9149:53;;;9198:1;9195;9188:12;9149:53;9238:9;9225:23;9267:18;9308:2;9300:6;9297:14;9294:34;;;9324:1;9321;9314:12;9294:34;9347:60;9399:7;9390:6;9379:9;9375:22;9347:60;:::i;:::-;9337:70;;9426:57;9475:7;9470:2;9459:9;9455:18;9426:57;:::i;:::-;9416:67;;9536:3;9525:9;9521:19;9508:33;9492:49;;9566:2;9556:8;9553:16;9550:36;;;9582:1;9579;9572:12;9550:36;9605:63;9660:7;9649:8;9638:9;9634:24;9605:63;:::i;:::-;9595:73;;9721:3;9710:9;9706:19;9693:33;9677:49;;9751:2;9741:8;9738:16;9735:36;;;9767:1;9764;9757:12;9735:36;9790:63;9845:7;9834:8;9823:9;9819:24;9790:63;:::i;:::-;9780:73;;9906:3;9895:9;9891:19;9878:33;9862:49;;9936:2;9926:8;9923:16;9920:36;;;9952:1;9949;9942:12;9920:36;9975:63;10030:7;10019:8;10008:9;10004:24;9975:63;:::i;:::-;9965:73;;10091:3;10080:9;10076:19;10063:33;10047:49;;10121:2;10111:8;10108:16;10105:36;;;10137:1;10134;10127:12;10105:36;;10160:63;10215:7;10204:8;10193:9;10189:24;10160:63;:::i;:::-;10150:73;;;8823:1406;;;;;;;;:::o;10530:642::-;10695:2;10747:21;;;10817:13;;10720:18;;;10839:22;;;10666:4;;10695:2;10918:15;;;;10892:2;10877:18;;;10666:4;10961:185;10975:6;10972:1;10969:13;10961:185;;;11050:13;;11043:21;11036:29;11024:42;;11121:15;;;;11086:12;;;;10997:1;10990:9;10961:185;;;-1:-1:-1;11163:3:8;;10530:642;-1:-1:-1;;;;;;10530:642:8:o;11177:435::-;11230:3;11268:5;11262:12;11295:6;11290:3;11283:19;11321:4;11350:2;11345:3;11341:12;11334:19;;11387:2;11380:5;11376:14;11408:1;11418:169;11432:6;11429:1;11426:13;11418:169;;;11493:13;;11481:26;;11527:12;;;;11562:15;;;;11454:1;11447:9;11418:169;;;-1:-1:-1;11603:3:8;;11177:435;-1:-1:-1;;;;;11177:435:8:o;11617:261::-;11796:2;11785:9;11778:21;11759:4;11816:56;11868:2;11857:9;11853:18;11845:6;11816:56;:::i;12409:114::-;12493:4;12486:5;12482:16;12475:5;12472:27;12462:55;;12513:1;12510;12503:12;12528:801;12639:6;12647;12655;12663;12671;12679;12687;12740:3;12728:9;12719:7;12715:23;12711:33;12708:53;;;12757:1;12754;12747:12;12708:53;12796:9;12783:23;12815:31;12840:5;12815:31;:::i;:::-;12865:5;-1:-1:-1;12922:2:8;12907:18;;12894:32;12935:33;12894:32;12935:33;:::i;:::-;12987:7;-1:-1:-1;13041:2:8;13026:18;;13013:32;;-1:-1:-1;13092:2:8;13077:18;;13064:32;;-1:-1:-1;13148:3:8;13133:19;;13120:33;13162:31;13120:33;13162:31;:::i;:::-;12528:801;;;;-1:-1:-1;12528:801:8;;;;13212:7;13266:3;13251:19;;13238:33;;-1:-1:-1;13318:3:8;13303:19;;;13290:33;;12528:801;-1:-1:-1;;12528:801:8:o;13334:388::-;13402:6;13410;13463:2;13451:9;13442:7;13438:23;13434:32;13431:52;;;13479:1;13476;13469:12;13431:52;13518:9;13505:23;13537:31;13562:5;13537:31;:::i;:::-;13587:5;-1:-1:-1;13644:2:8;13629:18;;13616:32;13657:33;13616:32;13657:33;:::i;:::-;13709:7;13699:17;;;13334:388;;;;;:::o;14101:118::-;14187:5;14180:13;14173:21;14166:5;14163:32;14153:60;;14209:1;14206;14199:12;14224:382;14289:6;14297;14350:2;14338:9;14329:7;14325:23;14321:32;14318:52;;;14366:1;14363;14356:12;14318:52;14405:9;14392:23;14424:31;14449:5;14424:31;:::i;:::-;14474:5;-1:-1:-1;14531:2:8;14516:18;;14503:32;14544:30;14503:32;14544:30;:::i;15002:380::-;15081:1;15077:12;;;;15124;;;15145:61;;15199:4;15191:6;15187:17;15177:27;;15145:61;15252:2;15244:6;15241:14;15221:18;15218:38;15215:161;;;15298:10;15293:3;15289:20;15286:1;15279:31;15333:4;15330:1;15323:15;15361:4;15358:1;15351:15;15215:161;;15002:380;;;:::o;15387:127::-;15448:10;15443:3;15439:20;15436:1;15429:31;15479:4;15476:1;15469:15;15503:4;15500:1;15493:15;15519:125;15559:4;15587:1;15584;15581:8;15578:34;;;15592:18;;:::i;:::-;-1:-1:-1;15629:9:8;;15519:125::o;15649:168::-;15689:7;15755:1;15751;15747:6;15743:14;15740:1;15737:21;15732:1;15725:9;15718:17;15714:45;15711:71;;;15762:18;;:::i;:::-;-1:-1:-1;15802:9:8;;15649:168::o;15822:217::-;15862:1;15888;15878:132;;15932:10;15927:3;15923:20;15920:1;15913:31;15967:4;15964:1;15957:15;15995:4;15992:1;15985:15;15878:132;-1:-1:-1;16024:9:8;;15822:217::o;16044:128::-;16084:3;16115:1;16111:6;16108:1;16105:13;16102:39;;;16121:18;;:::i;:::-;-1:-1:-1;16157:9:8;;16044:128::o;16807:245::-;16874:6;16927:2;16915:9;16906:7;16902:23;16898:32;16895:52;;;16943:1;16940;16933:12;16895:52;16975:9;16969:16;16994:28;17016:5;16994:28;:::i;17057:127::-;17118:10;17113:3;17109:20;17106:1;17099:31;17149:4;17146:1;17139:15;17173:4;17170:1;17163:15;17569:247;17637:6;17690:2;17678:9;17669:7;17665:23;17661:32;17658:52;;;17706:1;17703;17696:12;17658:52;17738:9;17732:16;17757:29;17780:5;17757:29;:::i;17821:422::-;17910:1;17953:5;17910:1;17967:270;17988:7;17978:8;17975:21;17967:270;;;18047:4;18043:1;18039:6;18035:17;18029:4;18026:27;18023:53;;;18056:18;;:::i;:::-;18106:7;18096:8;18092:22;18089:55;;;18126:16;;;;18089:55;18205:22;;;;18165:15;;;;17967:270;;;17971:3;17821:422;;;;;:::o;18248:806::-;18297:5;18327:8;18317:80;;-1:-1:-1;18368:1:8;18382:5;;18317:80;18416:4;18406:76;;-1:-1:-1;18453:1:8;18467:5;;18406:76;18498:4;18516:1;18511:59;;;;18584:1;18579:130;;;;18491:218;;18511:59;18541:1;18532:10;;18555:5;;;18579:130;18616:3;18606:8;18603:17;18600:43;;;18623:18;;:::i;:::-;-1:-1:-1;;18679:1:8;18665:16;;18694:5;;18491:218;;18793:2;18783:8;18780:16;18774:3;18768:4;18765:13;18761:36;18755:2;18745:8;18742:16;18737:2;18731:4;18728:12;18724:35;18721:77;18718:159;;;-1:-1:-1;18830:19:8;;;18862:5;;18718:159;18909:34;18934:8;18928:4;18909:34;:::i;:::-;18979:6;18975:1;18971:6;18967:19;18958:7;18955:32;18952:58;;;18990:18;;:::i;:::-;19028:20;;18248:806;-1:-1:-1;;;18248:806:8:o;19059:140::-;19117:5;19146:47;19187:4;19177:8;19173:19;19167:4;19146:47;:::i;19204:135::-;19243:3;-1:-1:-1;;19264:17:8;;19261:43;;;19284:18;;:::i;:::-;-1:-1:-1;19331:1:8;19320:13;;19204:135::o;19344:228::-;19383:3;19411:10;19448:2;19445:1;19441:10;19478:2;19475:1;19471:10;19509:3;19505:2;19501:12;19496:3;19493:21;19490:47;;;19517:18;;:::i;:::-;19553:13;;19344:228;-1:-1:-1;;;;19344:228:8:o;19577:461::-;19630:3;19668:5;19662:12;19695:6;19690:3;19683:19;19721:4;19750:2;19745:3;19741:12;19734:19;;19787:2;19780:5;19776:14;19808:1;19818:195;19832:6;19829:1;19826:13;19818:195;;;19897:13;;-1:-1:-1;;;;;19893:39:8;19881:52;;19953:12;;;;19988:15;;;;19929:1;19847:9;19818:195;;20043:476;20096:3;20134:5;20128:12;20161:6;20156:3;20149:19;20187:4;20216:2;20211:3;20207:12;20200:19;;20253:2;20246:5;20242:14;20274:1;20284:210;20298:6;20295:1;20292:13;20284:210;;;20363:13;;-1:-1:-1;;;;;20359:54:8;20347:67;;20434:12;;;;20469:15;;;;20320:1;20313:9;20284:210;;20524:1780;21098:3;21111:22;;;21182:13;;21083:19;;;21204:22;;;-1:-1:-1;;21245:3:8;21328:1;21324:14;;;21309:30;;21305:39;;;21264:18;;;;21363:4;21390:15;;;-1:-1:-1;21433:256:8;21447:6;21444:1;21441:13;21433:256;;;21540:3;21536:8;21524:9;21516:6;21512:22;21508:37;21503:3;21496:50;21569:40;21602:6;21593;21587:13;21569:40;:::i;:::-;21559:50;-1:-1:-1;21667:12:8;;;;21632:15;;;;21469:1;21462:9;21433:256;;;21437:3;;21737:9;21729:6;21725:22;21720:2;21709:9;21705:18;21698:50;;;;21771:44;21808:6;21800;21771:44;:::i;:::-;21757:58;;21863:9;21855:6;21851:22;21846:2;21835:9;21831:18;21824:50;21897:44;21934:6;21926;21897:44;:::i;:::-;21883:58;;21989:9;21981:6;21977:22;21972:2;21961:9;21957:18;21950:50;22023:44;22060:6;22052;22023:44;:::i;:::-;22009:58;;22116:9;22108:6;22104:22;22098:3;22087:9;22083:19;22076:51;22144:44;22181:6;22173;22144:44;:::i;:::-;22136:52;;;22197:46;22238:3;22227:9;22223:19;22215:6;10310:10;10299:22;10287:35;;10234:94;22197:46;10310:10;10299:22;;22293:3;22278:19;;10287:35;20524:1780;;;;;;;;;;:::o;22618:184::-;22688:6;22741:2;22729:9;22720:7;22716:23;22712:32;22709:52;;;22757:1;22754;22747:12;22709:52;-1:-1:-1;22780:16:8;;22618:184;-1:-1:-1;22618:184:8:o;25816:635::-;26158:1;26154;26149:3;26145:11;26141:19;26133:6;26129:32;26118:9;26111:51;26198:6;26193:2;26182:9;26178:18;26171:34;26241:3;26236:2;26225:9;26221:18;26214:31;26092:4;26268:57;26320:3;26309:9;26305:19;26297:6;26268:57;:::i;:::-;26373:9;26365:6;26361:22;26356:2;26345:9;26341:18;26334:50;26401:44;26438:6;26430;26401:44;:::i;:::-;26393:52;25816:635;-1:-1:-1;;;;;;;25816:635:8:o;26585:1104::-;26715:3;26744:1;26777:6;26771:13;26807:3;26829:1;26857:9;26853:2;26849:18;26839:28;;26917:2;26906:9;26902:18;26939;26929:61;;26983:4;26975:6;26971:17;26961:27;;26929:61;27009:2;27057;27049:6;27046:14;27026:18;27023:38;27020:165;;;-1:-1:-1;;;27084:33:8;;27140:4;27137:1;27130:15;27170:4;27091:3;27158:17;27020:165;27201:18;27228:104;;;;27346:1;27341:323;;;;27194:470;;27228:104;-1:-1:-1;;27261:24:8;;27249:37;;27306:16;;;;-1:-1:-1;27228:104:8;;27341:323;26532:1;26525:14;;;26569:4;26556:18;;27439:1;27453:165;27467:6;27464:1;27461:13;27453:165;;;27545:14;;27532:11;;;27525:35;27588:16;;;;27482:10;;27453:165;;;27457:3;;27647:6;27642:3;27638:16;27631:23;;27194:470;-1:-1:-1;27680:3:8;;26585:1104;-1:-1:-1;;;;;;;;26585:1104:8:o;28537:221::-;28576:4;28605:10;28665;;;;28635;;28687:12;;;28684:38;;;28702:18;;:::i;:::-;28739:13;;28537:221;-1:-1:-1;;;28537:221:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    125,
    12899
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D9FCE4D GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xD32E81A5 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE2F273BD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE2F273BD EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xE9963916 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xF5DAB711 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xFED45587 EQ PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD32E81A5 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xD77A1D3A EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xE0C9802F EQ PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4C8B46B GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA4C8B46B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xA583024B EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xA9320688 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D9FCE4D EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x9CFDBD5E EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35322F37 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4E71D92D GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x5DA69CB6 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x6B954292 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x35322F37 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x36E9B344 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x4AE99D30 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x4C33FE94 EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1959A002 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x296 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x2402 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH2 0x31A PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x36A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x31A PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31A PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x31A PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2773 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x43C CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x468 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x485 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP3 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 DUP4 ADD MSTORE SWAP2 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x24B PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x24B PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x5A1 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x255 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x24B PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B1 JUMP JUMPDEST PUSH2 0x1B70 JUMP JUMPDEST PUSH2 0x62F PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x255 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x3CB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x2443 JUMP JUMPDEST PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x68E SWAP1 PUSH2 0x29DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BA SWAP1 PUSH2 0x29DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x707 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x707 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x76A SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7D8 JUMPI PUSH2 0x7B3 DUP4 DUP3 PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x800 SWAP1 DUP5 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x849 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0xA16 JUMPI PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0x876 SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE PUSH2 0x8BD CALLER PUSH2 0x1D6A JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x8D9 PUSH2 0x2710 DUP6 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0x94C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x554E5354414B4520414D4F554E5420544F4F20424947 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x96B SWAP1 DUP5 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xF499973E7D3E9601430A8FBFF3E36E448210CDA3FBEC16FAD26DA79F6D0DBA4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x8BD CALLER PUSH2 0x1D6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0xB83 JUMPI PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0xA3C SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0xA4C SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA90 JUMPI JUMP JUMPDEST PUSH2 0xA99 CALLER PUSH2 0x1D6A JUMP JUMPDEST POP PUSH1 0xC SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2710 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0xAC6 SWAP2 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF499973E7D3E9601430A8FBFF3E36E448210CDA3FBEC16FAD26DA79F6D0DBA4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA90 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xBCF JUMPI PUSH2 0xBCA PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC7F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC61 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0xCA9 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xEA8 JUMPI PUSH1 0xA PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCCC JUMPI PUSH2 0xCCC PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP5 AND SWAP3 DUP5 ADD DUP4 SWAP1 MSTORE DUP8 MLOAD SWAP4 SWAP7 POP SWAP3 DUP8 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP PUSH1 0x0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDD6 JUMPI PUSH2 0xDD6 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0xE4A SWAP1 PUSH1 0xA PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xE5D PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND DUP7 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xE6F SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP PUSH2 0xE85 DUP2 DUP8 PUSH2 0x2A88 JUMP JUMPDEST SWAP6 POP PUSH2 0xE91 DUP4 DUP3 PUSH2 0x208C JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xEA0 SWAP1 PUSH2 0x2BE3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCAD JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH2 0xEE7 SWAP3 PUSH5 0x100000000 DUP2 DIV DUP4 AND SWAP3 SWAP2 SWAP1 DIV AND PUSH2 0x2BFE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xF SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0xF7A SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0xF8A SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE PUSH2 0xA1F CALLER PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0xA1F CALLER PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP5 MLOAD PUSH1 0xD DUP1 SLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 DUP2 AND SWAP3 DUP3 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP6 AND OR SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x7 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x109F JUMPI PUSH2 0x109F PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x10D1 SWAP5 SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22AB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10F1 JUMPI PUSH2 0x10F1 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x1110 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1138 JUMPI PUSH2 0x1138 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1165 JUMPI PUSH2 0x1165 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 MLOAD PUSH1 0x9 SWAP1 DUP9 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP1 PUSH2 0x123A DUP2 PUSH2 0x2BE3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1083 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SSTORE PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH32 0x489170CFE0F7FCDD8410D20D8A81DF8F038624BBCD9814CCA42D477E9D1BB469 SWAP2 PUSH2 0x1297 SWAP2 DUP11 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP10 SWAP2 PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP3 DIV DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x2C98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x68E SWAP1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D6 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1491 JUMPI PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1329 JUMPI PUSH2 0x1329 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP5 POP DUP3 SWAP1 DUP2 LT PUSH2 0x1370 JUMPI PUSH2 0x1370 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13ED SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST SWAP2 POP PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1406 JUMPI PUSH2 0x1406 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x145A JUMPI PUSH1 0x1 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1445 JUMPI PUSH2 0x1445 PUSH2 0x2ABD JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x147F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x146E JUMPI PUSH2 0x146E PUSH2 0x2ABD JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST DUP1 PUSH2 0x1489 DUP2 PUSH2 0x2BE3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1308 JUMP JUMPDEST POP SWAP2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x0 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14CA JUMPI PUSH2 0x14CA PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14F3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x153C JUMPI PUSH2 0x150D DUP4 DUP3 PUSH2 0x20E6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x151F JUMPI PUSH2 0x151F PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1534 DUP2 PUSH2 0x2BE3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP GT ISZERO PUSH2 0x1768 JUMPI PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0x155E SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x156E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1578 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xF SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP1 DUP4 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9 PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0xC SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x163E PUSH2 0x2710 DUP8 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1648 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1652 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP TIMESTAMP PUSH1 0x0 PUSH2 0x1663 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP7 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP5 MSTORE SWAP5 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP11 SWAP3 SWAP1 PUSH2 0x16C6 SWAP1 DUP5 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 PUSH1 0x40 MLOAD PUSH2 0x1700 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x9DFA08ABAE6C607453D7EF936FD3D42C4AFC359DCFA226A49BE696604A246845 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP1 DUP4 GT ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9 PUSH1 0x4B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x943 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x17E4 SWAP1 DUP5 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x76A SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x185A JUMPI PUSH2 0x185A PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x60 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x190A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1914 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A63 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1AA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24A72B20A624A22FA9A4A3A722A9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x943 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE MLOAD DUP10 DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3 SWAP1 PUSH1 0x20 ADD PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x1B9A JUMPI POP PUSH1 0x0 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1BC0 SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1BE8 PUSH2 0x21A5 JUMP JUMPDEST PUSH2 0x1BF2 SWAP2 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x10 SLOAD PUSH2 0x1C25 SWAP2 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0x1C3C SWAP1 TIMESTAMP PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1C4C SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1C56 SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1C60 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x10 SLOAD PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST PUSH2 0x1C93 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1CA2 DUP5 DUP4 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1CB6 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x1CDE SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x1CF9 DUP4 DUP8 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1D03 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 SLOAD DUP7 LT PUSH2 0x1D1B JUMPI SWAP6 POP PUSH2 0x776 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1D28 DUP8 DUP4 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1D32 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x776 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x68E SWAP1 PUSH2 0x29DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D78 DUP4 PUSH1 0x1 PUSH2 0x1B70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DB4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF5 JUMPI PUSH2 0x1DF5 PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 ISZERO PUSH2 0x1FEA JUMPI PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH2 0x1E4E PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x1E85 SWAP1 DUP5 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1EA4 SWAP1 DUP7 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1EAE SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EBE PUSH2 0x2710 DUP4 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ECA ADDRESS DUP3 PUSH2 0x2249 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x0 PUSH2 0x1EE2 DUP8 DUP4 PUSH2 0x20E6 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EF7 JUMPI PUSH2 0x1EF7 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F15 JUMPI PUSH2 0x1F15 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F94 SWAP2 SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1FA1 SWAP1 PUSH2 0x2BE3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ECD JUMP JUMPDEST POP PUSH32 0xBBFAF902CEC9107D8131A7888C2B89C5E5820FF6319B992657E8EAA9A36FECED DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1FDF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2024 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B92590813D5550813D1881093D55391 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x2710 PUSH4 0xFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0xA PUSH1 0x0 PUSH1 0x9 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x215B JUMPI PUSH2 0x215B PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x218A SWAP2 SWAP1 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2194 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST PUSH2 0x219E SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x21C5 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 PUSH2 0x21DA DUP4 TIMESTAMP PUSH2 0x2E66 JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x21FA JUMPI POP PUSH2 0x2710 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0xFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x221F JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x2237 SWAP1 PUSH2 0x2710 SWAP1 DUP5 AND PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2241 SWAP2 SWAP1 PUSH2 0x2A66 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2271 SWAP1 DUP5 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x20DA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x22B7 SWAP1 PUSH2 0x29DF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x22D9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x231F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x22F2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x231F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x231F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x231F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2304 JUMP JUMPDEST POP PUSH2 0x232B SWAP3 SWAP2 POP PUSH2 0x232F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x232B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x236A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x234E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x219E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x23D7 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x219E DUP2 PUSH2 0x23A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2422 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2432 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x249B JUMPI PUSH2 0x249B PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24BD JUMPI PUSH2 0x24BD PUSH2 0x245C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x24D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x20 PUSH2 0x24EE PUSH2 0x24E9 DUP4 PUSH2 0x24A3 JUMP JUMPDEST PUSH2 0x2472 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP6 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP8 DUP5 GT ISZERO PUSH2 0x250D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP8 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x25A4 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2532 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x3F DUP4 ADD SLT PUSH2 0x2547 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP6 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 DUP3 GT ISZERO PUSH2 0x255D JUMPI PUSH2 0x255D PUSH2 0x245C JUMP JUMPDEST PUSH2 0x256E DUP3 DUP12 ADD PUSH1 0x1F NOT AND DUP10 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP3 POP DUP2 DUP4 MSTORE DUP13 DUP2 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2585 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP2 DUP6 ADD DUP10 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 SWAP1 DUP3 ADD DUP8 ADD MSTORE DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2511 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x25FE JUMPI PUSH2 0x25FE PUSH2 0x245C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x260D DUP4 PUSH2 0x25B0 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x261B PUSH1 0x20 DUP5 ADD PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x262C PUSH1 0x40 DUP5 ADD PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2659 PUSH2 0x24E9 DUP4 PUSH2 0x24A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x269C JUMPI DUP1 CALLDATALOAD PUSH2 0x268F DUP2 PUSH2 0x23A4 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x267C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x26C8 PUSH2 0x24E9 DUP4 PUSH2 0x24A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x26E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x269C JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x270B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2739 PUSH2 0x24E9 DUP4 PUSH2 0x24A3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x269C JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x275C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x278D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x27A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27B1 DUP11 DUP4 DUP12 ADD PUSH2 0x24C7 JUMP JUMPDEST SWAP8 POP PUSH2 0x27C0 DUP11 PUSH1 0x20 DUP12 ADD PUSH2 0x25C9 JUMP JUMPDEST SWAP7 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E2 DUP11 DUP4 DUP12 ADD PUSH2 0x2638 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2804 DUP11 DUP4 DUP12 ADD PUSH2 0x26A7 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x281A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2826 DUP11 DUP4 DUP12 ADD PUSH2 0x2638 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2849 DUP10 DUP3 DUP11 ADD PUSH2 0x2718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2890 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2872 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28CC JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x28B0 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x219E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x289C JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x291F DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x292F DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x294D DUP2 PUSH2 0x28EA JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x297D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2988 DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2998 DUP2 PUSH2 0x23A4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x29CF DUP2 PUSH2 0x23A4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2998 DUP2 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x29F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2A14 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A42 JUMPI PUSH2 0x2A42 PUSH2 0x2A1A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A61 JUMPI PUSH2 0x2A61 PUSH2 0x2A1A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2A9B JUMPI PUSH2 0x2A9B PUSH2 0x2A1A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x219E DUP2 PUSH2 0x29A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x219E DUP2 PUSH2 0x28EA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2B2B JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2B11 JUMPI PUSH2 0x2B11 PUSH2 0x2A1A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2B1E JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2AF5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B42 JUMPI POP PUSH1 0x1 PUSH2 0x776 JUMP JUMPDEST DUP2 PUSH2 0x2B4F JUMPI POP PUSH1 0x0 PUSH2 0x776 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2B65 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2B6F JUMPI PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x776 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2B80 JUMPI PUSH2 0x2B80 PUSH2 0x2A1A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x776 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2BAE JUMPI POP DUP2 DUP2 EXP PUSH2 0x776 JUMP JUMPDEST PUSH2 0x2BB8 DUP4 DUP4 PUSH2 0x2AF0 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2BCC JUMPI PUSH2 0x2BCC PUSH2 0x2A1A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219E PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2B33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2BF7 JUMPI PUSH2 0x2BF7 PUSH2 0x2A1A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2C1D JUMPI PUSH2 0x2C1D PUSH2 0x2A1A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28CC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28CC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2C73 JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 MSTORE DUP9 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x100 PUSH1 0x5 DUP3 SWAP1 SHL DUP5 ADD DUP2 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH1 0x20 DUP1 DUP14 ADD DUP6 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI PUSH1 0xFF NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x2CDC DUP7 DUP4 MLOAD PUSH2 0x2344 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2CC0 JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE POP POP POP PUSH2 0x2D04 DUP2 DUP11 PUSH2 0x2C26 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2D18 DUP2 DUP10 PUSH2 0x2C5F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2D2C DUP2 DUP9 PUSH2 0x2C26 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D40 DUP2 DUP8 PUSH2 0x289C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D55 PUSH1 0xA0 DUP4 ADD DUP6 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2DAD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2C26 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2DBF DUP2 DUP6 PUSH2 0x289C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2DE6 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x2E06 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2E1A JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2E2B JUMPI PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2E50 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2E37 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2E83 JUMPI PUSH2 0x2E83 PUSH2 0x2A1A JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F LOG2 0xB8 0xCE 0xE 0xD SLOAD 0xD1 0xE3 0xFC 0xE7 0xDA NUMBER 0x26 0xDE CALLDATALOAD STOP 0xD2 0x4D DUP16 PUSH14 0x798B9F6CC4DB1EB482F93D64736F PUSH13 0x634300080A0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "25": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7D9FCE4D"
    },
    "38": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B"
    },
    "42": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD32E81A5"
    },
    "49": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE2F273BD"
    },
    "60": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE2F273BD"
    },
    "71": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C8"
    },
    "75": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE9963916"
    },
    "82": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DB"
    },
    "86": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF5DAB711"
    },
    "93": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EE"
    },
    "97": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF851A440"
    },
    "104": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65B"
    },
    "108": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFED45587"
    },
    "115": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66E"
    },
    "119": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD32E81A5"
    },
    "131": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52A"
    },
    "135": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD505ACCF"
    },
    "142": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x533"
    },
    "146": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD77A1D3A"
    },
    "153": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x546"
    },
    "157": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "164": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54F"
    },
    "168": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE0C9802F"
    },
    "175": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57A"
    },
    "179": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "180": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA4C8B46B"
    },
    "191": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA4C8B46B"
    },
    "202": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47D"
    },
    "206": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA583024B"
    },
    "213": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x492"
    },
    "217": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA694FC3A"
    },
    "224": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "225": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B2"
    },
    "228": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "235": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "236": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C5"
    },
    "239": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "240": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9320688"
    },
    "246": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "247": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D8"
    },
    "250": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "251": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7D9FCE4D"
    },
    "262": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41F"
    },
    "266": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7ECEBE00"
    },
    "273": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "274": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42E"
    },
    "277": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "278": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x817B1CD2"
    },
    "284": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "285": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "288": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "289": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "290": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "295": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "296": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x457"
    },
    "299": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "300": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9CFDBD5E"
    },
    "306": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "307": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "310": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "311": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "314": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "315": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x35322F37"
    },
    "322": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C9"
    },
    "326": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "328": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4E71D92D"
    },
    "333": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "334": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D"
    },
    "337": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "338": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "339": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4E71D92D"
    },
    "344": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "345": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B0"
    },
    "348": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "349": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4F64B2BE"
    },
    "355": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "356": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "359": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "360": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5DA69CB6"
    },
    "366": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "367": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E3"
    },
    "370": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "371": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "372": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6B954292"
    },
    "377": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "378": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EC"
    },
    "381": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "382": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "383": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "388": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "389": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FF"
    },
    "392": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "393": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "395": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "396": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "397": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "398": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x35322F37"
    },
    "404": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "405": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37C"
    },
    "408": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "409": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "410": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3644E515"
    },
    "415": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "416": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x384"
    },
    "419": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "420": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "421": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x36E9B344"
    },
    "426": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "427": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38C"
    },
    "430": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "431": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "432": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4AE99D30"
    },
    "437": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "438": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x395"
    },
    "441": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "442": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "443": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4C33FE94"
    },
    "448": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "449": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39D"
    },
    "452": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "453": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "456": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "457": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "458": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1959A002"
    },
    "464": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "GT",
      "path": "3"
    },
    "465": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x210"
    },
    "468": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "469": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "470": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1959A002"
    },
    "475": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "476": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29F"
    },
    "479": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "480": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "481": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "486": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "487": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F4"
    },
    "490": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "491": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2E17DE78"
    },
    "497": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "498": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307"
    },
    "501": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "502": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "503": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x30ADF81F"
    },
    "508": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "509": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31C"
    },
    "512": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "513": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "514": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "519": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "520": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x343"
    },
    "523": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "524": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "526": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "527": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "528": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "529": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E1D114"
    },
    "535": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "536": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x242"
    },
    "539": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "540": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "541": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "546": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "547": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25E"
    },
    "550": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "551": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "552": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "557": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "558": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x273"
    },
    "561": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "562": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "563": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "568": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "EQ",
      "path": "3"
    },
    "569": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "572": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "573": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "574": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "576": {
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "577": {
      "first_revert": true,
      "fn": null,
      "offset": [
        125,
        12899
      ],
      "op": "REVERT",
      "path": "3"
    },
    "578": {
      "offset": [
        686,
        712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "579": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "582": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "584": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "585": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "DUP2",
      "path": "3"
    },
    "586": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "587": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "588": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "590": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "DUP2"
    },
    "593": {
      "op": "MSTORE"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "596": {
      "op": "ADD"
    },
    "597": {
      "offset": [
        686,
        712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "598": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "600": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "601": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "602": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "603": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "SUB",
      "path": "3"
    },
    "604": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "605": {
      "fn": null,
      "offset": [
        686,
        712
      ],
      "op": "RETURN",
      "path": "3"
    },
    "606": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "607": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x266"
    },
    "610": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x681"
    },
    "613": {
      "fn": null,
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "614": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "615": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "617": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "618": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x255"
    },
    "621": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "622": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "623": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2391"
    },
    "626": {
      "fn": null,
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "628": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "631": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x281"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23B9"
    },
    "640": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "6"
    },
    "641": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "642": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "645": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "6"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "649": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "650": {
      "op": "SWAP1"
    },
    "651": {
      "op": "ISZERO"
    },
    "652": {
      "op": "ISZERO"
    },
    "653": {
      "op": "DUP2"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x255"
    },
    "661": {
      "op": "JUMP"
    },
    "662": {
      "offset": [
        1336,
        1362
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "669": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "DUP2",
      "path": "6"
    },
    "670": {
      "fn": "ERC20.approve",
      "offset": [
        1336,
        1362
      ],
      "op": "JUMP",
      "path": "6"
    },
    "671": {
      "offset": [
        1006,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "672": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D4"
    },
    "675": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD"
    },
    "678": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "679": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "681": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E5"
    },
    "684": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1006,
        1050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "686": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "688": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "690": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "691": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "694": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "696": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "699": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "700": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "702": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "704": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "705": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "ADD",
      "path": "3"
    },
    "706": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "707": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "709": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP4",
      "path": "3"
    },
    "710": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "ADD",
      "path": "3"
    },
    "711": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "712": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "714": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "715": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "716": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "ADD",
      "path": "3"
    },
    "717": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "718": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "719": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "721": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "722": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP5",
      "path": "3"
    },
    "723": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "724": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "725": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "728": {
      "fn": "ERC20.approve",
      "offset": [
        1006,
        1050
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "729": {
      "op": "SWAP5"
    },
    "730": {
      "op": "DUP6"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "op": "DUP6"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "op": "SWAP4"
    },
    "737": {
      "op": "SWAP1"
    },
    "738": {
      "op": "SWAP4"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "SWAP2"
    },
    "741": {
      "op": "DUP4"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "746": {
      "op": "DUP3"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "MSTORE"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "offset": [
        1006,
        1050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "755": {
      "op": "JUMP"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x302"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2402"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "6"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77C"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "6"
    },
    "775": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "776": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "779": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x315"
    },
    "782": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "783": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "785": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2443"
    },
    "788": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "789": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "790": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x85C"
    },
    "793": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "794": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "795": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "STOP",
      "path": "3"
    },
    "796": {
      "offset": [
        1677,
        1844
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "797": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "800": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "833": {
      "offset": [
        1677,
        1844
      ],
      "op": "DUP2",
      "path": "6"
    },
    "834": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "JUMP",
      "path": "6"
    },
    "835": {
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "836": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A"
    },
    "839": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "872": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "873": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "874": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "875": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "877": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "880": {
      "op": "SWAP1"
    },
    "881": {
      "op": "SWAP2"
    },
    "882": {
      "op": "AND"
    },
    "883": {
      "op": "DUP2"
    },
    "884": {
      "op": "MSTORE"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x255"
    },
    "891": {
      "op": "JUMP"
    },
    "892": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "893": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8124,
        8529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "896": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8124,
        8529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA22"
    },
    "899": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "900": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "904": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB99"
    },
    "907": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "908": {
      "offset": [
        317,
        342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "909": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        317,
        342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "912": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        317,
        342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "914": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        317,
        342
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "915": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        317,
        342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "916": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        317,
        342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "917": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3708,
        4944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "918": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3708,
        4944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "921": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3708,
        4944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF4"
    },
    "924": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        3708,
        4944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "925": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "926": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "929": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AB"
    },
    "932": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "933": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "935": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E5"
    },
    "938": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        3433,
        3566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "939": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "940": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2D"
    },
    "943": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        3433,
        3566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "944": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8535,
        8613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "945": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8535,
        8613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "948": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8535,
        8613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF60"
    },
    "951": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        8535,
        8613
      ],
      "op": "JUMP",
      "path": "3"
    },
    "952": {
      "offset": [
        477,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "953": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CB"
    },
    "956": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C6"
    },
    "959": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "960": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "962": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2443"
    },
    "965": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        477,
        500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "966": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCA"
    },
    "970": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        477,
        500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "971": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "972": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "974": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "op": "SWAP1"
    },
    "984": {
      "op": "SWAP2"
    },
    "985": {
      "op": "AND"
    },
    "986": {
      "op": "DUP2"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "994": {
      "op": "JUMP"
    },
    "995": {
      "offset": [
        1285,
        1325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "996": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1285,
        1325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "999": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1285,
        1325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1001": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1285,
        1325
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1002": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1285,
        1325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1003": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1285,
        1325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1004": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1005": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "1008": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FA"
    },
    "1011": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1012": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1014": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2773"
    },
    "1017": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1018": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1019": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF4"
    },
    "1022": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1023": {
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1024": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "1027": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40D"
    },
    "1030": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1031": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1033": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23E5"
    },
    "1036": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1037": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1038": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1040": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1042": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1043": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1045": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1046": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1047": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1048": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1050": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1051": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1052": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1053": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1054": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1055": {
      "offset": [
        950,
        1000
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1056": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        950,
        1000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "1059": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "1068": {
      "offset": [
        950,
        1000
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1069": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        950,
        1000
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1070": {
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1071": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "1074": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x43C"
    },
    "1077": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1078": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1080": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23E5"
    },
    "1083": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1084": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1085": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1087": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1089": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1090": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1092": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1093": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1094": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1095": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1097": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1098": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1099": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1100": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1101": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1102": {
      "offset": [
        1253,
        1279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1103": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1253,
        1279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "1106": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1253,
        1279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "1108": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1253,
        1279
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1109": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1253,
        1279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1110": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1253,
        1279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1111": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1112": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x266"
    },
    "1115": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A8"
    },
    "1118": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1119": {
      "offset": [
        911,
        944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1120": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        911,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x468"
    },
    "1123": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "1126": {
      "offset": [
        911,
        944
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1127": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        911,
        944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1128": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        911,
        944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1129": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        911,
        944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1131": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        911,
        944
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1132": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1137": {
      "op": "SWAP1"
    },
    "1138": {
      "op": "SWAP2"
    },
    "1139": {
      "op": "AND"
    },
    "1140": {
      "op": "DUP2"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "offset": [
        911,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1148": {
      "op": "JUMP"
    },
    "1149": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1150": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x485"
    },
    "1153": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B5"
    },
    "1156": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1157": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1158": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1160": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1161": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1164": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1165": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1166": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2856"
    },
    "1169": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1170": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1171": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A5"
    },
    "1174": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A0"
    },
    "1177": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1178": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1180": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E5"
    },
    "1183": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1184": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1185": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x149A"
    },
    "1188": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1189": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1190": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1192": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1193": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1196": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1197": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1198": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28D7"
    },
    "1201": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1202": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1203": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "1206": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C0"
    },
    "1209": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1210": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1212": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2443"
    },
    "1215": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6360,
        7636
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1216": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1217": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1544"
    },
    "1220": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6360,
        7636
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1221": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1222": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "1225": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D3"
    },
    "1228": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1229": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1231": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23B9"
    },
    "1234": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1235": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1236": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "1239": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1240": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1241": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EB"
    },
    "1244": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E6"
    },
    "1247": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1248": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1250": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2443"
    },
    "1253": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1254": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1255": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1829"
    },
    "1258": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1259": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1260": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1262": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1263": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "SUB"
    },
    "1272": {
      "op": "SWAP4"
    },
    "1273": {
      "op": "DUP5"
    },
    "1274": {
      "op": "AND"
    },
    "1275": {
      "op": "DUP2"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "DUP3"
    },
    "1278": {
      "op": "MLOAD"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1281": {
      "op": "DUP1"
    },
    "1282": {
      "op": "DUP4"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "SWAP2"
    },
    "1285": {
      "op": "SWAP1"
    },
    "1286": {
      "op": "SWAP2"
    },
    "1287": {
      "op": "MSTORE"
    },
    "1288": {
      "op": "DUP4"
    },
    "1289": {
      "op": "ADD"
    },
    "1290": {
      "op": "MLOAD"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1297": {
      "op": "SHL"
    },
    "1298": {
      "op": "SUB"
    },
    "1299": {
      "op": "AND"
    },
    "1300": {
      "op": "DUP2"
    },
    "1301": {
      "op": "DUP4"
    },
    "1302": {
      "op": "ADD"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "SWAP2"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MLOAD"
    },
    "1307": {
      "op": "SWAP1"
    },
    "1308": {
      "op": "SWAP2"
    },
    "1309": {
      "op": "AND"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1312": {
      "op": "DUP3"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1321": {
      "op": "JUMP"
    },
    "1322": {
      "offset": [
        1073,
        1102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1323": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1073,
        1102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "1326": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1073,
        1102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1328": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1073,
        1102
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1329": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1073,
        1102
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1330": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1073,
        1102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1331": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1332": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31A"
    },
    "1335": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x541"
    },
    "1338": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1339": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1341": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28F9"
    },
    "1344": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1345": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1346": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18BA"
    },
    "1349": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1350": {
      "offset": [
        1187,
        1210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1351": {
      "fn": "ERC20.permit",
      "offset": [
        1187,
        1210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "1354": {
      "fn": "ERC20.permit",
      "offset": [
        1187,
        1210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "1356": {
      "fn": "ERC20.permit",
      "offset": [
        1187,
        1210
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1357": {
      "fn": "ERC20.permit",
      "offset": [
        1187,
        1210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1358": {
      "fn": "ERC20.permit",
      "offset": [
        1187,
        1210
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1359": {
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1360": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "1363": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55D"
    },
    "1366": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1367": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1369": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x296A"
    },
    "1372": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1373": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1374": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1376": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1378": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1379": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1380": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1381": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1383": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1384": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1385": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1386": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1388": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1389": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1390": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1391": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1392": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1393": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1394": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1395": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1396": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1397": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1398": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1399": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1400": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1401": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1402": {
      "offset": [
        803,
        835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1403": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "1405": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1406": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A1"
    },
    "1409": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1410": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1415": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1416": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1417": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "AND",
      "path": "3"
    },
    "1418": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1419": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "1425": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1426": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DIV",
      "path": "3"
    },
    "1427": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1428": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "AND",
      "path": "3"
    },
    "1429": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "offset": [
        803,
        835
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1436": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1437": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DIV",
      "path": "3"
    },
    "1438": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "AND",
      "path": "3"
    },
    "1439": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1440": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1441": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1442": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1444": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1445": {
      "fn": "ERC20.permit",
      "offset": [
        803,
        835
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1446": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1451": {
      "op": "SWAP5"
    },
    "1452": {
      "op": "DUP6"
    },
    "1453": {
      "op": "AND"
    },
    "1454": {
      "op": "DUP2"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "SWAP3"
    },
    "1457": {
      "op": "DUP5"
    },
    "1458": {
      "op": "AND"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1461": {
      "op": "DUP5"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "SWAP3"
    },
    "1465": {
      "op": "AND"
    },
    "1466": {
      "op": "SWAP2"
    },
    "1467": {
      "op": "DUP2"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "SWAP2"
    },
    "1470": {
      "op": "SWAP1"
    },
    "1471": {
      "op": "SWAP2"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1475": {
      "op": "ADD"
    },
    "1476": {
      "offset": [
        803,
        835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1479": {
      "op": "JUMP"
    },
    "1480": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1481": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "1484": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D6"
    },
    "1487": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1488": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1490": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E5"
    },
    "1493": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        3572,
        3702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1494": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1495": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B0B"
    },
    "1498": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        3572,
        3702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1499": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1500": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B"
    },
    "1503": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E9"
    },
    "1506": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1507": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1509": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29B1"
    },
    "1512": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        10991,
        12382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1513": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1514": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B70"
    },
    "1517": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        10991,
        12382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1518": {
      "offset": [
        507,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1519": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62F"
    },
    "1522": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5FC"
    },
    "1525": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1526": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1528": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E5"
    },
    "1531": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        507,
        553
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1532": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1533": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "1535": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1537": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1538": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1540": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1541": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1542": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1543": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1545": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1546": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1547": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1548": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1549": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1551": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1552": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "ADD",
      "path": "3"
    },
    "1553": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1554": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1556": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1557": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1558": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "ADD",
      "path": "3"
    },
    "1559": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1560": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1561": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "offset": [
        507,
        553
      ],
      "op": "AND",
      "path": "3"
    },
    "1571": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "op": "SUB"
    },
    "1580": {
      "offset": [
        507,
        553
      ],
      "op": "AND",
      "path": "3"
    },
    "1581": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1582": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1583": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1584": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1586": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1587": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        507,
        553
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1588": {
      "op": "SWAP4"
    },
    "1589": {
      "op": "DUP5"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "op": "SWAP1"
    },
    "1600": {
      "op": "SWAP3"
    },
    "1601": {
      "op": "AND"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1604": {
      "op": "DUP5"
    },
    "1605": {
      "op": "ADD"
    },
    "1606": {
      "op": "MSTORE"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "op": "SUB"
    },
    "1615": {
      "op": "AND"
    },
    "1616": {
      "op": "SWAP1"
    },
    "1617": {
      "op": "DUP3"
    },
    "1618": {
      "op": "ADD"
    },
    "1619": {
      "op": "MSTORE"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "offset": [
        507,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "1626": {
      "op": "JUMP"
    },
    "1627": {
      "offset": [
        560,
        580
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1628": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1630": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1631": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CB"
    },
    "1634": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "offset": [
        560,
        580
      ],
      "op": "AND",
      "path": "3"
    },
    "1644": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1645": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        560,
        580
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1646": {
      "offset": [
        276,
        311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1647": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x266"
    },
    "1650": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67C"
    },
    "1653": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1654": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1656": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2443"
    },
    "1659": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        276,
        311
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1660": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1661": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3F"
    },
    "1664": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        276,
        311
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1665": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1666": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1668": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1669": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1670": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x68E"
    },
    "1673": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1674": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29DF"
    },
    "1677": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1678": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1679": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1680": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1682": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1683": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1685": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1686": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1687": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "6"
    },
    "1688": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "6"
    },
    "1689": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1691": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1692": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1694": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1695": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1696": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1697": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1698": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1700": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1701": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1702": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1703": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1704": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1705": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1706": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1707": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1708": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1710": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1711": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1712": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1713": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1714": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BA"
    },
    "1717": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1718": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29DF"
    },
    "1721": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1722": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1723": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1724": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1725": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x707"
    },
    "1728": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1729": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1730": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1732": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "LT",
      "path": "6"
    },
    "1733": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DC"
    },
    "1736": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1737": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1740": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1741": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1742": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1743": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "6"
    },
    "1744": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "6"
    },
    "1745": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1746": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1747": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1748": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1750": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1751": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1752": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x707"
    },
    "1755": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1756": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1757": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1758": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1759": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1760": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1761": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1763": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1764": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1766": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1768": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1769": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1770": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1771": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1772": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1773": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1774": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1775": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1776": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1778": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1779": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1780": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1782": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1783": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1784": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1785": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "GT",
      "path": "6"
    },
    "1786": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6EA"
    },
    "1789": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1790": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1791": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1792": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SUB",
      "path": "6"
    },
    "1793": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1795": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "AND",
      "path": "6"
    },
    "1796": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1797": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "6"
    },
    "1798": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1799": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1800": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "6"
    },
    "1801": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "6"
    },
    "1802": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "6"
    },
    "1803": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "6"
    },
    "1804": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "6"
    },
    "1805": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1806": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "o",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1807": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1808": {
      "fn": "ERC20.approve",
      "offset": [
        2798,
        2808
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 0
    },
    "1809": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1811": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1812": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1813": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1814": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1816": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1818": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1819": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1820": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1821": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1824": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1825": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "op": "SUB"
    },
    "1834": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1835": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "AND",
      "path": "6"
    },
    "1836": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1837": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1838": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1839": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1840": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1841": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1842": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1843": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1844": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1845": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1846": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1847": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 1
    },
    "1848": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1849": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1850": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1851": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1852": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1885": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1886": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x76A"
    },
    "1889": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1890": {
      "fn": "ERC20.approve",
      "offset": [
        2821,
        2827
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "MSTORE"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1895": {
      "op": "ADD"
    },
    "1896": {
      "op": "SWAP1"
    },
    "1897": {
      "op": "JUMP"
    },
    "1898": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1899": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1901": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1902": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1903": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1904": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SUB",
      "path": "6"
    },
    "1905": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1906": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1907": {
      "op": "POP"
    },
    "1908": {
      "fn": "ERC20.approve",
      "offset": [
        2898,
        2902
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "1910": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1911": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1912": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1913": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "6"
    },
    "1914": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "6"
    },
    "1915": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1916": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1926": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "AND",
      "path": "6"
    },
    "1927": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3440,
        3444
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1929": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1930": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1931": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1932": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1934": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1936": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1937": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1938": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1939": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1941": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1942": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1943": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1944": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3490,
        3500
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1945": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1946": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1947": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1948": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1949": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1950": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1951": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1952": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1955": {
      "op": "NOT"
    },
    "1956": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1957": {
      "branch": 109,
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "EQ",
      "path": "6"
    },
    "1958": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D8"
    },
    "1961": {
      "branch": 109,
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1962": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 3,
      "value": "0x7B3"
    },
    "1965": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3634,
        3640
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1966": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1967": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A30"
    },
    "1970": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1971": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "SUB"
    },
    "1980": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "AND",
      "path": "6"
    },
    "1982": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1986": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1987": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1989": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1991": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1992": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1993": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1994": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1996": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1997": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1998": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1999": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3610,
        3620
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2000": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2001": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2002": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2003": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2004": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2005": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2006": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3640
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2008": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 4
    },
    "2018": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "AND",
      "path": "6"
    },
    "2019": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2022": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2023": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2024": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2026": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2029": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2031": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2032": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2033": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2034": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2035": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2036": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2037": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2038": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x800"
    },
    "2041": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2042": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2043": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2044": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A30"
    },
    "2047": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2048": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2049": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2050": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2051": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "2063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2064": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "AND",
      "path": "6"
    },
    "2065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2067": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2068": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2069": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2070": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3831
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2072": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2074": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2075": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2077": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2078": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2079": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2080": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2081": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2082": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2083": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "ADD",
      "path": "6"
    },
    "2085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2086": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 6
    },
    "2088": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2091": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "AND",
      "path": "6"
    },
    "2092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2095": {
      "op": "DUP1"
    },
    "2096": {
      "op": "MLOAD"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "2102": {
      "op": "DUP4"
    },
    "2103": {
      "op": "CODECOPY"
    },
    "2104": {
      "op": "DUP2"
    },
    "2105": {
      "op": "MLOAD"
    },
    "2106": {
      "op": "SWAP2"
    },
    "2107": {
      "op": "MSTORE"
    },
    "2108": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2109": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x849"
    },
    "2112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3839,
        3845
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2114": {
      "op": "DUP2"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "SWAP1"
    },
    "2120": {
      "op": "JUMP"
    },
    "2121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SUB",
      "path": "6"
    },
    "2128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "LOG3",
      "path": "6"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x1"
    },
    "2133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2140": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2141": {
      "offset": [
        6101,
        6115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2143": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6101,
        6115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2144": {
      "offset": [
        6083,
        6098
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2145": {
      "offset": [
        6083,
        6115
      ],
      "op": "GT",
      "path": "3"
    },
    "2146": {
      "offset": [
        6079,
        6348
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2147": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6079,
        6348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA16"
    },
    "2150": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2151": {
      "offset": [
        6233,
        6244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2153": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6233,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2154": {
      "offset": [
        6198,
        6212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2156": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6198,
        6212
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2157": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x876"
    },
    "2160": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6180,
        6212
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2161": {
      "offset": [
        6180,
        6195
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2162": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "2165": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2166": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2167": {
      "offset": [
        6160,
        6171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "2169": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2170": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x886"
    },
    "2173": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2174": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2177": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2178": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2181": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2182": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2183": {
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x890"
    },
    "2186": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2187": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2188": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2191": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2192": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2193": {
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89A"
    },
    "2196": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2197": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2198": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "2201": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2202": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2203": {
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "2205": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2207": {
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2208": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2209": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2210": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8AB"
    },
    "2213": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2214": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2215": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "2218": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2219": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2220": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2221": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2222": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6131,
        6244
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "offset": [
        6275,
        6290
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2226": {
      "offset": [
        6258,
        6272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2228": {
      "offset": [
        6258,
        6290
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2229": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7720,
        7738
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x8BD"
    },
    "2232": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7727,
        7737
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2233": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7720,
        7726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6A"
    },
    "2236": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7720,
        7738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2237": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7720,
        7738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2238": {
      "op": "POP"
    },
    "2239": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7803,
        7814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2241": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7803,
        7814
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2242": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7748,
        7757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2244": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7748,
        7757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2245": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "2254": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D9"
    },
    "2257": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2260": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7776
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2261": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2264": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7761,
        7781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2265": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2266": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E3"
    },
    "2269": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7799
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2270": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2271": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2274": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7761,
        7799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2275": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7761,
        7799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2276": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7760,
        7814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8ED"
    },
    "2279": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7760,
        7814
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2280": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7760,
        7814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2281": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7760,
        7814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "2284": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7760,
        7814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2285": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7760,
        7814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2286": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7858,
        7868
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 9
    },
    "2287": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2289": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2290": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2291": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2292": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2294": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2296": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2297": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2299": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2300": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7869
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2301": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7849,
        7884
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2302": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7748,
        7814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2303": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7748,
        7814
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7845,
        7884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2306": {
      "branch": 95,
      "fn": "BuidlCollective.unstake",
      "offset": [
        7845,
        7884
      ],
      "op": "LT",
      "path": "3"
    },
    "2307": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x94C"
    },
    "2310": {
      "branch": 95,
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2311": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2313": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2322": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2325": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2327": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2328": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "ADD",
      "path": "3"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH22",
      "value": "0x554E5354414B4520414D4F554E5420544F4F20424947"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2372": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2374": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2375": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2376": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2377": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "SUB",
      "path": "3"
    },
    "2378": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2379": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2380": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7824,
        7932
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2381": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7951,
        7961
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 10
    },
    "2382": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2384": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2385": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2386": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2387": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2389": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2391": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2392": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2394": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2395": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2396": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2397": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2398": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7981,
        7982
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2399": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7981,
        7982
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2400": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7962
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2401": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96B"
    },
    "2404": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2405": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7981,
        7982
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2406": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7981,
        7982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2407": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "2410": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7942,
        7982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2411": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2412": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2413": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2414": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7942,
        7982
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x40"
    },
    "2419": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2420": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2427": {
      "op": "SHL"
    },
    "2428": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2429": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2430": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8022,
        8032
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2431": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2433": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2434": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ADD",
      "path": "3"
    },
    "2435": {
      "op": "MSTORE"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2438": {
      "op": "DUP2"
    },
    "2439": {
      "op": "ADD"
    },
    "2440": {
      "op": "DUP4"
    },
    "2441": {
      "op": "SWAP1"
    },
    "2442": {
      "op": "MSTORE"
    },
    "2443": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8006,
        8010
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2444": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8006,
        8010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2445": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8021
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2450": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2453": {
      "op": "ADD"
    },
    "2454": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2456": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2458": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2459": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2460": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2461": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "SUB",
      "path": "3"
    },
    "2462": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2463": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2465": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2466": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "GAS",
      "path": "3"
    },
    "2467": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "CALL",
      "path": "3"
    },
    "2468": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2469": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2470": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2471": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B4"
    },
    "2474": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2475": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2476": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2478": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2479": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2480": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2481": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2483": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2484": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2485": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "POP",
      "path": "3"
    },
    "2486": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "POP",
      "path": "3"
    },
    "2487": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "POP",
      "path": "3"
    },
    "2488": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "POP",
      "path": "3"
    },
    "2489": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2491": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2492": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2493": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2495": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "NOT",
      "path": "3"
    },
    "2496": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2498": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2499": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ADD",
      "path": "3"
    },
    "2500": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "AND",
      "path": "3"
    },
    "2501": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2502": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ADD",
      "path": "3"
    },
    "2503": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2504": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2506": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2507": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "POP",
      "path": "3"
    },
    "2508": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2509": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "ADD",
      "path": "3"
    },
    "2510": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2511": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D8"
    },
    "2514": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2515": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2516": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA0"
    },
    "2519": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7992,
        8050
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2520": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7992,
        8050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2521": {
      "op": "POP"
    },
    "2522": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x40"
    },
    "2524": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2525": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2526": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8083,
        8093
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2527": {
      "op": "DUP2"
    },
    "2528": {
      "op": "MSTORE"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2531": {
      "op": "DUP2"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "DUP5"
    },
    "2534": {
      "op": "SWAP1"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF499973E7D3E9601430A8FBFF3E36E448210CDA3FBEC16FAD26DA79F6D0DBA4"
    },
    "2569": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2573": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2574": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2575": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2576": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "SUB",
      "path": "3"
    },
    "2577": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2578": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        8065,
        8111
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2579": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7710,
        8118
      ],
      "op": "POP",
      "path": "3"
    },
    "2580": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "POP",
      "path": "3"
    },
    "2581": {
      "fn": "BuidlCollective.unstake",
      "jump": "o",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2582": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2583": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7720,
        7738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8BD"
    },
    "2586": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7727,
        7737
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2587": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7720,
        7726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6A"
    },
    "2590": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        7720,
        7738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2591": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2592": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "POP",
      "path": "3"
    },
    "2593": {
      "fn": "BuidlCollective.unstake",
      "jump": "o",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2594": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2595": {
      "offset": [
        6101,
        6115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2597": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6101,
        6115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2598": {
      "offset": [
        6083,
        6098
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2599": {
      "offset": [
        6083,
        6115
      ],
      "op": "GT",
      "path": "3"
    },
    "2600": {
      "offset": [
        6079,
        6348
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2601": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6079,
        6348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB83"
    },
    "2604": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2605": {
      "offset": [
        6233,
        6244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2607": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6233,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2608": {
      "offset": [
        6198,
        6212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2610": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6198,
        6212
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2611": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3C"
    },
    "2614": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6180,
        6212
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2615": {
      "offset": [
        6180,
        6195
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2616": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "2619": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2620": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2621": {
      "offset": [
        6160,
        6171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "2623": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2624": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4C"
    },
    "2627": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2628": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2631": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2632": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2635": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2636": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2637": {
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA56"
    },
    "2640": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2641": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2642": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2645": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2646": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2647": {
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA60"
    },
    "2650": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2651": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2652": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "2655": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2656": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2657": {
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "2659": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2661": {
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2662": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2663": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2664": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA71"
    },
    "2667": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2668": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2669": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "2672": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2673": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2674": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2675": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2676": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6131,
        6244
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "offset": [
        6275,
        6290
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2680": {
      "offset": [
        6258,
        6272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2682": {
      "offset": [
        6258,
        6290
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2683": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8195,
        8205
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2684": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2686": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2687": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2688": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2689": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2691": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2693": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2694": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2696": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2697": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2698": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8221
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2699": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8182,
        8235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA90"
    },
    "2702": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8182,
        8235
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2703": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2704": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8182,
        8235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2705": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8244,
        8262
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0xA99"
    },
    "2708": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8251,
        8261
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2709": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8244,
        8250
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6A"
    },
    "2712": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8244,
        8262
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2713": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8244,
        8262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8344,
        8355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2717": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8344,
        8355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2718": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8303,
        8313
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2719": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8272,
        8290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2721": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2722": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2723": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2724": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2726": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2728": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2729": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2731": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2732": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2733": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8329
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2734": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8272,
        8290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2735": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8272,
        8290
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2736": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2739": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        939,
        944
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2740": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "2749": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        992,
        1000
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2750": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC6"
    },
    "2753": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2754": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "2757": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8294,
        8355
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2758": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8294,
        8355
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2759": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD0"
    },
    "2762": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2763": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2764": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "2767": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8293,
        8386
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2768": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8386
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2769": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADA"
    },
    "2772": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8403
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2773": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2774": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "2777": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8293,
        8403
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2778": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8293,
        8403
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2779": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x40"
    },
    "2781": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2782": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2791": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2792": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8443,
        8453
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2793": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2795": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2796": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ADD",
      "path": "3"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2800": {
      "op": "DUP2"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "SWAP1"
    },
    "2804": {
      "op": "MSTORE"
    },
    "2805": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8272,
        8403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8272,
        8403
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2807": {
      "op": "POP"
    },
    "2808": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8427,
        8431
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2809": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8427,
        8431
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2810": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8442
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2815": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8442
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2821": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2823": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2824": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2825": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2826": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "SUB",
      "path": "3"
    },
    "2827": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2828": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2830": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2831": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "GAS",
      "path": "3"
    },
    "2832": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "CALL",
      "path": "3"
    },
    "2833": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2834": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2835": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2836": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB21"
    },
    "2839": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2840": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2841": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2843": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2844": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2845": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2846": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2848": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2849": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2850": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "POP",
      "path": "3"
    },
    "2851": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "POP",
      "path": "3"
    },
    "2852": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "POP",
      "path": "3"
    },
    "2853": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "POP",
      "path": "3"
    },
    "2854": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2856": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2857": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2858": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2860": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "NOT",
      "path": "3"
    },
    "2861": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2863": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2864": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ADD",
      "path": "3"
    },
    "2865": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "AND",
      "path": "3"
    },
    "2866": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2867": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ADD",
      "path": "3"
    },
    "2868": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2869": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2871": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2872": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "POP",
      "path": "3"
    },
    "2873": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2874": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "ADD",
      "path": "3"
    },
    "2875": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2876": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB45"
    },
    "2879": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2880": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2881": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA0"
    },
    "2884": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        8413,
        8466
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2885": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8413,
        8466
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x40"
    },
    "2889": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2890": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2891": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8499,
        8509
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2892": {
      "op": "DUP2"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2896": {
      "op": "DUP2"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "DUP4"
    },
    "2899": {
      "op": "SWAP1"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF499973E7D3E9601430A8FBFF3E36E448210CDA3FBEC16FAD26DA79F6D0DBA4"
    },
    "2934": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2935": {
      "op": "ADD"
    },
    "2936": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2937": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2939": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2940": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2941": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2942": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "SUB",
      "path": "3"
    },
    "2943": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2944": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8481,
        8522
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2945": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8172,
        8529
      ],
      "op": "POP",
      "path": "3"
    },
    "2946": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2947": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2948": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8195,
        8205
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2949": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2951": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2952": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2953": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2956": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2958": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2959": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2961": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2962": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8206
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2963": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8186,
        8221
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2964": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8182,
        8235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA90"
    },
    "2967": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        8182,
        8235
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2968": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        8124,
        8529
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2969": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2970": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5459,
        5466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2972": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5514,
        5530
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 16,
      "value": "0x0"
    },
    "3005": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5510
      ],
      "op": "CHAINID",
      "path": "6"
    },
    "3006": {
      "branch": 110,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5530
      ],
      "op": "EQ",
      "path": "6"
    },
    "3007": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCF"
    },
    "3010": {
      "branch": 110,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3011": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "3014": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5614
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF2"
    },
    "3017": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3018": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3019": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3020": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "POP",
      "path": "6"
    },
    "3021": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3022": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3023": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3024": {
      "op": "POP"
    },
    "3025": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "3058": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3059": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3060": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3708,
        4944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3061": {
      "offset": [
        1772,
        1777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "3063": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1772,
        1777
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "SUB"
    },
    "3072": {
      "offset": [
        1772,
        1777
      ],
      "op": "AND",
      "path": "3"
    },
    "3073": {
      "offset": [
        1758,
        1768
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3074": {
      "offset": [
        1758,
        1777
      ],
      "op": "EQ",
      "path": "3"
    },
    "3075": {
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0B"
    },
    "3078": {
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3079": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3081": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1750,
        1778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3082": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1750,
        1778
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3083": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3084": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3772,
        3789
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x6"
    },
    "3086": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3772,
        3789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3087": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3772,
        3789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3089": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3772,
        3789
      ],
      "op": "AND",
      "path": "3"
    },
    "3090": {
      "branch": 96,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3772,
        3798
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3091": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1B"
    },
    "3094": {
      "branch": 96,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3095": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3097": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3098": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3099": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3764,
        3799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3100": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3826
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x6"
    },
    "3102": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3103": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3106": {
      "op": "NOT"
    },
    "3107": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "AND",
      "path": "3"
    },
    "3108": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3829,
        3833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3110": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "OR",
      "path": "3"
    },
    "3111": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3112": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3833
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3113": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3870,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3115": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3116": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3117": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3119": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3120": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3121": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3123": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3124": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3125": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MUL",
      "path": "3"
    },
    "3126": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3127": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3128": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3129": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3130": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3131": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3132": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3133": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3134": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3135": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3136": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3138": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3809,
        3826
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3139": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3140": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3141": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3870,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3142": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3870,
        3876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3143": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3144": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3145": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3870,
        3876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3146": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3147": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3148": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3149": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7F"
    },
    "3152": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3153": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3155": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MUL",
      "path": "3"
    },
    "3156": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3157": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3158": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3159": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3160": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3162": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3163": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3165": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3167": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3168": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3169": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3170": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3171": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3178": {
      "op": "SHL"
    },
    "3179": {
      "op": "SUB"
    },
    "3180": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "AND",
      "path": "3"
    },
    "3181": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3182": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3183": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3185": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3186": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3187": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3188": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3189": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3191": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "ADD",
      "path": "3"
    },
    "3192": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3193": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3194": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "GT",
      "path": "3"
    },
    "3195": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC61"
    },
    "3198": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3199": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3200": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3201": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3202": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3203": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3204": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3205": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3206": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3843,
        3876
      ],
      "op": "POP",
      "path": "3"
    },
    "3207": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3886,
        3913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA9"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3212": {
      "op": "DUP1"
    },
    "3213": {
      "op": "MLOAD"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3216": {
      "op": "DUP2"
    },
    "3217": {
      "op": "ADD"
    },
    "3218": {
      "op": "DUP3"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3222": {
      "op": "DUP1"
    },
    "3223": {
      "op": "DUP3"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "op": "DUP3"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "DUP2"
    },
    "3230": {
      "op": "SWAP1"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "SWAP2"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "SWAP2"
    },
    "3236": {
      "op": "SWAP1"
    },
    "3237": {
      "op": "SWAP2"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "op": "SWAP1"
    },
    "3240": {
      "op": "JUMP"
    },
    "3241": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3886,
        3913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3242": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3923,
        3943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3244": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3958,
        3967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3245": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3246": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3973,
        3980
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3247": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3973,
        3987
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3248": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3969,
        3970
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3249": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3969,
        3987
      ],
      "op": "LT",
      "path": "3"
    },
    "3250": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3251": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA8"
    },
    "3254": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3255": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4030
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0xA"
    },
    "3257": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3259": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4038
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3260": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4039,
        4040
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3261": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3262": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3263": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3264": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "LT",
      "path": "3"
    },
    "3265": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCC"
    },
    "3268": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3269": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCC"
    },
    "3272": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "3275": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4031,
        4041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3276": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3277": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3279": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3280": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3281": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "MUL",
      "path": "3"
    },
    "3282": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3283": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3284": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3285": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "ADD",
      "path": "3"
    },
    "3286": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3287": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "ADD",
      "path": "3"
    },
    "3288": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4031,
        4041
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3295": {
      "op": "SHL"
    },
    "3296": {
      "op": "SUB"
    },
    "3297": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3298": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3299": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "AND",
      "path": "3"
    },
    "3300": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3301": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3302": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3303": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3304": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3305": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3306": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3307": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3308": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3309": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3311": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3312": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3313": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3316": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4021,
        4042
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3317": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3318": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3319": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3321": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3322": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3323": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3324": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3325": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3326": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3327": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3328": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3329": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3330": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3332": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3333": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3334": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "op": "SUB"
    },
    "3343": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "AND",
      "path": "3"
    },
    "3344": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3345": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3346": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3347": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3348": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3349": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3350": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3352": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3353": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3354": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3355": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3356": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3357": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3358": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "AND",
      "path": "3"
    },
    "3359": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3360": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3361": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "ADD",
      "path": "3"
    },
    "3362": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3363": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3364": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3365": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 20
    },
    "3366": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3367": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3368": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3369": {
      "op": "POP"
    },
    "3370": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3371": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4214
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3372": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4214
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3373": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4215,
        4216
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3374": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4215,
        4216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3375": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3376": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "LT",
      "path": "3"
    },
    "3377": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3C"
    },
    "3380": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3381": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3C"
    },
    "3384": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "3387": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4207,
        4217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3388": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3389": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3391": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3392": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3393": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "MUL",
      "path": "3"
    },
    "3394": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3395": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3396": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3397": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "ADD",
      "path": "3"
    },
    "3398": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "ADD",
      "path": "3"
    },
    "3399": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4207,
        4217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3400": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3402": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3403": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3412": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "op": "DUP5"
    },
    "3422": {
      "op": "DUP2"
    },
    "3423": {
      "op": "AND"
    },
    "3424": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3426": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3427": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4253,
        4257
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3432": {
      "op": "DUP4"
    },
    "3433": {
      "op": "ADD"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3437": {
      "op": "DUP3"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "DUP7"
    },
    "3440": {
      "op": "SWAP1"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3443": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3444": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "AND",
      "path": "3"
    },
    "3445": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3446": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "3451": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4231
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3457": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3459": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3460": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3461": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3462": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "SUB",
      "path": "3"
    },
    "3463": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3464": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3466": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3467": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "GAS",
      "path": "3"
    },
    "3468": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "CALL",
      "path": "3"
    },
    "3469": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3470": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3471": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3472": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9D"
    },
    "3475": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3476": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3477": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3479": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3480": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3481": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3482": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3484": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3485": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3486": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3487": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3488": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3489": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3490": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3492": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3493": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3494": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3496": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "NOT",
      "path": "3"
    },
    "3497": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3499": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3500": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "3501": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "AND",
      "path": "3"
    },
    "3502": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3503": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "3504": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3505": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3507": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3508": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3509": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3510": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "ADD",
      "path": "3"
    },
    "3511": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3512": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC1"
    },
    "3515": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3516": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3517": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA0"
    },
    "3520": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4201,
        4267
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3521": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3522": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4201,
        4267
      ],
      "op": "POP",
      "path": "3"
    },
    "3523": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4507,
        4525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3525": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3526": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4594,
        4595
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3527": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3528": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3529": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3530": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "LT",
      "path": "3"
    },
    "3531": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD6"
    },
    "3534": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3535": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD6"
    },
    "3538": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "3541": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4586,
        4596
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3542": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3543": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3545": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "MUL",
      "path": "3"
    },
    "3546": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3548": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "ADD",
      "path": "3"
    },
    "3549": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "ADD",
      "path": "3"
    },
    "3550": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4586,
        4596
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "op": "SUB"
    },
    "3559": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4606
      ],
      "op": "AND",
      "path": "3"
    },
    "3560": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4606
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "3565": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3567": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3568": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3569": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3574": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "AND",
      "path": "3"
    },
    "3575": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3577": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "SHL",
      "path": "3"
    },
    "3578": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3579": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3580": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3582": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ADD",
      "path": "3"
    },
    "3583": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3585": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3587": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3588": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3589": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3590": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "SUB",
      "path": "3"
    },
    "3591": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3592": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3593": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "GAS",
      "path": "3"
    },
    "3594": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3595": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3596": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3597": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3598": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE1B"
    },
    "3601": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3602": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3603": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3605": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3606": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3607": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3608": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3610": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3611": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3612": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "POP",
      "path": "3"
    },
    "3613": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "POP",
      "path": "3"
    },
    "3614": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "POP",
      "path": "3"
    },
    "3615": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "POP",
      "path": "3"
    },
    "3616": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3618": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3619": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3620": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3622": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "NOT",
      "path": "3"
    },
    "3623": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3625": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3626": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ADD",
      "path": "3"
    },
    "3627": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "AND",
      "path": "3"
    },
    "3628": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3629": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ADD",
      "path": "3"
    },
    "3630": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3631": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3633": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3634": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "POP",
      "path": "3"
    },
    "3635": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3636": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "ADD",
      "path": "3"
    },
    "3637": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3638": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3F"
    },
    "3641": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3642": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3643": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD3"
    },
    "3646": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4580,
        4608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3647": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4580,
        4608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3648": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4A"
    },
    "3651": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3652": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3654": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BD4"
    },
    "3657": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4574,
        4608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3658": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3659": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5D"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3668": {
      "op": "SHL"
    },
    "3669": {
      "op": "SUB"
    },
    "3670": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4543
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3671": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4543
      ],
      "op": "AND",
      "path": "3"
    },
    "3672": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4535
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3673": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "3676": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4529,
        4543
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3677": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4543
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3678": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6F"
    },
    "3681": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3682": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4554
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "3691": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "3694": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4529,
        4554
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3695": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4529,
        4554
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3696": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4528,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE79"
    },
    "3699": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4528,
        4608
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3700": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4528,
        4608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3701": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4528,
        4608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "3704": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4528,
        4608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3705": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4528,
        4608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3706": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4507,
        4608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xE85"
    },
    "3711": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4507,
        4608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3712": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3713": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "3716": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4622,
        4648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3717": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3718": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3719": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4622,
        4648
      ],
      "op": "POP",
      "path": "3"
    },
    "3720": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4662,
        4692
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 22,
      "value": "0xE91"
    },
    "3723": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4668,
        4679
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3724": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4681,
        4691
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3725": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4662,
        4667
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208C"
    },
    "3728": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4662,
        4692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3729": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4662,
        4692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3730": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3994,
        4703
      ],
      "op": "POP",
      "path": "3"
    },
    "3731": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3994,
        4703
      ],
      "op": "POP",
      "path": "3"
    },
    "3732": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3994,
        4703
      ],
      "op": "POP",
      "path": "3"
    },
    "3733": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3994,
        4703
      ],
      "op": "POP",
      "path": "3"
    },
    "3734": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 23
    },
    "3735": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3736": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3740": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE3"
    },
    "3743": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        3989,
        3992
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3744": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3745": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3746": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "POP",
      "path": "3"
    },
    "3747": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3989,
        3992
      ],
      "op": "POP",
      "path": "3"
    },
    "3748": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCAD"
    },
    "3751": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3752": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3753": {
      "op": "POP"
    },
    "3754": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4726
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0xD"
    },
    "3756": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3757": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3758": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "NOT"
    },
    "3767": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "AND",
      "path": "3"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4752,
        4767
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3774": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3779": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3780": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3781": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "AND",
      "path": "3"
    },
    "3782": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3783": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "MUL",
      "path": "3"
    },
    "3784": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3785": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3786": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3787": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "OR",
      "path": "3"
    },
    "3788": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3789": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3790": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3791": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4712,
        4768
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3792": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4848
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 25,
      "value": "0xEE7"
    },
    "3795": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4848
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3796": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "3802": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3803": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "DIV",
      "path": "3"
    },
    "3804": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3805": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "AND",
      "path": "3"
    },
    "3806": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4828,
        4848
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3807": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4825
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3808": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3809": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4825
      ],
      "op": "DIV",
      "path": "3"
    },
    "3810": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4825
      ],
      "op": "AND",
      "path": "3"
    },
    "3811": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BFE"
    },
    "3814": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4795,
        4848
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3815": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4795,
        4848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3816": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4778,
        4848
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3821": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4778,
        4848
      ],
      "op": "AND",
      "path": "3"
    },
    "3822": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4778,
        4792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3824": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4778,
        4848
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3825": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4858,
        4869
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0xC"
    },
    "3827": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4858,
        4884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3828": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4858,
        4884
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3829": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4858,
        4884
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3830": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x40"
    },
    "3832": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3833": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4921,
        4936
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3834": {
      "op": "DUP2"
    },
    "3835": {
      "op": "MSTORE"
    },
    "3836": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D"
    },
    "3869": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3872": {
      "op": "ADD"
    },
    "3873": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3875": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3876": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3877": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3878": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "SUB",
      "path": "3"
    },
    "3879": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3880": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4899,
        4937
      ],
      "op": "LOG1",
      "path": "3"
    },
    "3881": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3754,
        4944
      ],
      "op": "POP",
      "path": "3"
    },
    "3882": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3754,
        4944
      ],
      "op": "POP",
      "path": "3"
    },
    "3883": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3754,
        4944
      ],
      "op": "POP",
      "path": "3"
    },
    "3884": {
      "fn": "BuidlCollective.startCollective",
      "jump": "o",
      "offset": [
        3708,
        4944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3885": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3433,
        3566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3886": {
      "offset": [
        1772,
        1777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "3888": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1772,
        1777
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "op": "SUB"
    },
    "3897": {
      "offset": [
        1772,
        1777
      ],
      "op": "AND",
      "path": "3"
    },
    "3898": {
      "offset": [
        1758,
        1768
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3899": {
      "offset": [
        1758,
        1777
      ],
      "op": "EQ",
      "path": "3"
    },
    "3900": {
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF44"
    },
    "3903": {
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3904": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3906": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1750,
        1778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3907": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1750,
        1778
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3908": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3909": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3506,
        3523
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x6"
    },
    "3911": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3506,
        3523
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3912": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3506,
        3523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3914": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3506,
        3523
      ],
      "op": "AND",
      "path": "3"
    },
    "3915": {
      "branch": 97,
      "fn": "BuidlCollective.cancel",
      "offset": [
        3506,
        3532
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3916": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF54"
    },
    "3919": {
      "branch": 97,
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3920": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3922": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3923": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3924": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3498,
        3533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3925": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3556,
        3558
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 29
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3932": {
      "op": "SHL"
    },
    "3933": {
      "op": "SUB"
    },
    "3934": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3543,
        3559
      ],
      "op": "AND",
      "path": "3"
    },
    "3935": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3543,
        3559
      ],
      "op": "SELFDESTRUCT",
      "path": "3"
    },
    "3936": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8535,
        8613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3937": {
      "offset": [
        6101,
        6115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3939": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6101,
        6115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3940": {
      "offset": [
        6083,
        6098
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3941": {
      "offset": [
        6083,
        6115
      ],
      "op": "GT",
      "path": "3"
    },
    "3942": {
      "offset": [
        6079,
        6348
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3943": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6079,
        6348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC1"
    },
    "3946": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3947": {
      "offset": [
        6233,
        6244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3949": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6233,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3950": {
      "offset": [
        6198,
        6212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3952": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6198,
        6212
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3953": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7A"
    },
    "3956": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6180,
        6212
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3957": {
      "offset": [
        6180,
        6195
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3958": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "3961": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3962": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3963": {
      "offset": [
        6160,
        6171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "3965": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3966": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8A"
    },
    "3969": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3970": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "3973": {
      "fn": "BuidlCollective.claim",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3974": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "3977": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3978": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3979": {
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF94"
    },
    "3982": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3983": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3984": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "3987": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3988": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3989": {
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF9E"
    },
    "3992": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3993": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3994": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "3997": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3998": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3999": {
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "4001": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4003": {
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4004": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4005": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4006": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFAF"
    },
    "4009": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4010": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4011": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "4014": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4015": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4016": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4017": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4018": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6131,
        6244
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "offset": [
        6275,
        6290
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4022": {
      "offset": [
        6258,
        6272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4024": {
      "offset": [
        6258,
        6290
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4025": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8588,
        8606
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0xA1F"
    },
    "4028": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8595,
        8605
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4029": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8588,
        8594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6A"
    },
    "4032": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        8588,
        8606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4033": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4034": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8588,
        8606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1F"
    },
    "4037": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8595,
        8605
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4038": {
      "fn": "BuidlCollective.claim",
      "offset": [
        8588,
        8594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D6A"
    },
    "4041": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        8588,
        8606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4042": {
      "offset": [
        477,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4043": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4045": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4046": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4047": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4048": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4049": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "LT",
      "path": "3"
    },
    "4050": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFDA"
    },
    "4053": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4054": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4056": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4057": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4058": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4059": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4061": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4062": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4063": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4064": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4066": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4067": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4068": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4069": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "ADD",
      "path": "3"
    },
    "4070": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4077": {
      "op": "SHL"
    },
    "4078": {
      "op": "SUB"
    },
    "4079": {
      "offset": [
        477,
        500
      ],
      "op": "AND",
      "path": "3"
    },
    "4080": {
      "fn": "BuidlCollective.claim",
      "offset": [
        477,
        500
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "offset": [
        477,
        500
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4083": {
      "fn": "BuidlCollective.claim",
      "jump": "o",
      "offset": [
        477,
        500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4084": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4085": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x6"
    },
    "4087": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4088": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4091": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4092": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "DIV",
      "path": "3"
    },
    "4093": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4095": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2598
      ],
      "op": "AND",
      "path": "3"
    },
    "4096": {
      "branch": 98,
      "fn": "BuidlCollective.initialize",
      "offset": [
        2577,
        2607
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4097": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1009"
    },
    "4100": {
      "branch": 98,
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4101": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4103": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4104": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4105": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2569,
        2608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4106": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2639
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x6"
    },
    "4108": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4109": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4110": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4113": {
      "op": "NOT"
    },
    "4114": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "AND",
      "path": "3"
    },
    "4115": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "4118": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "OR",
      "path": "3"
    },
    "4119": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4120": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4121": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2661
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0xB"
    },
    "4123": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4124": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4131": {
      "op": "SHL"
    },
    "4132": {
      "op": "SUB"
    },
    "4133": {
      "op": "NOT"
    },
    "4134": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "AND",
      "path": "3"
    },
    "4135": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2664,
        2674
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4136": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "OR",
      "path": "3"
    },
    "4137": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4138": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2656,
        2674
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4139": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 34
    },
    "4140": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4141": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4143": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4144": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4145": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4147": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4148": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "ADD",
      "path": "3"
    },
    "4149": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4150": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4152": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4153": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "ADD",
      "path": "3"
    },
    "4154": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4155": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4160": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4161": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4162": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "AND",
      "path": "3"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4167": {
      "op": "SHL"
    },
    "4168": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "MUL",
      "path": "3"
    },
    "4169": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "NOT"
    },
    "4178": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 35
    },
    "4179": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4180": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "AND",
      "path": "3"
    },
    "4181": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4182": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4183": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "AND",
      "path": "3"
    },
    "4184": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "4190": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "MUL",
      "path": "3"
    },
    "4191": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4200": {
      "op": "NOT"
    },
    "4201": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4202": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4203": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "AND",
      "path": "3"
    },
    "4204": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4205": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4206": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4207": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "AND",
      "path": "3"
    },
    "4208": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "OR",
      "path": "3"
    },
    "4209": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4210": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4211": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4212": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "OR",
      "path": "3"
    },
    "4213": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4214": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4215": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4216": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2684,
        2716
      ],
      "op": "AND",
      "path": "3"
    },
    "4217": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4218": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4219": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4220": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "OR",
      "path": "3"
    },
    "4221": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4222": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2726,
        2760
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4223": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2792,
        2806
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4224": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2792,
        2806
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4225": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2618,
        2646
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4227": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4228": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2840,
        2851
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4229": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2836,
        2837
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4230": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2836,
        2851
      ],
      "op": "LT",
      "path": "3"
    },
    "4231": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4232": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1242"
    },
    "4235": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4236": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2891
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x7"
    },
    "4238": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2917
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4239": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2918,
        2919
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4240": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4241": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4242": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4243": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "LT",
      "path": "3"
    },
    "4244": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109F"
    },
    "4247": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4248": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109F"
    },
    "4251": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4254": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2897,
        2920
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4255": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4256": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4258": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4259": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4260": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "MUL",
      "path": "3"
    },
    "4261": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4262": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4263": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4264": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "ADD",
      "path": "3"
    },
    "4265": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4266": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "ADD",
      "path": "3"
    },
    "4267": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2897,
        2920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4268": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4269": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4270": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4272": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4273": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4274": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4275": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4279": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4280": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4281": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4282": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4283": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4284": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4285": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4286": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4287": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D1"
    },
    "4290": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4291": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4292": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4293": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4294": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4295": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4296": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4297": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4298": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4299": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4300": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4301": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22AB"
    },
    "4304": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2872,
        2921
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4305": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4306": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2872,
        2921
      ],
      "op": "POP",
      "path": "3"
    },
    "4307": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2935,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4309": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4311": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4312": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4313": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4315": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "ADD",
      "path": "3"
    },
    "4316": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4318": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4319": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4320": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2974
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4321": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2975,
        2976
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4322": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4323": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4324": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4325": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "LT",
      "path": "3"
    },
    "4326": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F1"
    },
    "4329": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4330": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F1"
    },
    "4333": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4336": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2966,
        2977
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4337": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4338": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4340": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "MUL",
      "path": "3"
    },
    "4341": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4343": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "ADD",
      "path": "3"
    },
    "4344": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "ADD",
      "path": "3"
    },
    "4345": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4346": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4347": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4348": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4350": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "ADD",
      "path": "3"
    },
    "4351": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2986
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4352": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2987,
        2988
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4353": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4354": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4355": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4356": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "LT",
      "path": "3"
    },
    "4357": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1110"
    },
    "4360": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4361": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1110"
    },
    "4364": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4367": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2979,
        2989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4368": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4369": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4371": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "MUL",
      "path": "3"
    },
    "4372": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4374": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "ADD",
      "path": "3"
    },
    "4375": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "ADD",
      "path": "3"
    },
    "4376": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2989
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4383": {
      "op": "SHL"
    },
    "4384": {
      "op": "SUB"
    },
    "4385": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "AND",
      "path": "3"
    },
    "4386": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4387": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4388": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4390": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "ADD",
      "path": "3"
    },
    "4391": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        2997
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4392": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2998,
        2999
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4393": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4394": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4395": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4396": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "LT",
      "path": "3"
    },
    "4397": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1138"
    },
    "4400": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4401": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1138"
    },
    "4404": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4407": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2991,
        3000
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4408": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4409": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4411": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "MUL",
      "path": "3"
    },
    "4412": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4414": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "ADD",
      "path": "3"
    },
    "4415": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "ADD",
      "path": "3"
    },
    "4416": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2991,
        3000
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4423": {
      "op": "SHL"
    },
    "4424": {
      "op": "SUB"
    },
    "4425": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "AND",
      "path": "3"
    },
    "4426": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4427": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4428": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2956,
        3001
      ],
      "op": "POP",
      "path": "3"
    },
    "4429": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2935,
        3001
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4430": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2935,
        3001
      ],
      "op": "POP",
      "path": "3"
    },
    "4431": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3039,
        3040
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 37
    },
    "4432": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4434": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4436": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3032
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4437": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3033,
        3034
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4438": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4439": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4440": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4441": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "LT",
      "path": "3"
    },
    "4442": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1165"
    },
    "4445": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4446": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1165"
    },
    "4449": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4452": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3025,
        3035
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4453": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4454": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4456": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4457": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4458": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "MUL",
      "path": "3"
    },
    "4459": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4460": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4461": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4462": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "ADD",
      "path": "3"
    },
    "4463": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4464": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "ADD",
      "path": "3"
    },
    "4465": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3025,
        3035
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4472": {
      "op": "SHL"
    },
    "4473": {
      "op": "SUB"
    },
    "4474": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4475": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4476": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "AND",
      "path": "3"
    },
    "4477": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4478": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4479": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4480": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4481": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "ADD",
      "path": "3"
    },
    "4482": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4483": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4484": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4485": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4486": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4488": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4489": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4490": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "ADD",
      "path": "3"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4493": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3036
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4494": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4495": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4496": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4497": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4498": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4499": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4500": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "ADD",
      "path": "3"
    },
    "4501": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4502": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4504": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4505": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "ADD",
      "path": "3"
    },
    "4506": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4507": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4508": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4525": {
      "op": "NOT"
    },
    "4526": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "AND",
      "path": "3"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4533": {
      "op": "SHL"
    },
    "4534": {
      "op": "SUB"
    },
    "4535": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4536": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4537": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "AND",
      "path": "3"
    },
    "4538": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4539": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4540": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4541": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "OR",
      "path": "3"
    },
    "4542": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4543": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4544": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4545": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "ADD",
      "path": "3"
    },
    "4546": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4547": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4549": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4550": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4551": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "ADD",
      "path": "3"
    },
    "4552": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4553": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "op": "SUB"
    },
    "4562": {
      "op": "NOT"
    },
    "4563": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "AND",
      "path": "3"
    },
    "4564": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4565": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4566": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4567": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "AND",
      "path": "3"
    },
    "4568": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4569": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4570": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4571": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "OR",
      "path": "3"
    },
    "4572": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4573": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3015,
        3040
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4574": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 38
    },
    "4575": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4576": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3060
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4578": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4579": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4580": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4581": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3074,
        3075
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4582": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3074,
        3075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4583": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4584": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "LT",
      "path": "3"
    },
    "4585": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F4"
    },
    "4588": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4589": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F4"
    },
    "4592": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4595": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3066,
        3076
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4596": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4597": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4599": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4600": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4601": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "MUL",
      "path": "3"
    },
    "4602": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4603": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4604": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4605": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "ADD",
      "path": "3"
    },
    "4606": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4607": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "ADD",
      "path": "3"
    },
    "4608": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3066,
        3076
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4609": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4610": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4611": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4613": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4614": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "ADD",
      "path": "3"
    },
    "4615": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4616": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4619": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4620": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4621": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4622": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4623": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4624": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4625": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4626": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "ADD",
      "path": "3"
    },
    "4627": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4628": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "SUB"
    },
    "4637": {
      "op": "NOT"
    },
    "4638": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "AND",
      "path": "3"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4645": {
      "op": "SHL"
    },
    "4646": {
      "op": "SUB"
    },
    "4647": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4648": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4649": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "AND",
      "path": "3"
    },
    "4650": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4651": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4652": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4653": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "OR",
      "path": "3"
    },
    "4654": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4655": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3054,
        3077
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 39
    },
    "4658": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123A"
    },
    "4661": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4662": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE3"
    },
    "4665": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2853,
        2856
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4666": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4667": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4668": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "POP",
      "path": "3"
    },
    "4669": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2853,
        2856
      ],
      "op": "POP",
      "path": "3"
    },
    "4670": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1083"
    },
    "4673": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4674": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2816,
        3088
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3110,
        3116
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x9"
    },
    "4678": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3110,
        3123
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4679": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3097,
        3107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4681": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3097,
        3123
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4682": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3311
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0xD"
    },
    "4684": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4685": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4687": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4688": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x489170CFE0F7FCDD8410D20D8A81DF8F038624BBCD9814CCA42D477E9D1BB469"
    },
    "4721": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4722": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1297"
    },
    "4725": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4726": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3179,
        3199
      ],
      "op": "DUP11",
      "path": "3"
    },
    "4727": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3179,
        3199
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4728": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3213,
        3220
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4729": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3213,
        3220
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4730": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3234,
        3241
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4731": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3234,
        3241
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4732": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3255,
        3261
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4733": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3255,
        3261
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4734": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3275,
        3283
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4735": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3275,
        3283
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4736": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4741": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "4747": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4748": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "DIV",
      "path": "3"
    },
    "4749": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4750": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "AND",
      "path": "3"
    },
    "4751": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3297,
        3317
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4752": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4753": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3331,
        3357
      ],
      "op": "AND",
      "path": "3"
    },
    "4754": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4755": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C98"
    },
    "4758": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3138,
        3367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4759": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4760": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4762": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4763": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4764": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4765": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "SUB",
      "path": "3"
    },
    "4766": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4767": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3138,
        3367
      ],
      "op": "LOG1",
      "path": "3"
    },
    "4768": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2559,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4769": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4770": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4771": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4772": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4773": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4774": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2299,
        3374
      ],
      "op": "POP",
      "path": "3"
    },
    "4775": {
      "fn": "BuidlCollective.initialize",
      "jump": "o",
      "offset": [
        2299,
        3374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4776": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4777": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4779": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4780": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4781": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x68E"
    },
    "4784": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4785": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29DF"
    },
    "4788": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4789": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4790": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5520,
        5526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4792": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5520,
        5533
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4793": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5458,
        5471
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4795": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5458,
        5471
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4796": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5483,
        5506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4798": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5483,
        5506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4799": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4808": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4809": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "GT",
      "path": "3"
    },
    "4810": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4811": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12D6"
    },
    "4814": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4815": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12D6"
    },
    "4818": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245C"
    },
    "4821": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4822": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4823": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4825": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4826": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4827": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4828": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4829": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4830": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4831": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4833": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "MUL",
      "path": "3"
    },
    "4834": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4836": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ADD",
      "path": "3"
    },
    "4837": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4838": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ADD",
      "path": "3"
    },
    "4839": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4841": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4842": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4843": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4844": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12FF"
    },
    "4847": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4848": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4849": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4851": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ADD",
      "path": "3"
    },
    "4852": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4854": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4855": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "MUL",
      "path": "3"
    },
    "4856": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4857": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "4858": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4859": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "4860": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "ADD",
      "path": "3"
    },
    "4861": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4864": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5509,
        5534
      ],
      "op": "POP",
      "path": "3"
    },
    "4865": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5483,
        5534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4866": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5483,
        5534
      ],
      "op": "POP",
      "path": "3"
    },
    "4867": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5544,
        5563
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4869": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5573,
        5590
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4870": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4872": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4873": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5620,
        5626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4875": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5620,
        5633
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4876": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5616,
        5633
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4877": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5616,
        5633
      ],
      "op": "LT",
      "path": "3"
    },
    "4878": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4879": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1491"
    },
    "4882": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4883": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5677
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0xA"
    },
    "4885": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4887": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4889": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5685,
        5686
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4890": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4891": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4892": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4893": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "LT",
      "path": "3"
    },
    "4894": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1329"
    },
    "4897": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4898": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1329"
    },
    "4901": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4904": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5678,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4905": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4906": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4908": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4909": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4910": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4911": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4913": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4914": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4915": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4916": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4917": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4918": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "ADD",
      "path": "3"
    },
    "4919": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4926": {
      "op": "SHL"
    },
    "4927": {
      "op": "SUB"
    },
    "4928": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4929": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4930": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5687
      ],
      "op": "AND",
      "path": "3"
    },
    "4931": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4932": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4933": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4934": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4935": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "ADD",
      "path": "3"
    },
    "4936": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4937": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4938": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4939": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4940": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4942": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4943": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4944": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "ADD",
      "path": "3"
    },
    "4945": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4946": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5688
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4947": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4949": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "ADD",
      "path": "3"
    },
    "4950": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4951": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5731
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0x9"
    },
    "4953": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4954": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4955": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4956": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4957": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4958": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "AND",
      "path": "3"
    },
    "4959": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5668,
        5693
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5732,
        5733
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4962": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5732,
        5733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4963": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4964": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "LT",
      "path": "3"
    },
    "4965": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1370"
    },
    "4968": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4969": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1370"
    },
    "4972": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "4975": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5725,
        5734
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4976": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4977": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4979": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4980": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4981": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4982": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4984": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4985": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4986": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4987": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "ADD",
      "path": "3"
    },
    "4988": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4989": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4991": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4992": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4999": {
      "op": "SHL"
    },
    "5000": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5001": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5008": {
      "op": "SHL"
    },
    "5009": {
      "op": "SUB"
    },
    "5010": {
      "op": "DUP6"
    },
    "5011": {
      "op": "DUP2"
    },
    "5012": {
      "op": "AND"
    },
    "5013": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5015": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5016": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ADD",
      "path": "3"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5767,
        5771
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5021": {
      "op": "DUP4"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5025": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5026": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "AND",
      "path": "3"
    },
    "5027": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5725,
        5734
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5028": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5745
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "5033": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5036": {
      "op": "ADD"
    },
    "5037": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5039": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5041": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5042": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5043": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5044": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "SUB",
      "path": "3"
    },
    "5045": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5046": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5047": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "GAS",
      "path": "3"
    },
    "5048": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "5049": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5050": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5051": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5052": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C9"
    },
    "5055": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5056": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5057": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5059": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5060": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5061": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5062": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5064": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5065": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5066": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5067": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5068": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5069": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5070": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5072": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5073": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5074": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5076": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "NOT",
      "path": "3"
    },
    "5077": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5079": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5080": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ADD",
      "path": "3"
    },
    "5081": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "AND",
      "path": "3"
    },
    "5082": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5083": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ADD",
      "path": "3"
    },
    "5084": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5085": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5087": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5088": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5089": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5090": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "ADD",
      "path": "3"
    },
    "5091": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5092": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13ED"
    },
    "5095": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5096": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5097": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D6D"
    },
    "5100": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5719,
        5773
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5101": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5719,
        5773
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5102": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5707,
        5773
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5103": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5707,
        5773
      ],
      "op": "POP",
      "path": "3"
    },
    "5104": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "5106": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5108": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "5110": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5821,
        5822
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5111": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5112": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5113": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5114": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "LT",
      "path": "3"
    },
    "5115": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1406"
    },
    "5118": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5119": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1406"
    },
    "5122": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "5125": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5814,
        5823
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5126": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5127": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5129": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5130": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5131": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5132": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5134": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5135": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5136": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5137": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5138": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5139": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "ADD",
      "path": "3"
    },
    "5140": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5147": {
      "op": "SHL"
    },
    "5148": {
      "op": "SUB"
    },
    "5149": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5814,
        5823
      ],
      "op": "AND",
      "path": "3"
    },
    "5150": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5151": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5152": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5153": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "ADD",
      "path": "3"
    },
    "5154": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5155": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5156": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5157": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5158": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5160": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "ADD",
      "path": "3"
    },
    "5161": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5162": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5824
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5163": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5804,
        5831
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5164": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5791,
        5831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5165": {
      "branch": 99,
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5791,
        5831
      ],
      "op": "LT",
      "path": "3"
    },
    "5166": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145A"
    },
    "5169": {
      "branch": 99,
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5170": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5866,
        5870
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x1"
    },
    "5172": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5860
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5173": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5861,
        5862
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5174": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5175": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5176": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5177": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "LT",
      "path": "3"
    },
    "5178": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1445"
    },
    "5181": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5182": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1445"
    },
    "5185": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "5188": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5851,
        5863
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5189": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5190": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5870
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5191": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5870
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5192": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5870
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5193": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5195": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5196": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5197": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "MUL",
      "path": "3"
    },
    "5198": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5199": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5200": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5201": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "ADD",
      "path": "3"
    },
    "5202": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5203": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5204": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5863
      ],
      "op": "ADD",
      "path": "3"
    },
    "5205": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5851,
        5870
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5206": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x147F"
    },
    "5209": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5210": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5211": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5924,
        5929
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 45,
      "value": "0x0"
    },
    "5213": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5918
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5214": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5919,
        5920
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5215": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5216": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5217": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5218": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "LT",
      "path": "3"
    },
    "5219": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x146E"
    },
    "5222": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5223": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x146E"
    },
    "5226": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "5229": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5909,
        5921
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5230": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5231": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5929
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5232": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5929
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5233": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5929
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5234": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5236": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5237": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5238": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "MUL",
      "path": "3"
    },
    "5239": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5240": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5241": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5242": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "ADD",
      "path": "3"
    },
    "5243": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5244": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5245": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5921
      ],
      "op": "ADD",
      "path": "3"
    },
    "5246": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5909,
        5929
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5247": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5787,
        5944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5248": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 46
    },
    "5249": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1489"
    },
    "5252": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5253": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE3"
    },
    "5256": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5635,
        5638
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5257": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5258": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5259": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "POP",
      "path": "3"
    },
    "5260": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5635,
        5638
      ],
      "op": "POP",
      "path": "3"
    },
    "5261": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1308"
    },
    "5264": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5265": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5600,
        5954
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5266": {
      "op": "POP"
    },
    "5267": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5970,
        5979
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 47
    },
    "5268": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5970,
        5979
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5269": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5413,
        5986
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5270": {
      "op": "POP"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "o",
      "offset": [
        5413,
        5986
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5274": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5275": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10455,
        10471
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5277": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10483,
        10496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5279": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10499,
        10533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A9"
    },
    "5282": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10521,
        10525
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5283": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10527,
        10532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5285": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10499,
        10520
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B70"
    },
    "5288": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10499,
        10533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5289": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10499,
        10533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5290": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10588,
        10594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "5292": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10588,
        10601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5293": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10483,
        10533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5294": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10483,
        10533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5295": {
      "op": "POP"
    },
    "5296": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10543,
        10571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5298": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10543,
        10571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5299": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5308": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5309": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "GT",
      "path": "3"
    },
    "5310": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5311": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CA"
    },
    "5314": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5315": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CA"
    },
    "5318": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245C"
    },
    "5321": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10574,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5322": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5323": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5325": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5326": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5327": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5328": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5329": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5330": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5331": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5333": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "MUL",
      "path": "3"
    },
    "5334": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5336": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ADD",
      "path": "3"
    },
    "5337": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5338": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ADD",
      "path": "3"
    },
    "5339": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5341": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5342": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5343": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5344": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F3"
    },
    "5347": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5348": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5349": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5351": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ADD",
      "path": "3"
    },
    "5352": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5354": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5355": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "MUL",
      "path": "3"
    },
    "5356": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5357": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "5358": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5359": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "5360": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "ADD",
      "path": "3"
    },
    "5361": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5364": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10574,
        10602
      ],
      "op": "POP",
      "path": "3"
    },
    "5365": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10543,
        10602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5366": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10543,
        10602
      ],
      "op": "POP",
      "path": "3"
    },
    "5367": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10617,
        10626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5369": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5370": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10636,
        10642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "5372": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10636,
        10649
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5373": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10632,
        10649
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5374": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10632,
        10649
      ],
      "op": "LT",
      "path": "3"
    },
    "5375": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5376": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153C"
    },
    "5379": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5380": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10687,
        10716
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 48,
      "value": "0x150D"
    },
    "5383": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10707,
        10712
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5384": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10714,
        10715
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5385": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10687,
        10706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E6"
    },
    "5388": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10687,
        10716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5389": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10687,
        10716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5390": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10681
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5391": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10682,
        10683
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5392": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5393": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5394": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5395": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "LT",
      "path": "3"
    },
    "5396": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151F"
    },
    "5399": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5400": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151F"
    },
    "5403": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "5406": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10670,
        10684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5407": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5408": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5410": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5411": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5412": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "MUL",
      "path": "3"
    },
    "5413": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5414": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5415": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5416": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "ADD",
      "path": "3"
    },
    "5417": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10684
      ],
      "op": "ADD",
      "path": "3"
    },
    "5418": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10670,
        10716
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5419": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 49
    },
    "5420": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1534"
    },
    "5423": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5424": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE3"
    },
    "5427": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "i",
      "offset": [
        10651,
        10654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5428": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5429": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5430": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "POP",
      "path": "3"
    },
    "5431": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10651,
        10654
      ],
      "op": "POP",
      "path": "3"
    },
    "5432": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F9"
    },
    "5435": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5436": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10612,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10744,
        10755
      ],
      "op": "SWAP4",
      "path": "3",
      "statement": 50
    },
    "5439": {
      "fn": "BuidlCollective.getClaimable",
      "offset": [
        10398,
        10762
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5440": {
      "op": "POP"
    },
    "5441": {
      "op": "POP"
    },
    "5442": {
      "op": "POP"
    },
    "5443": {
      "fn": "BuidlCollective.getClaimable",
      "jump": "o",
      "offset": [
        10398,
        10762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5444": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6360,
        7636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5445": {
      "offset": [
        6101,
        6115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "5447": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6101,
        6115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5448": {
      "offset": [
        6083,
        6098
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5449": {
      "offset": [
        6083,
        6115
      ],
      "op": "GT",
      "path": "3"
    },
    "5450": {
      "offset": [
        6079,
        6348
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5451": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6079,
        6348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1768"
    },
    "5454": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5455": {
      "offset": [
        6233,
        6244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "5457": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6233,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5458": {
      "offset": [
        6198,
        6212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "5460": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6198,
        6212
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5461": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155E"
    },
    "5464": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6180,
        6212
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5465": {
      "offset": [
        6180,
        6195
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5466": {
      "offset": [
        6180,
        6212
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "5469": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5470": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6180,
        6212
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5471": {
      "offset": [
        6160,
        6171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "5473": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5474": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156E"
    },
    "5477": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5478": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "5481": {
      "fn": "BuidlCollective.stake",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5482": {
      "offset": [
        6160,
        6176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "5485": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5486": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5487": {
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1578"
    },
    "5490": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5491": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5492": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6213
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "5495": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5496": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6160,
        6213
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5497": {
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1582"
    },
    "5500": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5501": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6159,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5502": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6159,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "5505": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5506": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6159,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5507": {
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "5509": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5511": {
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5512": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5513": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5514": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1593"
    },
    "5517": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5518": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5519": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "5522": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5523": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5524": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5525": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5526": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6131,
        6244
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "POP"
    },
    "5529": {
      "offset": [
        6275,
        6290
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5530": {
      "offset": [
        6258,
        6272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "5532": {
      "offset": [
        6258,
        6290
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5533": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6447,
        6457
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5534": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6432,
        6444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5536": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 51
    },
    "5537": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5538": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5539": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6521
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5541": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5543": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5544": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5546": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5547": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5548": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5549": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6488,
        6492
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5550": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6488,
        6492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5551": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6542
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5552": {
      "op": "GT"
    },
    "5553": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6542
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5554": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F7"
    },
    "5557": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5558": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5560": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5567": {
      "op": "SHL"
    },
    "5568": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5569": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5572": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5574": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5575": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "ADD",
      "path": "3"
    },
    "5576": {
      "op": "MSTORE"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5581": {
      "op": "DUP3"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "MSTORE"
    },
    "5584": {
      "op": "PUSH23",
      "value": "0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "5610": {
      "op": "SHL"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5613": {
      "op": "DUP3"
    },
    "5614": {
      "op": "ADD"
    },
    "5615": {
      "op": "MSTORE"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5618": {
      "op": "ADD"
    },
    "5619": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x943"
    },
    "5622": {
      "op": "JUMP"
    },
    "5623": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5630": {
      "op": "SHL"
    },
    "5631": {
      "op": "SUB"
    },
    "5632": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 52
    },
    "5633": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5634": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "AND",
      "path": "3"
    },
    "5635": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5637": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5638": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5639": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5640": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5642": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5644": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5645": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5647": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5648": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5649": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6730
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5650": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5651": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5652": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5653": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5654": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "SUB",
      "path": "3"
    },
    "5655": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5656": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6715,
        6745
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5657": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 53
    },
    "5658": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5659": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "AND",
      "path": "3"
    },
    "5660": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5661": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5662": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5663": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5664": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6772
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5665": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5666": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5667": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5668": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "ADD",
      "path": "3"
    },
    "5669": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5670": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6759,
        6787
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5671": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6885,
        6896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "5673": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6885,
        6896
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5674": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "5683": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163E"
    },
    "5686": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "5689": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6734,
        6745
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5690": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "5693": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6835,
        6851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5694": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5695": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1648"
    },
    "5698": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6869
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5699": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5700": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "5703": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6835,
        6869
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5704": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6835,
        6869
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5705": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6834,
        6896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1652"
    },
    "5708": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6834,
        6896
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5709": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6834,
        6896
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5710": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6834,
        6896
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "5713": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6834,
        6896
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5714": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6834,
        6896
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5715": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6936,
        6944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "5717": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6936,
        6944
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5718": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6808,
        6896
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5719": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6808,
        6896
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6984,
        6999
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5722": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6906,
        6933
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5724": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7051,
        7070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1663"
    },
    "5727": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7051,
        7068
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A5"
    },
    "5730": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        7051,
        7070
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5731": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7051,
        7070
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5732": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5734": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5735": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5736": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "5738": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5739": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "ADD",
      "path": "3"
    },
    "5740": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5741": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5742": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5743": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5744": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5745": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5747": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5748": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5749": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "ADD",
      "path": "3"
    },
    "5750": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5751": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5752": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5753": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5754": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5755": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "ADD",
      "path": "3"
    },
    "5756": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5757": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5758": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5759": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5761": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5762": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "ADD",
      "path": "3"
    },
    "5763": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5764": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5765": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5766": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7290,
        7300
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 54
    },
    "5767": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7080,
        7110
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5769": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5770": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5771": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5772": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "5774": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5775": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5776": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5777": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5778": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5779": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7301
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5780": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5781": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5782": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5783": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5784": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5785": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5786": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5788": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5789": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "ADD",
      "path": "3"
    },
    "5790": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5791": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5792": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5794": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5795": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "ADD",
      "path": "3"
    },
    "5796": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5797": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5798": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5799": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5801": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5802": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5803": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "ADD",
      "path": "3"
    },
    "5804": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5805": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5806": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5807": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7281,
        7318
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5808": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7339
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 55,
      "value": "0x11"
    },
    "5810": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5811": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5812": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7009,
        7070
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5813": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7009,
        7070
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5816": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7113,
        7271
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5817": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7343,
        7354
      ],
      "op": "DUP11",
      "path": "3"
    },
    "5818": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7343,
        7354
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5819": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7080,
        7110
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5820": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C6"
    },
    "5823": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5824": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7343,
        7354
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5825": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7343,
        7354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5826": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "5829": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        7328,
        7354
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5830": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5831": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5832": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "POP",
      "path": "3"
    },
    "5833": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "POP",
      "path": "3"
    },
    "5834": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5835": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5836": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5837": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7328,
        7354
      ],
      "op": "POP",
      "path": "3"
    },
    "5838": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7384,
        7386
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 56
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5845": {
      "op": "SHL"
    },
    "5846": {
      "op": "SUB"
    },
    "5847": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "AND",
      "path": "3"
    },
    "5848": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7378,
        7382
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5855": {
      "op": "SHL"
    },
    "5856": {
      "op": "SUB"
    },
    "5857": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "AND",
      "path": "3"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5860": {
      "op": "DUP1"
    },
    "5861": {
      "op": "MLOAD"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5864": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "5867": {
      "op": "DUP4"
    },
    "5868": {
      "op": "CODECOPY"
    },
    "5869": {
      "op": "DUP2"
    },
    "5870": {
      "op": "MLOAD"
    },
    "5871": {
      "op": "SWAP2"
    },
    "5872": {
      "op": "MSTORE"
    },
    "5873": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7388,
        7399
      ],
      "op": "DUP11",
      "path": "3"
    },
    "5874": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5876": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5877": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1700"
    },
    "5880": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5881": {
      "op": "DUP2"
    },
    "5882": {
      "op": "MSTORE"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "SWAP1"
    },
    "5887": {
      "op": "JUMP"
    },
    "5888": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5889": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5891": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5892": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5893": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5894": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "SUB",
      "path": "3"
    },
    "5895": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5896": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7369,
        7400
      ],
      "op": "LOG3",
      "path": "3"
    },
    "5897": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 57,
      "value": "0x40"
    },
    "5899": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5900": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5901": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7444,
        7454
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5902": {
      "op": "DUP2"
    },
    "5903": {
      "op": "MSTORE"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5906": {
      "op": "DUP2"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "DUP11"
    },
    "5909": {
      "op": "SWAP1"
    },
    "5910": {
      "op": "MSTORE"
    },
    "5911": {
      "op": "SWAP1"
    },
    "5912": {
      "op": "DUP2"
    },
    "5913": {
      "op": "ADD"
    },
    "5914": {
      "op": "DUP7"
    },
    "5915": {
      "op": "SWAP1"
    },
    "5916": {
      "op": "MSTORE"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5919": {
      "op": "DUP2"
    },
    "5920": {
      "op": "ADD"
    },
    "5921": {
      "op": "DUP6"
    },
    "5922": {
      "op": "SWAP1"
    },
    "5923": {
      "op": "MSTORE"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5926": {
      "op": "DUP2"
    },
    "5927": {
      "op": "ADD"
    },
    "5928": {
      "op": "DUP5"
    },
    "5929": {
      "op": "SWAP1"
    },
    "5930": {
      "op": "MSTORE"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5933": {
      "op": "DUP2"
    },
    "5934": {
      "op": "ADD"
    },
    "5935": {
      "op": "DUP4"
    },
    "5936": {
      "op": "SWAP1"
    },
    "5937": {
      "op": "MSTORE"
    },
    "5938": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x9DFA08ABAE6C607453D7EF936FD3D42C4AFC359DCFA226A49BE696604A246845"
    },
    "5971": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5974": {
      "op": "ADD"
    },
    "5975": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5977": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5978": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5979": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5980": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "SUB",
      "path": "3"
    },
    "5981": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5982": {
      "fn": "BuidlCollective.stake",
      "offset": [
        7415,
        7629
      ],
      "op": "LOG1",
      "path": "3"
    },
    "5983": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5984": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5985": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5986": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5987": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5988": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5989": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6422,
        7636
      ],
      "op": "POP",
      "path": "3"
    },
    "5990": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        7642,
        8118
      ],
      "op": "POP",
      "path": "3"
    },
    "5991": {
      "fn": "BuidlCollective.unstake",
      "jump": "o",
      "offset": [
        7642,
        8118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5992": {
      "offset": [
        6079,
        6348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5993": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6447,
        6457
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5994": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6432,
        6444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5996": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5997": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5998": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5999": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6521
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6001": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6003": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6004": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6006": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6007": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6008": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6527
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6009": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6488,
        6492
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6010": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6488,
        6492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6011": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6542
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6012": {
      "op": "GT"
    },
    "6013": {
      "branch": 100,
      "fn": "BuidlCollective.stake",
      "offset": [
        6512,
        6542
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6014": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F7"
    },
    "6017": {
      "branch": 100,
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6018": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6020": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6027": {
      "op": "SHL"
    },
    "6028": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6029": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6032": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6034": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6035": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "ADD",
      "path": "3"
    },
    "6036": {
      "op": "MSTORE"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6041": {
      "op": "DUP3"
    },
    "6042": {
      "op": "ADD"
    },
    "6043": {
      "op": "MSTORE"
    },
    "6044": {
      "op": "PUSH23",
      "value": "0xAAA68AA440848298829C868A409C9EA8408A9C9EAA8E9"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "6070": {
      "op": "SHL"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6073": {
      "op": "DUP3"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6504,
        6570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x943"
    },
    "6082": {
      "op": "JUMP"
    },
    "6083": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6084": {
      "fn": "ERC20.transfer",
      "offset": [
        3039,
        3049
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 58
    },
    "6085": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6087": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6088": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6089": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6090": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3038
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6092": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6094": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6095": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6097": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6098": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6099": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6100": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6101": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6102": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6103": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6104": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6105": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6106": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17E4"
    },
    "6109": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6110": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6111": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6112": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A30"
    },
    "6115": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6116": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6117": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6118": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6119": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6120": {
      "op": "POP"
    },
    "6121": {
      "op": "POP"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "op": "SUB"
    },
    "6130": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 59
    },
    "6131": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "AND",
      "path": "6"
    },
    "6132": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6134": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6135": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6136": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6137": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3215
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6139": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6141": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6142": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6144": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6145": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6146": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6147": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6148": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6149": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6150": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6151": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "ADD",
      "path": "6"
    },
    "6152": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6153": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6154": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 60
    },
    "6155": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6156": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6159": {
      "op": "DUP1"
    },
    "6160": {
      "op": "MLOAD"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6163": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "6166": {
      "op": "DUP4"
    },
    "6167": {
      "op": "CODECOPY"
    },
    "6168": {
      "op": "DUP2"
    },
    "6169": {
      "op": "MLOAD"
    },
    "6170": {
      "op": "SWAP2"
    },
    "6171": {
      "op": "MSTORE"
    },
    "6172": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6173": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x76A"
    },
    "6176": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6177": {
      "fn": "ERC20.transfer",
      "offset": [
        3223,
        3229
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6178": {
      "op": "DUP2"
    },
    "6179": {
      "op": "MSTORE"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6182": {
      "op": "ADD"
    },
    "6183": {
      "op": "SWAP1"
    },
    "6184": {
      "op": "JUMP"
    },
    "6185": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6188": {
      "op": "DUP1"
    },
    "6189": {
      "op": "MLOAD"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6192": {
      "op": "DUP2"
    },
    "6193": {
      "op": "ADD"
    },
    "6194": {
      "op": "DUP3"
    },
    "6195": {
      "op": "MSTORE"
    },
    "6196": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5215,
        5222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6198": {
      "op": "DUP1"
    },
    "6199": {
      "op": "DUP3"
    },
    "6200": {
      "op": "MSTORE"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6203": {
      "op": "DUP3"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "DUP2"
    },
    "6206": {
      "op": "SWAP1"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "SWAP2"
    },
    "6209": {
      "op": "DUP2"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "DUP3"
    },
    "6212": {
      "op": "SWAP1"
    },
    "6213": {
      "op": "MSTORE"
    },
    "6214": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5252,
        5269
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6216": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "6218": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5279,
        5287
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6219": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6220": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6221": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6222": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "LT",
      "path": "3"
    },
    "6223": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185A"
    },
    "6226": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6227": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185A"
    },
    "6230": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "6233": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5272,
        5288
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6234": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6235": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6237": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6238": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6239": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6240": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6242": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6243": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6244": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6245": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6246": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6247": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "6248": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6255": {
      "op": "SHL"
    },
    "6256": {
      "op": "SUB"
    },
    "6257": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6258": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6259": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "AND",
      "path": "3"
    },
    "6260": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 61
    },
    "6261": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6262": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6263": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5326
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6265": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6266": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6267": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6269": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6270": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6271": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6272": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5317,
        5337
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6273": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6274": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6275": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6277": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6278": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "ADD",
      "path": "3"
    },
    "6279": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6280": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6281": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6282": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6283": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6284": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6285": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6287": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6288": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "ADD",
      "path": "3"
    },
    "6289": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6296": {
      "op": "SHL"
    },
    "6297": {
      "op": "SUB"
    },
    "6298": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "AND",
      "path": "3"
    },
    "6299": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6300": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6301": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "ADD",
      "path": "3"
    },
    "6302": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6303": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6304": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6305": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6306": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6308": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "ADD",
      "path": "3"
    },
    "6309": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6310": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6311": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6312": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "AND",
      "path": "3"
    },
    "6313": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6314": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6315": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "ADD",
      "path": "3"
    },
    "6316": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6317": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6318": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6319": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6320": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6321": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5272,
        5288
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6322": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6323": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5298,
        5338
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6324": {
      "op": "POP"
    },
    "6325": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5143,
        5345
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6326": {
      "op": "POP"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "fn": "BuidlCollective.readToken",
      "jump": "o",
      "offset": [
        5143,
        5345
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6330": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6331": {
      "fn": "ERC20.permit",
      "offset": [
        4336,
        4351
      ],
      "op": "TIMESTAMP",
      "path": "6",
      "statement": 62
    },
    "6332": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4332
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6333": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "LT",
      "path": "6"
    },
    "6334": {
      "branch": 111,
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6335": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x190A"
    },
    "6338": {
      "branch": 111,
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6339": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6341": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6348": {
      "op": "SHL"
    },
    "6349": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6350": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6353": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6355": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6356": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "ADD",
      "path": "6"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6362": {
      "op": "DUP3"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "op": "MSTORE"
    },
    "6365": {
      "op": "PUSH32",
      "value": "0x5045524D49545F444541444C494E455F45585049524544000000000000000000"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6400": {
      "op": "DUP3"
    },
    "6401": {
      "op": "ADD"
    },
    "6402": {
      "op": "MSTORE"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6405": {
      "op": "ADD"
    },
    "6406": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x943"
    },
    "6409": {
      "op": "JUMP"
    },
    "6410": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6411": {
      "fn": "ERC20.permit",
      "offset": [
        4544,
        4558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6413": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1914"
    },
    "6416": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4674
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB99"
    },
    "6419": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6420": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6427": {
      "op": "SHL"
    },
    "6428": {
      "op": "SUB"
    },
    "6429": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP10",
      "path": "6"
    },
    "6430": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6431": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "AND",
      "path": "6"
    },
    "6432": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6434": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6435": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6436": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6437": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "6439": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6441": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6442": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6443": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6444": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6446": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6447": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6448": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6449": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6450": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6451": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6452": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6454": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6455": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "ADD",
      "path": "6"
    },
    "6456": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6457": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6458": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6459": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6460": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6461": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "6494": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6495": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6496": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "6"
    },
    "6497": {
      "op": "MSTORE"
    },
    "6498": {
      "op": "DUP1"
    },
    "6499": {
      "op": "DUP5"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "op": "SWAP5"
    },
    "6502": {
      "op": "SWAP1"
    },
    "6503": {
      "op": "SWAP5"
    },
    "6504": {
      "op": "MSTORE"
    },
    "6505": {
      "op": "SWAP4"
    },
    "6506": {
      "op": "DUP13"
    },
    "6507": {
      "op": "AND"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6510": {
      "op": "DUP5"
    },
    "6511": {
      "op": "ADD"
    },
    "6512": {
      "op": "MSTORE"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6515": {
      "op": "DUP4"
    },
    "6516": {
      "op": "ADD"
    },
    "6517": {
      "op": "DUP12"
    },
    "6518": {
      "op": "SWAP1"
    },
    "6519": {
      "op": "MSTORE"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6522": {
      "op": "DUP4"
    },
    "6523": {
      "op": "ADD"
    },
    "6524": {
      "op": "SWAP4"
    },
    "6525": {
      "op": "SWAP1"
    },
    "6526": {
      "op": "SWAP4"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6530": {
      "op": "DUP1"
    },
    "6531": {
      "op": "DUP4"
    },
    "6532": {
      "op": "ADD"
    },
    "6533": {
      "op": "DUP11"
    },
    "6534": {
      "op": "SWAP1"
    },
    "6535": {
      "op": "MSTORE"
    },
    "6536": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6537": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6538": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6539": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6540": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SUB",
      "path": "6"
    },
    "6541": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6542": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6543": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "6"
    },
    "6544": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6545": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6548": {
      "op": "DUP4"
    },
    "6549": {
      "op": "ADD"
    },
    "6550": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6551": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6552": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6553": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6554": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6555": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6556": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "ADD",
      "path": "6"
    },
    "6557": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6558": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6559": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6560": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6561": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6566": {
      "op": "SHL"
    },
    "6567": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6570": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6571": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "6"
    },
    "6572": {
      "op": "MSTORE"
    },
    "6573": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "6576": {
      "op": "DUP3"
    },
    "6577": {
      "op": "ADD"
    },
    "6578": {
      "op": "SWAP3"
    },
    "6579": {
      "op": "SWAP1"
    },
    "6580": {
      "op": "SWAP3"
    },
    "6581": {
      "op": "MSTORE"
    },
    "6582": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "6585": {
      "op": "DUP2"
    },
    "6586": {
      "op": "ADD"
    },
    "6587": {
      "op": "SWAP2"
    },
    "6588": {
      "op": "SWAP1"
    },
    "6589": {
      "op": "SWAP2"
    },
    "6590": {
      "op": "MSTORE"
    },
    "6591": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "6594": {
      "op": "ADD"
    },
    "6595": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6597": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6598": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6601": {
      "op": "NOT"
    },
    "6602": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6603": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6604": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "SUB",
      "path": "6"
    },
    "6605": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "6"
    },
    "6606": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6607": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6608": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6609": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6610": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6611": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6612": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6613": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6615": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6616": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6617": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "ADD",
      "path": "6"
    },
    "6618": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6619": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6621": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6622": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6623": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6624": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6625": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6626": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "6"
    },
    "6627": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6628": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6629": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6630": {
      "op": "DUP2"
    },
    "6631": {
      "op": "SWAP1"
    },
    "6632": {
      "op": "MSTORE"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6635": {
      "op": "DUP9"
    },
    "6636": {
      "op": "AND"
    },
    "6637": {
      "op": "SWAP3"
    },
    "6638": {
      "op": "DUP5"
    },
    "6639": {
      "op": "ADD"
    },
    "6640": {
      "op": "SWAP3"
    },
    "6641": {
      "op": "SWAP1"
    },
    "6642": {
      "op": "SWAP3"
    },
    "6643": {
      "op": "MSTORE"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6646": {
      "op": "DUP4"
    },
    "6647": {
      "op": "ADD"
    },
    "6648": {
      "op": "DUP7"
    },
    "6649": {
      "op": "SWAP1"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6653": {
      "op": "DUP4"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "op": "DUP6"
    },
    "6656": {
      "op": "SWAP1"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6659": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6660": {
      "op": "POP"
    },
    "6661": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6662": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6664": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6670": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6672": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6673": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6675": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6676": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "6"
    },
    "6677": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6678": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6679": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6680": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "6"
    },
    "6681": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6682": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6683": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "GAS",
      "path": "6"
    },
    "6684": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "6685": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6686": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6687": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6688": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A2D"
    },
    "6691": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6692": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6693": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6695": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6696": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6697": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6698": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6700": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6701": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6702": {
      "op": "POP"
    },
    "6703": {
      "op": "POP"
    },
    "6704": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6706": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6709": {
      "op": "NOT"
    },
    "6710": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "6"
    },
    "6711": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6712": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6713": {
      "op": "POP"
    },
    "6714": {
      "op": "POP"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6721": {
      "op": "SHL"
    },
    "6722": {
      "op": "SUB"
    },
    "6723": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 63
    },
    "6724": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "AND",
      "path": "6"
    },
    "6725": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6726": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6727": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6728": {
      "branch": 112,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6729": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A63"
    },
    "6732": {
      "branch": 112,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6733": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "POP",
      "path": "6"
    },
    "6734": {
      "fn": "ERC20.permit",
      "offset": [
        5220,
        5225
      ],
      "op": "DUP9",
      "path": "6"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6741": {
      "op": "SHL"
    },
    "6742": {
      "op": "SUB"
    },
    "6743": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "6"
    },
    "6744": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6751": {
      "op": "SHL"
    },
    "6752": {
      "op": "SUB"
    },
    "6753": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "6"
    },
    "6754": {
      "branch": 113,
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "EQ",
      "path": "6"
    },
    "6755": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6756": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AA0"
    },
    "6759": {
      "branch": 113,
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6760": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6762": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6771": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6774": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6776": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6777": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "ADD",
      "path": "6"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH14",
      "value": "0x24A72B20A624A22FA9A4A3A722A9"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "6803": {
      "op": "SHL"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6806": {
      "op": "DUP3"
    },
    "6807": {
      "op": "ADD"
    },
    "6808": {
      "op": "MSTORE"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6811": {
      "op": "ADD"
    },
    "6812": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x943"
    },
    "6815": {
      "op": "JUMP"
    },
    "6816": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6823": {
      "op": "SHL"
    },
    "6824": {
      "op": "SUB"
    },
    "6825": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 64
    },
    "6826": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6827": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "AND",
      "path": "6"
    },
    "6828": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6830": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6831": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6832": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6833": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6835": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6837": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6838": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6839": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6840": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6842": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6843": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6844": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6845": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP12",
      "path": "6"
    },
    "6846": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6847": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "AND",
      "path": "6"
    },
    "6848": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6849": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6850": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6851": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6852": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6853": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6854": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6855": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6856": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6857": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6858": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "DUP11",
      "path": "6"
    },
    "6859": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6860": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6861": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 65
    },
    "6862": {
      "op": "DUP10"
    },
    "6863": {
      "op": "DUP2"
    },
    "6864": {
      "op": "MSTORE"
    },
    "6865": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6866": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6869": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP11",
      "path": "6"
    },
    "6870": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "AND",
      "path": "6"
    },
    "6871": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6872": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6905": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6906": {
      "op": "ADD"
    },
    "6907": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6909": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6910": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6911": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6912": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SUB",
      "path": "6"
    },
    "6913": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6914": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "LOG3",
      "path": "6"
    },
    "6915": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6916": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6917": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6918": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6919": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6920": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6921": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "6"
    },
    "6922": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6923": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3572,
        3702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6924": {
      "offset": [
        1772,
        1777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "6926": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1772,
        1777
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6933": {
      "op": "SHL"
    },
    "6934": {
      "op": "SUB"
    },
    "6935": {
      "offset": [
        1772,
        1777
      ],
      "op": "AND",
      "path": "3"
    },
    "6936": {
      "offset": [
        1758,
        1768
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6937": {
      "offset": [
        1758,
        1777
      ],
      "op": "EQ",
      "path": "3"
    },
    "6938": {
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B22"
    },
    "6941": {
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6942": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1750,
        1778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6944": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1750,
        1778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6945": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1750,
        1778
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6946": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1750,
        1778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6947": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3646
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0xB"
    },
    "6949": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6950": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6957": {
      "op": "SHL"
    },
    "6958": {
      "op": "SUB"
    },
    "6959": {
      "op": "NOT"
    },
    "6960": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "AND",
      "path": "3"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6967": {
      "op": "SHL"
    },
    "6968": {
      "op": "SUB"
    },
    "6969": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6970": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "AND",
      "path": "3"
    },
    "6971": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6972": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6973": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "OR",
      "path": "3"
    },
    "6974": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6975": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6976": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3641,
        3658
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6977": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3673,
        3695
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x40"
    },
    "6979": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3673,
        3695
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6980": {
      "op": "SWAP1"
    },
    "6981": {
      "op": "DUP2"
    },
    "6982": {
      "op": "MSTORE"
    },
    "6983": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3673,
        3695
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3"
    },
    "7016": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3673,
        3695
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7019": {
      "op": "ADD"
    },
    "7020": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3673,
        3695
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB78"
    },
    "7023": {
      "op": "JUMP"
    },
    "7024": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        10991,
        12382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7031": {
      "op": "SHL"
    },
    "7032": {
      "op": "SUB"
    },
    "7033": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7034": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "AND",
      "path": "3"
    },
    "7035": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11093,
        11100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7037": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7038": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7039": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7040": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11143
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7042": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7044": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7045": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7047": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7048": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11149
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7049": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7051": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11168
      ],
      "op": "ADD",
      "path": "3"
    },
    "7052": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11135,
        11168
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7053": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11116,
        11131
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7054": {
      "branch": 101,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11116,
        11168
      ],
      "op": "GT",
      "path": "3"
    },
    "7055": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11112,
        11178
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B9A"
    },
    "7058": {
      "branch": 101,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11112,
        11178
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7059": {
      "op": "POP"
    },
    "7060": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11177,
        11178
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x0"
    },
    "7062": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11170,
        11178
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x776"
    },
    "7065": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11170,
        11178
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7066": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11112,
        11178
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7073": {
      "op": "SHL"
    },
    "7074": {
      "op": "SUB"
    },
    "7075": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7076": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "AND",
      "path": "3"
    },
    "7077": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11188,
        11207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7079": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7080": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7081": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7082": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7084": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7086": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7087": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7089": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7090": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11254
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7091": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11273
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7093": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11273
      ],
      "op": "ADD",
      "path": "3"
    },
    "7094": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11240,
        11273
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7095": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11210,
        11273
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC0"
    },
    "7098": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11210,
        11273
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7099": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11210,
        11225
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7100": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11210,
        11273
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7103": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11210,
        11273
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7104": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11210,
        11273
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7111": {
      "op": "SHL"
    },
    "7112": {
      "op": "SUB"
    },
    "7113": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7114": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "AND",
      "path": "3"
    },
    "7115": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11283,
        11315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7117": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7118": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7119": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7120": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11360
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7122": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7124": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7125": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7127": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7128": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11366
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7129": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7131": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11397
      ],
      "op": "ADD",
      "path": "3"
    },
    "7132": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11352,
        11397
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7133": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11188,
        11273
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7134": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11188,
        11273
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7135": {
      "op": "POP"
    },
    "7136": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11283,
        11315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7137": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BE8"
    },
    "7140": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11335
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A5"
    },
    "7143": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11318,
        11337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7144": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7145": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF2"
    },
    "7148": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7149": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7150": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7153": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11318,
        11397
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7154": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11318,
        11397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7155": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11283,
        11397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7156": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11283,
        11397
      ],
      "op": "POP",
      "path": "3"
    },
    "7157": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11428,
        11447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7159": {
      "branch": 102,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11461,
        11468
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7160": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7161": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2C"
    },
    "7164": {
      "branch": 102,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7171": {
      "op": "SHL"
    },
    "7172": {
      "op": "SUB"
    },
    "7173": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 69
    },
    "7174": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "AND",
      "path": "3"
    },
    "7175": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7177": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7178": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7179": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7180": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7182": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7184": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7185": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7187": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7188": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11523
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7189": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11542
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7191": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11542
      ],
      "op": "ADD",
      "path": "3"
    },
    "7192": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11542
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7193": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "7195": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11506
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7196": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C25"
    },
    "7199": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11542
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7200": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11509,
        11542
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7201": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7204": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11498,
        11542
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7205": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11498,
        11542
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7206": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11484,
        11542
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7207": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11484,
        11542
      ],
      "op": "POP",
      "path": "3"
    },
    "7208": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C96"
    },
    "7211": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7212": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7213": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11756,
        11767
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 70,
      "value": "0xC"
    },
    "7215": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11756,
        11767
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7216": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11721,
        11735
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "7218": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11721,
        11735
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7219": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11703,
        11735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C3C"
    },
    "7222": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11703,
        11735
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7223": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11703,
        11718
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7224": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11703,
        11735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7227": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11703,
        11735
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7228": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11703,
        11735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7229": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "7231": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11694
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7232": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11699
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C4C"
    },
    "7235": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11699
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7236": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7239": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7240": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11699
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7243": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11683,
        11699
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7244": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11699
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7245": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C56"
    },
    "7248": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11736
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7249": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11736
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7250": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7253": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11683,
        11736
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7254": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11683,
        11736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7255": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11682,
        11767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C60"
    },
    "7258": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11682,
        11767
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7259": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11682,
        11767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7260": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11682,
        11767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7263": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11682,
        11767
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7264": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11682,
        11767
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7271": {
      "op": "SHL"
    },
    "7272": {
      "op": "SUB"
    },
    "7273": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7274": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "AND",
      "path": "3"
    },
    "7275": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7277": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7278": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7279": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7280": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7282": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7284": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7285": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7287": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7288": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11644
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7289": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7291": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11663
      ],
      "op": "ADD",
      "path": "3"
    },
    "7292": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11663
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7293": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "7295": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11611
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7296": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C89"
    },
    "7299": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11663
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7300": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11630,
        11663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7301": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7304": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11603,
        11663
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7305": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11663
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7306": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C93"
    },
    "7309": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11767
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7310": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7311": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A88"
    },
    "7314": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11603,
        11767
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7315": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11603,
        11767
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7316": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11573,
        11767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7317": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11573,
        11767
      ],
      "op": "POP",
      "path": "3"
    },
    "7318": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11457,
        11778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7319": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11787,
        11814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7321": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11817,
        11842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA2"
    },
    "7324": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11831,
        11842
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7325": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11817,
        11828
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7326": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11817,
        11842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7329": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11817,
        11842
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7330": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11817,
        11842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7331": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11787,
        11842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7332": {
      "op": "POP"
    },
    "7333": {
      "branch": 103,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11856,
        11880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7334": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11852,
        11890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB6"
    },
    "7337": {
      "branch": 103,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11852,
        11890
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7338": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11889,
        11890
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 71,
      "value": "0x0"
    },
    "7340": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7341": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "POP",
      "path": "3"
    },
    "7342": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "POP",
      "path": "3"
    },
    "7343": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "POP",
      "path": "3"
    },
    "7344": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "POP",
      "path": "3"
    },
    "7345": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "POP",
      "path": "3"
    },
    "7346": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x776"
    },
    "7349": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11882,
        11890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7350": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11852,
        11890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7357": {
      "op": "SHL"
    },
    "7358": {
      "op": "SUB"
    },
    "7359": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7360": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "AND",
      "path": "3"
    },
    "7361": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11964,
        11989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7363": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7364": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7365": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7366": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7368": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7370": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7371": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7373": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7374": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12007
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7375": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12022
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7376": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12043,
        12062
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7377": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12043,
        12062
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7378": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12027
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CDE"
    },
    "7381": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12027
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7382": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7385": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7386": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12027
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7389": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11993,
        12027
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7390": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11993,
        12027
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7391": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11992,
        12062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CE8"
    },
    "7394": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11992,
        12062
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7395": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11992,
        12062
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7396": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11992,
        12062
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7399": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        11992,
        12062
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7400": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11992,
        12062
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7401": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11964,
        12062
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7402": {
      "op": "POP"
    },
    "7403": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12110,
        12133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7405": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7408": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12137,
        12193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF9"
    },
    "7411": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        11964,
        12062
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7412": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12137,
        12161
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7413": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12137,
        12193
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7416": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12137,
        12193
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7417": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12137,
        12193
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7418": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12136,
        12199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D03"
    },
    "7421": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12136,
        12199
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7422": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12136,
        12199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7423": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12136,
        12199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7426": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12136,
        12199
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7427": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12136,
        12199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7428": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12110,
        12199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7429": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12110,
        12199
      ],
      "op": "POP",
      "path": "3"
    },
    "7430": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12229,
        12242
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "7432": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12229,
        12242
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7433": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12214,
        12225
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7434": {
      "branch": 104,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12214,
        12242
      ],
      "op": "LT",
      "path": "3"
    },
    "7435": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12210,
        12376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1B"
    },
    "7438": {
      "branch": 104,
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12210,
        12376
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7439": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12265,
        12280
      ],
      "op": "SWAP6",
      "path": "3",
      "statement": 72
    },
    "7440": {
      "op": "POP"
    },
    "7441": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12258,
        12280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x776"
    },
    "7444": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12258,
        12280
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7445": {
      "op": "POP"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "op": "POP"
    },
    "7450": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12258,
        12280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7451": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12210,
        12376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7452": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12352,
        12365
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x12"
    },
    "7454": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12352,
        12365
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7455": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12319,
        12348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D28"
    },
    "7458": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12337,
        12348
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7459": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12319,
        12334
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7460": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12319,
        12348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7463": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12319,
        12348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7464": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12319,
        12348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7465": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12318,
        12365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D32"
    },
    "7468": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12318,
        12365
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7469": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12318,
        12365
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7470": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12318,
        12365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7473": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        12318,
        12365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7474": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12318,
        12365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7475": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "7476": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7477": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7478": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7479": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7480": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7481": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7482": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "POP",
      "path": "3"
    },
    "7483": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x776"
    },
    "7486": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        12311,
        12365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7487": {
      "offset": [
        276,
        311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7488": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "7490": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7491": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7492": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7493": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7494": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "LT",
      "path": "3"
    },
    "7495": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4F"
    },
    "7498": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7499": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7501": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7502": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7503": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7504": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7505": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7507": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7508": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7510": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7512": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7513": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "ADD",
      "path": "3"
    },
    "7514": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7516": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7517": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "POP",
      "path": "3"
    },
    "7518": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7519": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "POP",
      "path": "3"
    },
    "7520": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7521": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7522": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x68E"
    },
    "7525": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7526": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "offset": [
        276,
        311
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29DF"
    },
    "7529": {
      "fn": "BuidlCollective.calculateShareToClaim",
      "jump": "i",
      "offset": [
        276,
        311
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7530": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8619,
        9658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7531": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8667,
        8680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7533": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8732,
        8745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7534": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8748,
        8781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D78"
    },
    "7537": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8770,
        8774
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7538": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8776,
        8780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7540": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8748,
        8769
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B70"
    },
    "7543": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8748,
        8781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7544": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8748,
        8781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7545": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8732,
        8781
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7546": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8732,
        8781
      ],
      "op": "POP",
      "path": "3"
    },
    "7547": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7549": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8818,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "7551": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7552": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7553": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7554": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7556": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MUL",
      "path": "3"
    },
    "7557": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7559": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7560": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7562": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7563": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7564": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7565": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7566": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7568": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7569": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7570": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7571": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7572": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7573": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7574": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7575": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7576": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7578": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7579": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7580": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7581": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7582": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7583": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7584": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DD2"
    },
    "7587": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7588": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7590": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MUL",
      "path": "3"
    },
    "7591": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7592": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7593": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7594": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7595": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7597": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7598": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7600": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7602": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7603": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7604": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7605": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7606": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7613": {
      "op": "SHL"
    },
    "7614": {
      "op": "SUB"
    },
    "7615": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "AND",
      "path": "3"
    },
    "7616": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7617": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7618": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7620": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7621": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7622": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7623": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7624": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7626": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "ADD",
      "path": "3"
    },
    "7627": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7628": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7629": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "GT",
      "path": "3"
    },
    "7630": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB4"
    },
    "7633": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7634": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7635": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7636": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7637": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7638": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7639": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7640": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7641": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8791,
        8824
      ],
      "op": "POP",
      "path": "3"
    },
    "7642": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8834,
        8858
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7644": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8875,
        8882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7645": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8875,
        8889
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7646": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7655": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7656": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "GT",
      "path": "3"
    },
    "7657": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7658": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF5"
    },
    "7661": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7662": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF5"
    },
    "7665": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245C"
    },
    "7668": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7669": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7670": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7672": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7673": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7674": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7675": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7676": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7677": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7678": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7680": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "MUL",
      "path": "3"
    },
    "7681": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7683": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ADD",
      "path": "3"
    },
    "7684": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7685": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ADD",
      "path": "3"
    },
    "7686": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7688": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7689": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7690": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7691": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E1E"
    },
    "7694": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7695": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7696": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7698": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ADD",
      "path": "3"
    },
    "7699": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7701": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7702": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "MUL",
      "path": "3"
    },
    "7703": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7704": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "7705": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7706": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "7707": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "ADD",
      "path": "3"
    },
    "7708": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7709": {
      "op": "POP"
    },
    "7710": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7711": {
      "op": "POP"
    },
    "7712": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8834,
        8890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7713": {
      "op": "POP"
    },
    "7714": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8904,
        8913
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7715": {
      "branch": 105,
      "fn": "BuidlCollective._claim",
      "offset": [
        8904,
        8913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7716": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8900,
        9652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FEA"
    },
    "7719": {
      "branch": 105,
      "fn": "BuidlCollective._claim",
      "offset": [
        8900,
        9652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7720": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8965,
        8973
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 74,
      "value": "0x10"
    },
    "7722": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8965,
        8973
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7729": {
      "op": "SHL"
    },
    "7730": {
      "op": "SUB"
    },
    "7731": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7732": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "AND",
      "path": "3"
    },
    "7733": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7735": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7736": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7737": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7738": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7740": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7742": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7743": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7745": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7746": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8943
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7747": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7749": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8962
      ],
      "op": "ADD",
      "path": "3"
    },
    "7750": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8929,
        8973
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7751": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9035,
        9054
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x1E4E"
    },
    "7754": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9035,
        9052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A5"
    },
    "7757": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9035,
        9054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7758": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9035,
        9054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7765": {
      "op": "SHL"
    },
    "7766": {
      "op": "SUB"
    },
    "7767": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7768": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "AND",
      "path": "3"
    },
    "7769": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7771": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7772": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7773": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7774": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        8995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7776": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7778": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7779": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7781": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7782": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7783": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9032
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7785": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9032
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7786": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9032
      ],
      "op": "ADD",
      "path": "3"
    },
    "7787": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9054
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7788": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9054
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7789": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9054
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7790": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9054
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7791": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9104,
        9119
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 76
    },
    "7792": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9068,
        9101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7794": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9068,
        9101
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7795": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9068,
        9101
      ],
      "op": "ADD",
      "path": "3"
    },
    "7796": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9068,
        9119
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7797": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 77
    },
    "7798": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7799": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9166,
        9171
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7800": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7801": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7802": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8987,
        9001
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7803": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E85"
    },
    "7806": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7807": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9166,
        9171
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7808": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9166,
        9171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7809": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A30"
    },
    "7812": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9133,
        9171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7813": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7814": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7815": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7816": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9133,
        9171
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9216,
        9227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "7821": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9216,
        9227
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7822": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9185,
        9204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7824": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9185,
        9204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7825": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "7834": {
      "fn": "BuidlCollective._claim",
      "offset": [
        992,
        1000
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7835": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9208,
        9227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EA4"
    },
    "7838": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9208,
        9227
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7839": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9208,
        9213
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7840": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9208,
        9227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "7843": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9208,
        9227
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7844": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9208,
        9227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7845": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9207,
        9246
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EAE"
    },
    "7848": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9207,
        9246
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7849": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9207,
        9246
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7850": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9207,
        9246
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7853": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9207,
        9246
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7854": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9207,
        9246
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7855": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9185,
        9246
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7856": {
      "op": "POP"
    },
    "7857": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9260,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7859": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9281,
        9297
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EBE"
    },
    "7862": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7865": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9185,
        9246
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7866": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9281,
        9297
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "7869": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9281,
        9297
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7870": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9281,
        9297
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7871": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9260,
        9297
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7872": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9260,
        9297
      ],
      "op": "POP",
      "path": "3"
    },
    "7873": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9311,
        9343
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 78,
      "value": "0x1ECA"
    },
    "7876": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9325,
        9329
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "7877": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9332,
        9342
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7878": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9311,
        9316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2249"
    },
    "7881": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9311,
        9343
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7882": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9311,
        9343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7883": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9362,
        9371
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7885": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7886": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9381,
        9388
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7887": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9381,
        9395
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7888": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9377,
        9378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7889": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9377,
        9395
      ],
      "op": "LT",
      "path": "3"
    },
    "7890": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7891": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA9"
    },
    "7894": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7895": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9420,
        9434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7897": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9437,
        9466
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE2"
    },
    "7900": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9457,
        9462
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7901": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9464,
        9465
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7902": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9437,
        9456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E6"
    },
    "7905": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9437,
        9466
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7906": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9437,
        9466
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7907": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9420,
        9466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7908": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9420,
        9466
      ],
      "op": "POP",
      "path": "3"
    },
    "7909": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9497,
        9503
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 79
    },
    "7910": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9491
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7911": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9492,
        9493
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7912": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7913": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7914": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7915": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "LT",
      "path": "3"
    },
    "7916": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF7"
    },
    "7919": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7920": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF7"
    },
    "7923": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "7926": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9484,
        9494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7927": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7928": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7930": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "MUL",
      "path": "3"
    },
    "7931": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7933": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "ADD",
      "path": "3"
    },
    "7934": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9494
      ],
      "op": "ADD",
      "path": "3"
    },
    "7935": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7936": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7937": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7938": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9503
      ],
      "op": "POP",
      "path": "3"
    },
    "7939": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9484,
        9503
      ],
      "op": "POP",
      "path": "3"
    },
    "7940": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9534
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 80
    },
    "7941": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9535,
        9536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7942": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7943": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7944": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7945": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "LT",
      "path": "3"
    },
    "7946": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F15"
    },
    "7949": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7950": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F15"
    },
    "7953": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "7956": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9527,
        9537
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7957": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7958": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7960": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7961": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7962": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "MUL",
      "path": "3"
    },
    "7963": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7964": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7965": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7966": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "ADD",
      "path": "3"
    },
    "7967": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "ADD",
      "path": "3"
    },
    "7968": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9527,
        9537
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7969": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7971": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7972": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7979": {
      "op": "SHL"
    },
    "7980": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7981": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7988": {
      "op": "SHL"
    },
    "7989": {
      "op": "SUB"
    },
    "7990": {
      "op": "DUP12"
    },
    "7991": {
      "op": "DUP2"
    },
    "7992": {
      "op": "AND"
    },
    "7993": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7995": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7996": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ADD",
      "path": "3"
    },
    "7997": {
      "op": "MSTORE"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8000": {
      "op": "DUP3"
    },
    "8001": {
      "op": "ADD"
    },
    "8002": {
      "op": "DUP5"
    },
    "8003": {
      "op": "SWAP1"
    },
    "8004": {
      "op": "MSTORE"
    },
    "8005": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8006": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8007": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "AND",
      "path": "3"
    },
    "8008": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8009": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "8014": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8017": {
      "op": "ADD"
    },
    "8018": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8020": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8022": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8023": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8024": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8025": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "SUB",
      "path": "3"
    },
    "8026": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8027": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8029": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8030": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "GAS",
      "path": "3"
    },
    "8031": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "CALL",
      "path": "3"
    },
    "8032": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8033": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8034": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8035": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F70"
    },
    "8038": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8039": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8040": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8042": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8043": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8044": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8045": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8047": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8048": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8049": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8050": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8051": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8052": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8053": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8055": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8056": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8057": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8059": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "NOT",
      "path": "3"
    },
    "8060": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8062": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8063": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ADD",
      "path": "3"
    },
    "8064": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "AND",
      "path": "3"
    },
    "8065": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8066": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ADD",
      "path": "3"
    },
    "8067": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8068": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8070": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8071": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8072": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8073": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "ADD",
      "path": "3"
    },
    "8074": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8075": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F94"
    },
    "8078": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8079": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8080": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AA0"
    },
    "8083": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9521,
        9561
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8084": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8085": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9521,
        9561
      ],
      "op": "POP",
      "path": "3"
    },
    "8086": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9402,
        9576
      ],
      "op": "POP",
      "path": "3"
    },
    "8087": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 81
    },
    "8088": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8089": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA1"
    },
    "8092": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8093": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE3"
    },
    "8096": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9397,
        9400
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8097": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8098": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8099": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "POP",
      "path": "3"
    },
    "8100": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9397,
        9400
      ],
      "op": "POP",
      "path": "3"
    },
    "8101": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ECD"
    },
    "8104": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8105": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8106": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9357,
        9576
      ],
      "op": "POP",
      "path": "3"
    },
    "8107": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 82,
      "value": "0xBBFAF902CEC9107D8131A7888C2B89C5E5820FF6319B992657E8EAA9A36FECED"
    },
    "8140": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9611,
        9615
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8141": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9617,
        9622
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8142": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9624,
        9631
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8143": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9633,
        9640
      ],
      "op": "DUP7",
      "path": "3"
    },
    "8144": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8146": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8147": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FDF"
    },
    "8150": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "8151": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8152": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8153": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8154": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8155": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D86"
    },
    "8158": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        9594,
        9641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8159": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8160": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8162": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8163": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8164": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8165": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SUB",
      "path": "3"
    },
    "8166": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8167": {
      "fn": "BuidlCollective._claim",
      "offset": [
        9594,
        9641
      ],
      "op": "LOG1",
      "path": "3"
    },
    "8168": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8915,
        9652
      ],
      "op": "POP",
      "path": "3"
    },
    "8169": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8915,
        9652
      ],
      "op": "POP",
      "path": "3"
    },
    "8170": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8900,
        9652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8171": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8682,
        9658
      ],
      "op": "POP",
      "path": "3"
    },
    "8172": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8682,
        9658
      ],
      "op": "POP",
      "path": "3"
    },
    "8173": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8682,
        9658
      ],
      "op": "POP",
      "path": "3"
    },
    "8174": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8619,
        9658
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8175": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8619,
        9658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8176": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8619,
        9658
      ],
      "op": "POP",
      "path": "3"
    },
    "8177": {
      "fn": "BuidlCollective._claim",
      "jump": "o",
      "offset": [
        8619,
        9658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8178": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8179": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5694,
        5701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8181": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5791,
        5932
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 83,
      "value": "0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
    },
    "8214": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5970,
        5974
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8216": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8218": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8219": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2024"
    },
    "8222": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8223": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8224": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DCA"
    },
    "8227": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "i",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8228": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8229": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8231": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8232": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8233": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8234": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8235": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8236": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SUB",
      "path": "6"
    },
    "8237": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8238": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8239": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8241": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8242": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "ADD",
      "path": "6"
    },
    "8243": {
      "op": "SWAP4"
    },
    "8244": {
      "op": "SWAP1"
    },
    "8245": {
      "op": "SWAP4"
    },
    "8246": {
      "op": "MSTORE"
    },
    "8247": {
      "op": "DUP2"
    },
    "8248": {
      "op": "ADD"
    },
    "8249": {
      "op": "SWAP2"
    },
    "8250": {
      "op": "SWAP1"
    },
    "8251": {
      "op": "SWAP2"
    },
    "8252": {
      "op": "MSTORE"
    },
    "8253": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5998,
        6012
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8288": {
      "op": "DUP3"
    },
    "8289": {
      "op": "ADD"
    },
    "8290": {
      "op": "MSTORE"
    },
    "8291": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6034,
        6047
      ],
      "op": "CHAINID",
      "path": "6"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8294": {
      "op": "DUP3"
    },
    "8295": {
      "op": "ADD"
    },
    "8296": {
      "op": "MSTORE"
    },
    "8297": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6077,
        6081
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8300": {
      "op": "DUP3"
    },
    "8301": {
      "op": "ADD"
    },
    "8302": {
      "op": "MSTORE"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8305": {
      "op": "ADD"
    },
    "8306": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8308": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8309": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8311": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8312": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8313": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "6"
    },
    "8314": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "6"
    },
    "8315": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8316": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8317": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8318": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8320": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8321": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8322": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8323": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8324": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8326": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "ADD",
      "path": "6"
    },
    "8327": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8328": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8329": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "POP",
      "path": "6"
    },
    "8330": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8331": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "o",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8332": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8333": {
      "fn": "ERC20._mint",
      "offset": [
        6400,
        6406
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 84
    },
    "8334": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8336": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8338": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8339": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8340": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8341": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x209E"
    },
    "8344": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8345": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8346": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A88"
    },
    "8349": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8350": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8351": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8352": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8353": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8354": {
      "op": "POP"
    },
    "8355": {
      "op": "POP"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8362": {
      "op": "SHL"
    },
    "8363": {
      "op": "SUB"
    },
    "8364": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 85
    },
    "8365": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "AND",
      "path": "6"
    },
    "8366": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8368": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8369": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8370": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8371": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8373": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8375": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8376": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8377": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8378": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8380": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8381": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8382": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8383": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8384": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8385": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8386": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "ADD",
      "path": "6"
    },
    "8387": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8388": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8389": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 86
    },
    "8390": {
      "op": "DUP5"
    },
    "8391": {
      "op": "DUP2"
    },
    "8392": {
      "op": "MSTORE"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8395": {
      "op": "DUP1"
    },
    "8396": {
      "op": "MLOAD"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8399": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "8402": {
      "op": "DUP4"
    },
    "8403": {
      "op": "CODECOPY"
    },
    "8404": {
      "op": "DUP2"
    },
    "8405": {
      "op": "MLOAD"
    },
    "8406": {
      "op": "SWAP2"
    },
    "8407": {
      "op": "MSTORE"
    },
    "8408": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8409": {
      "op": "ADD"
    },
    "8410": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8411": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8413": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8414": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8415": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8416": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SUB",
      "path": "6"
    },
    "8417": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8418": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "LOG3",
      "path": "6"
    },
    "8419": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "6"
    },
    "8420": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "6"
    },
    "8421": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8422": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9664,
        9947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8423": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9807,
        9813
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 87,
      "value": "0x9"
    },
    "8425": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9807,
        9820
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8426": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9770,
        9777
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8428": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9770,
        9777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8429": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9797,
        9820
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8430": {
      "branch": 106,
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9797,
        9820
      ],
      "op": "LT",
      "path": "3"
    },
    "8431": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2131"
    },
    "8434": {
      "branch": 106,
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8435": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8437": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8444": {
      "op": "SHL"
    },
    "8445": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8446": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8449": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8451": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8452": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "ADD",
      "path": "3"
    },
    "8453": {
      "op": "MSTORE"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8458": {
      "op": "DUP3"
    },
    "8459": {
      "op": "ADD"
    },
    "8460": {
      "op": "MSTORE"
    },
    "8461": {
      "op": "PUSH20",
      "value": "0x1D1BDAD95B92590813D5550813D1881093D55391"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "8484": {
      "op": "SHL"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8487": {
      "op": "DUP3"
    },
    "8488": {
      "op": "ADD"
    },
    "8489": {
      "op": "MSTORE"
    },
    "8490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8492": {
      "op": "ADD"
    },
    "8493": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x943"
    },
    "8496": {
      "op": "JUMP"
    },
    "8497": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9789,
        9845
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8498": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "8501": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "PUSH4",
      "path": "3",
      "statement": 88,
      "value": "0xFFFFFFFF"
    },
    "8506": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "AND",
      "path": "3"
    },
    "8507": {
      "offset": [
        992,
        1000
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "8516": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9911,
        9916
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8517": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "8519": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8521": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9891
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "8523": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9892,
        9899
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8524": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8525": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8526": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8527": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "LT",
      "path": "3"
    },
    "8528": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x215B"
    },
    "8531": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8532": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x215B"
    },
    "8535": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABD"
    },
    "8538": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        9885,
        9900
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8539": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8540": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8542": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8543": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8544": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8545": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8547": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8548": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8549": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8550": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8551": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8552": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "ADD",
      "path": "3"
    },
    "8553": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8560": {
      "op": "SHL"
    },
    "8561": {
      "op": "SUB"
    },
    "8562": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9885,
        9900
      ],
      "op": "AND",
      "path": "3"
    },
    "8563": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8564": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8565": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8566": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "ADD",
      "path": "3"
    },
    "8567": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8568": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8569": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8570": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8571": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8573": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "ADD",
      "path": "3"
    },
    "8574": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8575": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9901
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8576": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9908
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8577": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x218A"
    },
    "8580": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8581": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8582": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "8585": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        9875,
        9916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8586": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9875,
        9916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8587": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9935
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2194"
    },
    "8590": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9935
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8591": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9935
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8592": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9935
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "8595": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        9874,
        9935
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8596": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9935
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8597": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x219E"
    },
    "8600": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8601": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8602": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "8605": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        9874,
        9940
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8606": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9874,
        9940
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8607": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9855,
        9940
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8608": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        9664,
        9947
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8609": {
      "op": "POP"
    },
    "8610": {
      "op": "POP"
    },
    "8611": {
      "op": "POP"
    },
    "8612": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "o",
      "offset": [
        9664,
        9947
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8613": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12436,
        12897
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8614": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "8616": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8617": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12488,
        12495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8619": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12488,
        12495
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8624": {
      "op": "SHL"
    },
    "8625": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8626": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "DIV",
      "path": "3"
    },
    "8627": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8632": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "AND",
      "path": "3"
    },
    "8633": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12526,
        12556
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8634": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12566,
        12594
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21C5"
    },
    "8637": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12566,
        12594
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8638": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12593,
        12594
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 89,
      "value": "0x0"
    },
    "8640": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12586,
        12594
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8641": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12586,
        12594
      ],
      "op": "POP",
      "path": "3"
    },
    "8642": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12586,
        12594
      ],
      "op": "POP",
      "path": "3"
    },
    "8643": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12436,
        12897
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8644": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        12436,
        12897
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8645": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12566,
        12594
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8646": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12625,
        12639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "8648": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12625,
        12651
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8649": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12625,
        12651
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8654": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12625,
        12651
      ],
      "op": "AND",
      "path": "3"
    },
    "8655": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12604,
        12622
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8657": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12681,
        12716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21DA"
    },
    "8660": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12707,
        12716
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8661": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12688,
        12703
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "8662": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12681,
        12716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E66"
    },
    "8665": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        12681,
        12716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8666": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12681,
        12716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8667": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12661,
        12716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8668": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12661,
        12716
      ],
      "op": "POP",
      "path": "3"
    },
    "8669": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12745,
        12755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8670": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8675": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12755
      ],
      "op": "AND",
      "path": "3"
    },
    "8676": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12741
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8677": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12755
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8682": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12755
      ],
      "op": "AND",
      "path": "3"
    },
    "8683": {
      "branch": 107,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12730,
        12755
      ],
      "op": "GT",
      "path": "3"
    },
    "8684": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12726,
        12766
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FA"
    },
    "8687": {
      "branch": 107,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12726,
        12766
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8688": {
      "op": "POP"
    },
    "8689": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "8692": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        939,
        944
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8693": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12436,
        12897
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8694": {
      "op": "POP"
    },
    "8695": {
      "op": "POP"
    },
    "8696": {
      "op": "POP"
    },
    "8697": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        12436,
        12897
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8698": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12726,
        12766
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8699": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "8701": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8702": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "8707": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "8713": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8714": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8715": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "DIV",
      "path": "3"
    },
    "8716": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8717": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12794,
        12814
      ],
      "op": "AND",
      "path": "3"
    },
    "8718": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12780,
        12814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8719": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12780,
        12814
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8720": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12780,
        12814
      ],
      "op": "AND",
      "path": "3"
    },
    "8721": {
      "branch": 108,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12780,
        12814
      ],
      "op": "GT",
      "path": "3"
    },
    "8722": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12776,
        12824
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x221F"
    },
    "8725": {
      "branch": 108,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12776,
        12824
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8726": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12823,
        12824
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 90,
      "value": "0x0"
    },
    "8728": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12816,
        12824
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8729": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12816,
        12824
      ],
      "op": "POP",
      "path": "3"
    },
    "8730": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12816,
        12824
      ],
      "op": "POP",
      "path": "3"
    },
    "8731": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12816,
        12824
      ],
      "op": "POP",
      "path": "3"
    },
    "8732": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12816,
        12824
      ],
      "op": "POP",
      "path": "3"
    },
    "8733": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12436,
        12897
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8734": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        12436,
        12897
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8735": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12776,
        12824
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8736": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12870,
        12890
      ],
      "op": "PUSH4",
      "path": "3",
      "statement": 91,
      "value": "0xFFFFFFFF"
    },
    "8741": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12870,
        12890
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8742": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12870,
        12890
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8743": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12870,
        12890
      ],
      "op": "AND",
      "path": "3"
    },
    "8744": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12870,
        12890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8745": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2237"
    },
    "8748": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8749": {
      "offset": [
        939,
        944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "8752": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        939,
        944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8753": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12861
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8754": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12861
      ],
      "op": "AND",
      "path": "3"
    },
    "8755": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A47"
    },
    "8758": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        12842,
        12866
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8759": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12842,
        12866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8760": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12841,
        12890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2241"
    },
    "8763": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12841,
        12890
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8764": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12841,
        12890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8765": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12841,
        12890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A66"
    },
    "8768": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        12841,
        12890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8769": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12841,
        12890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8770": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12834,
        12890
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8771": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12834,
        12890
      ],
      "op": "POP",
      "path": "3"
    },
    "8772": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12834,
        12890
      ],
      "op": "POP",
      "path": "3"
    },
    "8773": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12834,
        12890
      ],
      "op": "POP",
      "path": "3"
    },
    "8774": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12834,
        12890
      ],
      "op": "POP",
      "path": "3"
    },
    "8775": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        12436,
        12897
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8776": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        12436,
        12897
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8777": {
      "fn": "ERC20._burn",
      "offset": [
        6646,
        6974
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8784": {
      "op": "SHL"
    },
    "8785": {
      "op": "SUB"
    },
    "8786": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 92
    },
    "8787": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "AND",
      "path": "6"
    },
    "8788": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8790": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8791": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8792": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8793": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8795": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8797": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8798": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8800": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8801": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8802": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8803": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8804": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8805": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8806": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8807": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2271"
    },
    "8810": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8811": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8812": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8813": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A30"
    },
    "8816": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8817": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8818": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8819": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8820": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8821": {
      "op": "POP"
    },
    "8822": {
      "op": "POP"
    },
    "8823": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6897
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 93,
      "value": "0x2"
    },
    "8825": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8826": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8827": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8828": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8829": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SUB",
      "path": "6"
    },
    "8830": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8831": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8832": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 94,
      "value": "0x40"
    },
    "8834": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8835": {
      "op": "DUP2"
    },
    "8836": {
      "op": "DUP2"
    },
    "8837": {
      "op": "MSTORE"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8840": {
      "op": "SWAP1"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8847": {
      "op": "SHL"
    },
    "8848": {
      "op": "SUB"
    },
    "8849": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8850": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "AND",
      "path": "6"
    },
    "8851": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8854": {
      "op": "DUP1"
    },
    "8855": {
      "op": "MLOAD"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8858": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "8861": {
      "op": "DUP4"
    },
    "8862": {
      "op": "CODECOPY"
    },
    "8863": {
      "op": "DUP2"
    },
    "8864": {
      "op": "MLOAD"
    },
    "8865": {
      "op": "SWAP2"
    },
    "8866": {
      "op": "MSTORE"
    },
    "8867": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8870": {
      "op": "ADD"
    },
    "8871": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20DA"
    },
    "8874": {
      "op": "JUMP"
    },
    "8875": {
      "op": "JUMPDEST"
    },
    "8876": {
      "op": "DUP3"
    },
    "8877": {
      "op": "DUP1"
    },
    "8878": {
      "op": "SLOAD"
    },
    "8879": {
      "op": "PUSH2",
      "value": "0x22B7"
    },
    "8882": {
      "op": "SWAP1"
    },
    "8883": {
      "op": "PUSH2",
      "value": "0x29DF"
    },
    "8886": {
      "jump": "i",
      "op": "JUMP"
    },
    "8887": {
      "op": "JUMPDEST"
    },
    "8888": {
      "op": "SWAP1"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8891": {
      "op": "MSTORE"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8896": {
      "op": "KECCAK256"
    },
    "8897": {
      "op": "SWAP1"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8900": {
      "op": "ADD"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8903": {
      "op": "SWAP1"
    },
    "8904": {
      "op": "DIV"
    },
    "8905": {
      "op": "DUP2"
    },
    "8906": {
      "op": "ADD"
    },
    "8907": {
      "op": "SWAP3"
    },
    "8908": {
      "op": "DUP3"
    },
    "8909": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "8912": {
      "op": "JUMPI"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8915": {
      "op": "DUP6"
    },
    "8916": {
      "op": "SSTORE"
    },
    "8917": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8920": {
      "op": "JUMP"
    },
    "8921": {
      "op": "JUMPDEST"
    },
    "8922": {
      "op": "DUP3"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8925": {
      "op": "LT"
    },
    "8926": {
      "op": "PUSH2",
      "value": "0x22F2"
    },
    "8929": {
      "op": "JUMPI"
    },
    "8930": {
      "op": "DUP1"
    },
    "8931": {
      "op": "MLOAD"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8934": {
      "op": "NOT"
    },
    "8935": {
      "op": "AND"
    },
    "8936": {
      "op": "DUP4"
    },
    "8937": {
      "op": "DUP1"
    },
    "8938": {
      "op": "ADD"
    },
    "8939": {
      "op": "OR"
    },
    "8940": {
      "op": "DUP6"
    },
    "8941": {
      "op": "SSTORE"
    },
    "8942": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8945": {
      "op": "JUMP"
    },
    "8946": {
      "op": "JUMPDEST"
    },
    "8947": {
      "op": "DUP3"
    },
    "8948": {
      "op": "DUP1"
    },
    "8949": {
      "op": "ADD"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8952": {
      "op": "ADD"
    },
    "8953": {
      "op": "DUP6"
    },
    "8954": {
      "op": "SSTORE"
    },
    "8955": {
      "op": "DUP3"
    },
    "8956": {
      "op": "ISZERO"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8960": {
      "op": "JUMPI"
    },
    "8961": {
      "op": "SWAP2"
    },
    "8962": {
      "op": "DUP3"
    },
    "8963": {
      "op": "ADD"
    },
    "8964": {
      "op": "JUMPDEST"
    },
    "8965": {
      "op": "DUP3"
    },
    "8966": {
      "op": "DUP2"
    },
    "8967": {
      "op": "GT"
    },
    "8968": {
      "op": "ISZERO"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8972": {
      "op": "JUMPI"
    },
    "8973": {
      "op": "DUP3"
    },
    "8974": {
      "op": "MLOAD"
    },
    "8975": {
      "op": "DUP3"
    },
    "8976": {
      "op": "SSTORE"
    },
    "8977": {
      "op": "SWAP2"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8980": {
      "op": "ADD"
    },
    "8981": {
      "op": "SWAP2"
    },
    "8982": {
      "op": "SWAP1"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8985": {
      "op": "ADD"
    },
    "8986": {
      "op": "SWAP1"
    },
    "8987": {
      "op": "PUSH2",
      "value": "0x2304"
    },
    "8990": {
      "op": "JUMP"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "POP"
    },
    "8993": {
      "op": "PUSH2",
      "value": "0x232B"
    },
    "8996": {
      "op": "SWAP3"
    },
    "8997": {
      "op": "SWAP2"
    },
    "8998": {
      "op": "POP"
    },
    "8999": {
      "op": "PUSH2",
      "value": "0x232F"
    },
    "9002": {
      "jump": "i",
      "op": "JUMP"
    },
    "9003": {
      "op": "JUMPDEST"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "op": "SWAP1"
    },
    "9006": {
      "jump": "o",
      "op": "JUMP"
    },
    "9007": {
      "op": "JUMPDEST"
    },
    "9008": {
      "op": "JUMPDEST"
    },
    "9009": {
      "op": "DUP1"
    },
    "9010": {
      "op": "DUP3"
    },
    "9011": {
      "op": "GT"
    },
    "9012": {
      "op": "ISZERO"
    },
    "9013": {
      "op": "PUSH2",
      "value": "0x232B"
    },
    "9016": {
      "op": "JUMPI"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9019": {
      "op": "DUP2"
    },
    "9020": {
      "op": "SSTORE"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "ADD"
    },
    "9024": {
      "op": "PUSH2",
      "value": "0x2330"
    },
    "9027": {
      "op": "JUMP"
    },
    "9028": {
      "op": "JUMPDEST"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9031": {
      "op": "DUP2"
    },
    "9032": {
      "op": "MLOAD"
    },
    "9033": {
      "op": "DUP1"
    },
    "9034": {
      "op": "DUP5"
    },
    "9035": {
      "op": "MSTORE"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9038": {
      "op": "JUMPDEST"
    },
    "9039": {
      "op": "DUP2"
    },
    "9040": {
      "op": "DUP2"
    },
    "9041": {
      "op": "LT"
    },
    "9042": {
      "op": "ISZERO"
    },
    "9043": {
      "op": "PUSH2",
      "value": "0x236A"
    },
    "9046": {
      "op": "JUMPI"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9049": {
      "op": "DUP2"
    },
    "9050": {
      "op": "DUP6"
    },
    "9051": {
      "op": "ADD"
    },
    "9052": {
      "op": "DUP2"
    },
    "9053": {
      "op": "ADD"
    },
    "9054": {
      "op": "MLOAD"
    },
    "9055": {
      "op": "DUP7"
    },
    "9056": {
      "op": "DUP4"
    },
    "9057": {
      "op": "ADD"
    },
    "9058": {
      "op": "DUP3"
    },
    "9059": {
      "op": "ADD"
    },
    "9060": {
      "op": "MSTORE"
    },
    "9061": {
      "op": "ADD"
    },
    "9062": {
      "op": "PUSH2",
      "value": "0x234E"
    },
    "9065": {
      "op": "JUMP"
    },
    "9066": {
      "op": "JUMPDEST"
    },
    "9067": {
      "op": "DUP2"
    },
    "9068": {
      "op": "DUP2"
    },
    "9069": {
      "op": "GT"
    },
    "9070": {
      "op": "ISZERO"
    },
    "9071": {
      "op": "PUSH2",
      "value": "0x237C"
    },
    "9074": {
      "op": "JUMPI"
    },
    "9075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9079": {
      "op": "DUP4"
    },
    "9080": {
      "op": "DUP8"
    },
    "9081": {
      "op": "ADD"
    },
    "9082": {
      "op": "ADD"
    },
    "9083": {
      "op": "MSTORE"
    },
    "9084": {
      "op": "JUMPDEST"
    },
    "9085": {
      "op": "POP"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9091": {
      "op": "NOT"
    },
    "9092": {
      "op": "AND"
    },
    "9093": {
      "op": "SWAP3"
    },
    "9094": {
      "op": "SWAP1"
    },
    "9095": {
      "op": "SWAP3"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9099": {
      "op": "ADD"
    },
    "9100": {
      "op": "SWAP3"
    },
    "9101": {
      "op": "SWAP2"
    },
    "9102": {
      "op": "POP"
    },
    "9103": {
      "op": "POP"
    },
    "9104": {
      "jump": "o",
      "op": "JUMP"
    },
    "9105": {
      "op": "JUMPDEST"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9108": {
      "op": "DUP2"
    },
    "9109": {
      "op": "MSTORE"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9112": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9117": {
      "op": "DUP4"
    },
    "9118": {
      "op": "ADD"
    },
    "9119": {
      "op": "DUP5"
    },
    "9120": {
      "op": "PUSH2",
      "value": "0x2344"
    },
    "9123": {
      "jump": "i",
      "op": "JUMP"
    },
    "9124": {
      "op": "JUMPDEST"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9131": {
      "op": "SHL"
    },
    "9132": {
      "op": "SUB"
    },
    "9133": {
      "op": "DUP2"
    },
    "9134": {
      "op": "AND"
    },
    "9135": {
      "op": "DUP2"
    },
    "9136": {
      "op": "EQ"
    },
    "9137": {
      "op": "PUSH2",
      "value": "0xA1F"
    },
    "9140": {
      "op": "JUMPI"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9143": {
      "op": "DUP1"
    },
    "9144": {
      "op": "REVERT"
    },
    "9145": {
      "op": "JUMPDEST"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9148": {
      "op": "DUP1"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9151": {
      "op": "DUP4"
    },
    "9152": {
      "op": "DUP6"
    },
    "9153": {
      "op": "SUB"
    },
    "9154": {
      "op": "SLT"
    },
    "9155": {
      "op": "ISZERO"
    },
    "9156": {
      "op": "PUSH2",
      "value": "0x23CC"
    },
    "9159": {
      "op": "JUMPI"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9162": {
      "op": "DUP1"
    },
    "9163": {
      "op": "REVERT"
    },
    "9164": {
      "op": "JUMPDEST"
    },
    "9165": {
      "op": "DUP3"
    },
    "9166": {
      "op": "CALLDATALOAD"
    },
    "9167": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9170": {
      "op": "DUP2"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9174": {
      "jump": "i",
      "op": "JUMP"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "SWAP5"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9179": {
      "op": "SWAP4"
    },
    "9180": {
      "op": "SWAP1"
    },
    "9181": {
      "op": "SWAP4"
    },
    "9182": {
      "op": "ADD"
    },
    "9183": {
      "op": "CALLDATALOAD"
    },
    "9184": {
      "op": "SWAP4"
    },
    "9185": {
      "op": "POP"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "op": "POP"
    },
    "9188": {
      "jump": "o",
      "op": "JUMP"
    },
    "9189": {
      "op": "JUMPDEST"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9194": {
      "op": "DUP3"
    },
    "9195": {
      "op": "DUP5"
    },
    "9196": {
      "op": "SUB"
    },
    "9197": {
      "op": "SLT"
    },
    "9198": {
      "op": "ISZERO"
    },
    "9199": {
      "op": "PUSH2",
      "value": "0x23F7"
    },
    "9202": {
      "op": "JUMPI"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9205": {
      "op": "DUP1"
    },
    "9206": {
      "op": "REVERT"
    },
    "9207": {
      "op": "JUMPDEST"
    },
    "9208": {
      "op": "DUP2"
    },
    "9209": {
      "op": "CALLDATALOAD"
    },
    "9210": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "9213": {
      "op": "DUP2"
    },
    "9214": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9217": {
      "jump": "i",
      "op": "JUMP"
    },
    "9218": {
      "op": "JUMPDEST"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9221": {
      "op": "DUP1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9226": {
      "op": "DUP5"
    },
    "9227": {
      "op": "DUP7"
    },
    "9228": {
      "op": "SUB"
    },
    "9229": {
      "op": "SLT"
    },
    "9230": {
      "op": "ISZERO"
    },
    "9231": {
      "op": "PUSH2",
      "value": "0x2417"
    },
    "9234": {
      "op": "JUMPI"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9237": {
      "op": "DUP1"
    },
    "9238": {
      "op": "REVERT"
    },
    "9239": {
      "op": "JUMPDEST"
    },
    "9240": {
      "op": "DUP4"
    },
    "9241": {
      "op": "CALLDATALOAD"
    },
    "9242": {
      "op": "PUSH2",
      "value": "0x2422"
    },
    "9245": {
      "op": "DUP2"
    },
    "9246": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9249": {
      "jump": "i",
      "op": "JUMP"
    },
    "9250": {
      "op": "JUMPDEST"
    },
    "9251": {
      "op": "SWAP3"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9255": {
      "op": "DUP5"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "CALLDATALOAD"
    },
    "9258": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9261": {
      "op": "DUP2"
    },
    "9262": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9265": {
      "jump": "i",
      "op": "JUMP"
    },
    "9266": {
      "op": "JUMPDEST"
    },
    "9267": {
      "op": "SWAP3"
    },
    "9268": {
      "op": "SWAP6"
    },
    "9269": {
      "op": "SWAP3"
    },
    "9270": {
      "op": "SWAP5"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9276": {
      "op": "SWAP2"
    },
    "9277": {
      "op": "SWAP1"
    },
    "9278": {
      "op": "SWAP2"
    },
    "9279": {
      "op": "ADD"
    },
    "9280": {
      "op": "CALLDATALOAD"
    },
    "9281": {
      "op": "SWAP1"
    },
    "9282": {
      "jump": "o",
      "op": "JUMP"
    },
    "9283": {
      "op": "JUMPDEST"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9288": {
      "op": "DUP3"
    },
    "9289": {
      "op": "DUP5"
    },
    "9290": {
      "op": "SUB"
    },
    "9291": {
      "op": "SLT"
    },
    "9292": {
      "op": "ISZERO"
    },
    "9293": {
      "op": "PUSH2",
      "value": "0x2455"
    },
    "9296": {
      "op": "JUMPI"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9299": {
      "op": "DUP1"
    },
    "9300": {
      "op": "REVERT"
    },
    "9301": {
      "op": "JUMPDEST"
    },
    "9302": {
      "op": "POP"
    },
    "9303": {
      "op": "CALLDATALOAD"
    },
    "9304": {
      "op": "SWAP2"
    },
    "9305": {
      "op": "SWAP1"
    },
    "9306": {
      "op": "POP"
    },
    "9307": {
      "jump": "o",
      "op": "JUMP"
    },
    "9308": {
      "op": "JUMPDEST"
    },
    "9309": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9316": {
      "op": "SHL"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9319": {
      "op": "MSTORE"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9324": {
      "op": "MSTORE"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9329": {
      "op": "REVERT"
    },
    "9330": {
      "op": "JUMPDEST"
    },
    "9331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9333": {
      "op": "MLOAD"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9336": {
      "op": "DUP3"
    },
    "9337": {
      "op": "ADD"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9340": {
      "op": "NOT"
    },
    "9341": {
      "op": "AND"
    },
    "9342": {
      "op": "DUP2"
    },
    "9343": {
      "op": "ADD"
    },
    "9344": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9353": {
      "op": "DUP2"
    },
    "9354": {
      "op": "GT"
    },
    "9355": {
      "op": "DUP3"
    },
    "9356": {
      "op": "DUP3"
    },
    "9357": {
      "op": "LT"
    },
    "9358": {
      "op": "OR"
    },
    "9359": {
      "op": "ISZERO"
    },
    "9360": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "9363": {
      "op": "JUMPI"
    },
    "9364": {
      "op": "PUSH2",
      "value": "0x249B"
    },
    "9367": {
      "op": "PUSH2",
      "value": "0x245C"
    },
    "9370": {
      "jump": "i",
      "op": "JUMP"
    },
    "9371": {
      "op": "JUMPDEST"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9374": {
      "op": "MSTORE"
    },
    "9375": {
      "op": "SWAP2"
    },
    "9376": {
      "op": "SWAP1"
    },
    "9377": {
      "op": "POP"
    },
    "9378": {
      "jump": "o",
      "op": "JUMP"
    },
    "9379": {
      "op": "JUMPDEST"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9382": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9391": {
      "op": "DUP3"
    },
    "9392": {
      "op": "GT"
    },
    "9393": {
      "op": "ISZERO"
    },
    "9394": {
      "op": "PUSH2",
      "value": "0x24BD"
    },
    "9397": {
      "op": "JUMPI"
    },
    "9398": {
      "op": "PUSH2",
      "value": "0x24BD"
    },
    "9401": {
      "op": "PUSH2",
      "value": "0x245C"
    },
    "9404": {
      "jump": "i",
      "op": "JUMP"
    },
    "9405": {
      "op": "JUMPDEST"
    },
    "9406": {
      "op": "POP"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9409": {
      "op": "SHL"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9412": {
      "op": "ADD"
    },
    "9413": {
      "op": "SWAP1"
    },
    "9414": {
      "jump": "o",
      "op": "JUMP"
    },
    "9415": {
      "op": "JUMPDEST"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9420": {
      "op": "DUP4"
    },
    "9421": {
      "op": "DUP2"
    },
    "9422": {
      "op": "DUP5"
    },
    "9423": {
      "op": "ADD"
    },
    "9424": {
      "op": "SLT"
    },
    "9425": {
      "op": "PUSH2",
      "value": "0x24D9"
    },
    "9428": {
      "op": "JUMPI"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9431": {
      "op": "DUP1"
    },
    "9432": {
      "op": "REVERT"
    },
    "9433": {
      "op": "JUMPDEST"
    },
    "9434": {
      "op": "DUP3"
    },
    "9435": {
      "op": "CALLDATALOAD"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9438": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9441": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9444": {
      "op": "DUP4"
    },
    "9445": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "9448": {
      "jump": "i",
      "op": "JUMP"
    },
    "9449": {
      "op": "JUMPDEST"
    },
    "9450": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9453": {
      "jump": "i",
      "op": "JUMP"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "DUP3"
    },
    "9456": {
      "op": "DUP2"
    },
    "9457": {
      "op": "MSTORE"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9460": {
      "op": "SWAP3"
    },
    "9461": {
      "op": "SWAP1"
    },
    "9462": {
      "op": "SWAP3"
    },
    "9463": {
      "op": "SHL"
    },
    "9464": {
      "op": "DUP6"
    },
    "9465": {
      "op": "ADD"
    },
    "9466": {
      "op": "DUP2"
    },
    "9467": {
      "op": "ADD"
    },
    "9468": {
      "op": "SWAP2"
    },
    "9469": {
      "op": "DUP2"
    },
    "9470": {
      "op": "DUP2"
    },
    "9471": {
      "op": "ADD"
    },
    "9472": {
      "op": "SWAP1"
    },
    "9473": {
      "op": "DUP8"
    },
    "9474": {
      "op": "DUP5"
    },
    "9475": {
      "op": "GT"
    },
    "9476": {
      "op": "ISZERO"
    },
    "9477": {
      "op": "PUSH2",
      "value": "0x250D"
    },
    "9480": {
      "op": "JUMPI"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9483": {
      "op": "DUP1"
    },
    "9484": {
      "op": "REVERT"
    },
    "9485": {
      "op": "JUMPDEST"
    },
    "9486": {
      "op": "DUP3"
    },
    "9487": {
      "op": "DUP8"
    },
    "9488": {
      "op": "ADD"
    },
    "9489": {
      "op": "JUMPDEST"
    },
    "9490": {
      "op": "DUP5"
    },
    "9491": {
      "op": "DUP2"
    },
    "9492": {
      "op": "LT"
    },
    "9493": {
      "op": "ISZERO"
    },
    "9494": {
      "op": "PUSH2",
      "value": "0x25A4"
    },
    "9497": {
      "op": "JUMPI"
    },
    "9498": {
      "op": "DUP1"
    },
    "9499": {
      "op": "CALLDATALOAD"
    },
    "9500": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9509": {
      "op": "DUP1"
    },
    "9510": {
      "op": "DUP3"
    },
    "9511": {
      "op": "GT"
    },
    "9512": {
      "op": "ISZERO"
    },
    "9513": {
      "op": "PUSH2",
      "value": "0x2532"
    },
    "9516": {
      "op": "JUMPI"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9519": {
      "op": "DUP1"
    },
    "9520": {
      "op": "DUP2"
    },
    "9521": {
      "op": "REVERT"
    },
    "9522": {
      "op": "JUMPDEST"
    },
    "9523": {
      "op": "DUP2"
    },
    "9524": {
      "op": "DUP11"
    },
    "9525": {
      "op": "ADD"
    },
    "9526": {
      "op": "SWAP2"
    },
    "9527": {
      "op": "POP"
    },
    "9528": {
      "op": "DUP11"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9531": {
      "op": "DUP4"
    },
    "9532": {
      "op": "ADD"
    },
    "9533": {
      "op": "SLT"
    },
    "9534": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9537": {
      "op": "JUMPI"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9540": {
      "op": "DUP1"
    },
    "9541": {
      "op": "DUP2"
    },
    "9542": {
      "op": "REVERT"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "DUP6"
    },
    "9545": {
      "op": "DUP3"
    },
    "9546": {
      "op": "ADD"
    },
    "9547": {
      "op": "CALLDATALOAD"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9550": {
      "op": "DUP3"
    },
    "9551": {
      "op": "DUP3"
    },
    "9552": {
      "op": "GT"
    },
    "9553": {
      "op": "ISZERO"
    },
    "9554": {
      "op": "PUSH2",
      "value": "0x255D"
    },
    "9557": {
      "op": "JUMPI"
    },
    "9558": {
      "op": "PUSH2",
      "value": "0x255D"
    },
    "9561": {
      "op": "PUSH2",
      "value": "0x245C"
    },
    "9564": {
      "jump": "i",
      "op": "JUMP"
    },
    "9565": {
      "op": "JUMPDEST"
    },
    "9566": {
      "op": "PUSH2",
      "value": "0x256E"
    },
    "9569": {
      "op": "DUP3"
    },
    "9570": {
      "op": "DUP12"
    },
    "9571": {
      "op": "ADD"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9574": {
      "op": "NOT"
    },
    "9575": {
      "op": "AND"
    },
    "9576": {
      "op": "DUP10"
    },
    "9577": {
      "op": "ADD"
    },
    "9578": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9581": {
      "jump": "i",
      "op": "JUMP"
    },
    "9582": {
      "op": "JUMPDEST"
    },
    "9583": {
      "op": "SWAP3"
    },
    "9584": {
      "op": "POP"
    },
    "9585": {
      "op": "DUP2"
    },
    "9586": {
      "op": "DUP4"
    },
    "9587": {
      "op": "MSTORE"
    },
    "9588": {
      "op": "DUP13"
    },
    "9589": {
      "op": "DUP2"
    },
    "9590": {
      "op": "DUP4"
    },
    "9591": {
      "op": "DUP7"
    },
    "9592": {
      "op": "ADD"
    },
    "9593": {
      "op": "ADD"
    },
    "9594": {
      "op": "GT"
    },
    "9595": {
      "op": "ISZERO"
    },
    "9596": {
      "op": "PUSH2",
      "value": "0x2585"
    },
    "9599": {
      "op": "JUMPI"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9602": {
      "op": "DUP1"
    },
    "9603": {
      "op": "DUP2"
    },
    "9604": {
      "op": "REVERT"
    },
    "9605": {
      "op": "JUMPDEST"
    },
    "9606": {
      "op": "DUP2"
    },
    "9607": {
      "op": "DUP2"
    },
    "9608": {
      "op": "DUP6"
    },
    "9609": {
      "op": "ADD"
    },
    "9610": {
      "op": "DUP10"
    },
    "9611": {
      "op": "DUP6"
    },
    "9612": {
      "op": "ADD"
    },
    "9613": {
      "op": "CALLDATACOPY"
    },
    "9614": {
      "op": "POP"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9617": {
      "op": "SWAP1"
    },
    "9618": {
      "op": "DUP3"
    },
    "9619": {
      "op": "ADD"
    },
    "9620": {
      "op": "DUP8"
    },
    "9621": {
      "op": "ADD"
    },
    "9622": {
      "op": "MSTORE"
    },
    "9623": {
      "op": "DUP5"
    },
    "9624": {
      "op": "MSTORE"
    },
    "9625": {
      "op": "POP"
    },
    "9626": {
      "op": "SWAP2"
    },
    "9627": {
      "op": "DUP4"
    },
    "9628": {
      "op": "ADD"
    },
    "9629": {
      "op": "SWAP2"
    },
    "9630": {
      "op": "DUP4"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "op": "PUSH2",
      "value": "0x2511"
    },
    "9635": {
      "op": "JUMP"
    },
    "9636": {
      "op": "JUMPDEST"
    },
    "9637": {
      "op": "POP"
    },
    "9638": {
      "op": "SWAP8"
    },
    "9639": {
      "op": "SWAP7"
    },
    "9640": {
      "op": "POP"
    },
    "9641": {
      "op": "POP"
    },
    "9642": {
      "op": "POP"
    },
    "9643": {
      "op": "POP"
    },
    "9644": {
      "op": "POP"
    },
    "9645": {
      "op": "POP"
    },
    "9646": {
      "op": "POP"
    },
    "9647": {
      "jump": "o",
      "op": "JUMP"
    },
    "9648": {
      "op": "JUMPDEST"
    },
    "9649": {
      "op": "DUP1"
    },
    "9650": {
      "op": "CALLDATALOAD"
    },
    "9651": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9656": {
      "op": "DUP2"
    },
    "9657": {
      "op": "AND"
    },
    "9658": {
      "op": "DUP2"
    },
    "9659": {
      "op": "EQ"
    },
    "9660": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9663": {
      "op": "JUMPI"
    },
    "9664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9666": {
      "op": "DUP1"
    },
    "9667": {
      "op": "REVERT"
    },
    "9668": {
      "op": "JUMPDEST"
    },
    "9669": {
      "op": "SWAP2"
    },
    "9670": {
      "op": "SWAP1"
    },
    "9671": {
      "op": "POP"
    },
    "9672": {
      "jump": "o",
      "op": "JUMP"
    },
    "9673": {
      "op": "JUMPDEST"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9678": {
      "op": "DUP3"
    },
    "9679": {
      "op": "DUP5"
    },
    "9680": {
      "op": "SUB"
    },
    "9681": {
      "op": "SLT"
    },
    "9682": {
      "op": "ISZERO"
    },
    "9683": {
      "op": "PUSH2",
      "value": "0x25DB"
    },
    "9686": {
      "op": "JUMPI"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9689": {
      "op": "DUP1"
    },
    "9690": {
      "op": "REVERT"
    },
    "9691": {
      "op": "JUMPDEST"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9694": {
      "op": "MLOAD"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9697": {
      "op": "DUP2"
    },
    "9698": {
      "op": "ADD"
    },
    "9699": {
      "op": "DUP2"
    },
    "9700": {
      "op": "DUP2"
    },
    "9701": {
      "op": "LT"
    },
    "9702": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9711": {
      "op": "DUP3"
    },
    "9712": {
      "op": "GT"
    },
    "9713": {
      "op": "OR"
    },
    "9714": {
      "op": "ISZERO"
    },
    "9715": {
      "op": "PUSH2",
      "value": "0x25FE"
    },
    "9718": {
      "op": "JUMPI"
    },
    "9719": {
      "op": "PUSH2",
      "value": "0x25FE"
    },
    "9722": {
      "op": "PUSH2",
      "value": "0x245C"
    },
    "9725": {
      "jump": "i",
      "op": "JUMP"
    },
    "9726": {
      "op": "JUMPDEST"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9729": {
      "op": "MSTORE"
    },
    "9730": {
      "op": "SWAP1"
    },
    "9731": {
      "op": "POP"
    },
    "9732": {
      "op": "DUP1"
    },
    "9733": {
      "op": "PUSH2",
      "value": "0x260D"
    },
    "9736": {
      "op": "DUP4"
    },
    "9737": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9740": {
      "jump": "i",
      "op": "JUMP"
    },
    "9741": {
      "op": "JUMPDEST"
    },
    "9742": {
      "op": "DUP2"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH2",
      "value": "0x261B"
    },
    "9747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9749": {
      "op": "DUP5"
    },
    "9750": {
      "op": "ADD"
    },
    "9751": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9754": {
      "jump": "i",
      "op": "JUMP"
    },
    "9755": {
      "op": "JUMPDEST"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9758": {
      "op": "DUP3"
    },
    "9759": {
      "op": "ADD"
    },
    "9760": {
      "op": "MSTORE"
    },
    "9761": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9766": {
      "op": "DUP5"
    },
    "9767": {
      "op": "ADD"
    },
    "9768": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9771": {
      "jump": "i",
      "op": "JUMP"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9775": {
      "op": "DUP3"
    },
    "9776": {
      "op": "ADD"
    },
    "9777": {
      "op": "MSTORE"
    },
    "9778": {
      "op": "POP"
    },
    "9779": {
      "op": "SWAP3"
    },
    "9780": {
      "op": "SWAP2"
    },
    "9781": {
      "op": "POP"
    },
    "9782": {
      "op": "POP"
    },
    "9783": {
      "jump": "o",
      "op": "JUMP"
    },
    "9784": {
      "op": "JUMPDEST"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9787": {
      "op": "DUP3"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9790": {
      "op": "DUP4"
    },
    "9791": {
      "op": "ADD"
    },
    "9792": {
      "op": "SLT"
    },
    "9793": {
      "op": "PUSH2",
      "value": "0x2649"
    },
    "9796": {
      "op": "JUMPI"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9799": {
      "op": "DUP1"
    },
    "9800": {
      "op": "REVERT"
    },
    "9801": {
      "op": "JUMPDEST"
    },
    "9802": {
      "op": "DUP2"
    },
    "9803": {
      "op": "CALLDATALOAD"
    },
    "9804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9806": {
      "op": "PUSH2",
      "value": "0x2659"
    },
    "9809": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9812": {
      "op": "DUP4"
    },
    "9813": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "9816": {
      "jump": "i",
      "op": "JUMP"
    },
    "9817": {
      "op": "JUMPDEST"
    },
    "9818": {
      "op": "DUP3"
    },
    "9819": {
      "op": "DUP2"
    },
    "9820": {
      "op": "MSTORE"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9823": {
      "op": "SWAP3"
    },
    "9824": {
      "op": "SWAP1"
    },
    "9825": {
      "op": "SWAP3"
    },
    "9826": {
      "op": "SHL"
    },
    "9827": {
      "op": "DUP5"
    },
    "9828": {
      "op": "ADD"
    },
    "9829": {
      "op": "DUP2"
    },
    "9830": {
      "op": "ADD"
    },
    "9831": {
      "op": "SWAP2"
    },
    "9832": {
      "op": "DUP2"
    },
    "9833": {
      "op": "DUP2"
    },
    "9834": {
      "op": "ADD"
    },
    "9835": {
      "op": "SWAP1"
    },
    "9836": {
      "op": "DUP7"
    },
    "9837": {
      "op": "DUP5"
    },
    "9838": {
      "op": "GT"
    },
    "9839": {
      "op": "ISZERO"
    },
    "9840": {
      "op": "PUSH2",
      "value": "0x2678"
    },
    "9843": {
      "op": "JUMPI"
    },
    "9844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9846": {
      "op": "DUP1"
    },
    "9847": {
      "op": "REVERT"
    },
    "9848": {
      "op": "JUMPDEST"
    },
    "9849": {
      "op": "DUP3"
    },
    "9850": {
      "op": "DUP7"
    },
    "9851": {
      "op": "ADD"
    },
    "9852": {
      "op": "JUMPDEST"
    },
    "9853": {
      "op": "DUP5"
    },
    "9854": {
      "op": "DUP2"
    },
    "9855": {
      "op": "LT"
    },
    "9856": {
      "op": "ISZERO"
    },
    "9857": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "9860": {
      "op": "JUMPI"
    },
    "9861": {
      "op": "DUP1"
    },
    "9862": {
      "op": "CALLDATALOAD"
    },
    "9863": {
      "op": "PUSH2",
      "value": "0x268F"
    },
    "9866": {
      "op": "DUP2"
    },
    "9867": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9870": {
      "jump": "i",
      "op": "JUMP"
    },
    "9871": {
      "op": "JUMPDEST"
    },
    "9872": {
      "op": "DUP4"
    },
    "9873": {
      "op": "MSTORE"
    },
    "9874": {
      "op": "SWAP2"
    },
    "9875": {
      "op": "DUP4"
    },
    "9876": {
      "op": "ADD"
    },
    "9877": {
      "op": "SWAP2"
    },
    "9878": {
      "op": "DUP4"
    },
    "9879": {
      "op": "ADD"
    },
    "9880": {
      "op": "PUSH2",
      "value": "0x267C"
    },
    "9883": {
      "op": "JUMP"
    },
    "9884": {
      "op": "JUMPDEST"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "op": "SWAP7"
    },
    "9887": {
      "op": "SWAP6"
    },
    "9888": {
      "op": "POP"
    },
    "9889": {
      "op": "POP"
    },
    "9890": {
      "op": "POP"
    },
    "9891": {
      "op": "POP"
    },
    "9892": {
      "op": "POP"
    },
    "9893": {
      "op": "POP"
    },
    "9894": {
      "jump": "o",
      "op": "JUMP"
    },
    "9895": {
      "op": "JUMPDEST"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9898": {
      "op": "DUP3"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9901": {
      "op": "DUP4"
    },
    "9902": {
      "op": "ADD"
    },
    "9903": {
      "op": "SLT"
    },
    "9904": {
      "op": "PUSH2",
      "value": "0x26B8"
    },
    "9907": {
      "op": "JUMPI"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9910": {
      "op": "DUP1"
    },
    "9911": {
      "op": "REVERT"
    },
    "9912": {
      "op": "JUMPDEST"
    },
    "9913": {
      "op": "DUP2"
    },
    "9914": {
      "op": "CALLDATALOAD"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9917": {
      "op": "PUSH2",
      "value": "0x26C8"
    },
    "9920": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9923": {
      "op": "DUP4"
    },
    "9924": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "9927": {
      "jump": "i",
      "op": "JUMP"
    },
    "9928": {
      "op": "JUMPDEST"
    },
    "9929": {
      "op": "DUP3"
    },
    "9930": {
      "op": "DUP2"
    },
    "9931": {
      "op": "MSTORE"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9934": {
      "op": "SWAP3"
    },
    "9935": {
      "op": "SWAP1"
    },
    "9936": {
      "op": "SWAP3"
    },
    "9937": {
      "op": "SHL"
    },
    "9938": {
      "op": "DUP5"
    },
    "9939": {
      "op": "ADD"
    },
    "9940": {
      "op": "DUP2"
    },
    "9941": {
      "op": "ADD"
    },
    "9942": {
      "op": "SWAP2"
    },
    "9943": {
      "op": "DUP2"
    },
    "9944": {
      "op": "DUP2"
    },
    "9945": {
      "op": "ADD"
    },
    "9946": {
      "op": "SWAP1"
    },
    "9947": {
      "op": "DUP7"
    },
    "9948": {
      "op": "DUP5"
    },
    "9949": {
      "op": "GT"
    },
    "9950": {
      "op": "ISZERO"
    },
    "9951": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "9954": {
      "op": "JUMPI"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9957": {
      "op": "DUP1"
    },
    "9958": {
      "op": "REVERT"
    },
    "9959": {
      "op": "JUMPDEST"
    },
    "9960": {
      "op": "DUP3"
    },
    "9961": {
      "op": "DUP7"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "JUMPDEST"
    },
    "9964": {
      "op": "DUP5"
    },
    "9965": {
      "op": "DUP2"
    },
    "9966": {
      "op": "LT"
    },
    "9967": {
      "op": "ISZERO"
    },
    "9968": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "9971": {
      "op": "JUMPI"
    },
    "9972": {
      "op": "DUP1"
    },
    "9973": {
      "op": "CALLDATALOAD"
    },
    "9974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9980": {
      "op": "SHL"
    },
    "9981": {
      "op": "SUB"
    },
    "9982": {
      "op": "DUP2"
    },
    "9983": {
      "op": "AND"
    },
    "9984": {
      "op": "DUP2"
    },
    "9985": {
      "op": "EQ"
    },
    "9986": {
      "op": "PUSH2",
      "value": "0x270B"
    },
    "9989": {
      "op": "JUMPI"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "DUP1"
    },
    "9993": {
      "op": "DUP2"
    },
    "9994": {
      "op": "REVERT"
    },
    "9995": {
      "op": "JUMPDEST"
    },
    "9996": {
      "op": "DUP4"
    },
    "9997": {
      "op": "MSTORE"
    },
    "9998": {
      "op": "SWAP2"
    },
    "9999": {
      "op": "DUP4"
    },
    "10000": {
      "op": "ADD"
    },
    "10001": {
      "op": "SWAP2"
    },
    "10002": {
      "op": "DUP4"
    },
    "10003": {
      "op": "ADD"
    },
    "10004": {
      "op": "PUSH2",
      "value": "0x26EB"
    },
    "10007": {
      "op": "JUMP"
    },
    "10008": {
      "op": "JUMPDEST"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10014": {
      "op": "DUP4"
    },
    "10015": {
      "op": "ADD"
    },
    "10016": {
      "op": "SLT"
    },
    "10017": {
      "op": "PUSH2",
      "value": "0x2729"
    },
    "10020": {
      "op": "JUMPI"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10023": {
      "op": "DUP1"
    },
    "10024": {
      "op": "REVERT"
    },
    "10025": {
      "op": "JUMPDEST"
    },
    "10026": {
      "op": "DUP2"
    },
    "10027": {
      "op": "CALLDATALOAD"
    },
    "10028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10030": {
      "op": "PUSH2",
      "value": "0x2739"
    },
    "10033": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "10036": {
      "op": "DUP4"
    },
    "10037": {
      "op": "PUSH2",
      "value": "0x24A3"
    },
    "10040": {
      "jump": "i",
      "op": "JUMP"
    },
    "10041": {
      "op": "JUMPDEST"
    },
    "10042": {
      "op": "DUP3"
    },
    "10043": {
      "op": "DUP2"
    },
    "10044": {
      "op": "MSTORE"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10047": {
      "op": "SWAP3"
    },
    "10048": {
      "op": "SWAP1"
    },
    "10049": {
      "op": "SWAP3"
    },
    "10050": {
      "op": "SHL"
    },
    "10051": {
      "op": "DUP5"
    },
    "10052": {
      "op": "ADD"
    },
    "10053": {
      "op": "DUP2"
    },
    "10054": {
      "op": "ADD"
    },
    "10055": {
      "op": "SWAP2"
    },
    "10056": {
      "op": "DUP2"
    },
    "10057": {
      "op": "DUP2"
    },
    "10058": {
      "op": "ADD"
    },
    "10059": {
      "op": "SWAP1"
    },
    "10060": {
      "op": "DUP7"
    },
    "10061": {
      "op": "DUP5"
    },
    "10062": {
      "op": "GT"
    },
    "10063": {
      "op": "ISZERO"
    },
    "10064": {
      "op": "PUSH2",
      "value": "0x2758"
    },
    "10067": {
      "op": "JUMPI"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10070": {
      "op": "DUP1"
    },
    "10071": {
      "op": "REVERT"
    },
    "10072": {
      "op": "JUMPDEST"
    },
    "10073": {
      "op": "DUP3"
    },
    "10074": {
      "op": "DUP7"
    },
    "10075": {
      "op": "ADD"
    },
    "10076": {
      "op": "JUMPDEST"
    },
    "10077": {
      "op": "DUP5"
    },
    "10078": {
      "op": "DUP2"
    },
    "10079": {
      "op": "LT"
    },
    "10080": {
      "op": "ISZERO"
    },
    "10081": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "10084": {
      "op": "JUMPI"
    },
    "10085": {
      "op": "DUP1"
    },
    "10086": {
      "op": "CALLDATALOAD"
    },
    "10087": {
      "op": "DUP4"
    },
    "10088": {
      "op": "MSTORE"
    },
    "10089": {
      "op": "SWAP2"
    },
    "10090": {
      "op": "DUP4"
    },
    "10091": {
      "op": "ADD"
    },
    "10092": {
      "op": "SWAP2"
    },
    "10093": {
      "op": "DUP4"
    },
    "10094": {
      "op": "ADD"
    },
    "10095": {
      "op": "PUSH2",
      "value": "0x275C"
    },
    "10098": {
      "op": "JUMP"
    },
    "10099": {
      "op": "JUMPDEST"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10102": {
      "op": "DUP1"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10105": {
      "op": "DUP1"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10108": {
      "op": "DUP1"
    },
    "10109": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10112": {
      "op": "DUP8"
    },
    "10113": {
      "op": "DUP10"
    },
    "10114": {
      "op": "SUB"
    },
    "10115": {
      "op": "SLT"
    },
    "10116": {
      "op": "ISZERO"
    },
    "10117": {
      "op": "PUSH2",
      "value": "0x278D"
    },
    "10120": {
      "op": "JUMPI"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10123": {
      "op": "DUP1"
    },
    "10124": {
      "op": "REVERT"
    },
    "10125": {
      "op": "JUMPDEST"
    },
    "10126": {
      "op": "DUP7"
    },
    "10127": {
      "op": "CALLDATALOAD"
    },
    "10128": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10137": {
      "op": "DUP1"
    },
    "10138": {
      "op": "DUP3"
    },
    "10139": {
      "op": "GT"
    },
    "10140": {
      "op": "ISZERO"
    },
    "10141": {
      "op": "PUSH2",
      "value": "0x27A5"
    },
    "10144": {
      "op": "JUMPI"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10147": {
      "op": "DUP1"
    },
    "10148": {
      "op": "REVERT"
    },
    "10149": {
      "op": "JUMPDEST"
    },
    "10150": {
      "op": "PUSH2",
      "value": "0x27B1"
    },
    "10153": {
      "op": "DUP11"
    },
    "10154": {
      "op": "DUP4"
    },
    "10155": {
      "op": "DUP12"
    },
    "10156": {
      "op": "ADD"
    },
    "10157": {
      "op": "PUSH2",
      "value": "0x24C7"
    },
    "10160": {
      "jump": "i",
      "op": "JUMP"
    },
    "10161": {
      "op": "JUMPDEST"
    },
    "10162": {
      "op": "SWAP8"
    },
    "10163": {
      "op": "POP"
    },
    "10164": {
      "op": "PUSH2",
      "value": "0x27C0"
    },
    "10167": {
      "op": "DUP11"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10170": {
      "op": "DUP12"
    },
    "10171": {
      "op": "ADD"
    },
    "10172": {
      "op": "PUSH2",
      "value": "0x25C9"
    },
    "10175": {
      "jump": "i",
      "op": "JUMP"
    },
    "10176": {
      "op": "JUMPDEST"
    },
    "10177": {
      "op": "SWAP7"
    },
    "10178": {
      "op": "POP"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10181": {
      "op": "DUP10"
    },
    "10182": {
      "op": "ADD"
    },
    "10183": {
      "op": "CALLDATALOAD"
    },
    "10184": {
      "op": "SWAP2"
    },
    "10185": {
      "op": "POP"
    },
    "10186": {
      "op": "DUP1"
    },
    "10187": {
      "op": "DUP3"
    },
    "10188": {
      "op": "GT"
    },
    "10189": {
      "op": "ISZERO"
    },
    "10190": {
      "op": "PUSH2",
      "value": "0x27D6"
    },
    "10193": {
      "op": "JUMPI"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10196": {
      "op": "DUP1"
    },
    "10197": {
      "op": "REVERT"
    },
    "10198": {
      "op": "JUMPDEST"
    },
    "10199": {
      "op": "PUSH2",
      "value": "0x27E2"
    },
    "10202": {
      "op": "DUP11"
    },
    "10203": {
      "op": "DUP4"
    },
    "10204": {
      "op": "DUP12"
    },
    "10205": {
      "op": "ADD"
    },
    "10206": {
      "op": "PUSH2",
      "value": "0x2638"
    },
    "10209": {
      "jump": "i",
      "op": "JUMP"
    },
    "10210": {
      "op": "JUMPDEST"
    },
    "10211": {
      "op": "SWAP6"
    },
    "10212": {
      "op": "POP"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10215": {
      "op": "DUP10"
    },
    "10216": {
      "op": "ADD"
    },
    "10217": {
      "op": "CALLDATALOAD"
    },
    "10218": {
      "op": "SWAP2"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "DUP1"
    },
    "10221": {
      "op": "DUP3"
    },
    "10222": {
      "op": "GT"
    },
    "10223": {
      "op": "ISZERO"
    },
    "10224": {
      "op": "PUSH2",
      "value": "0x27F8"
    },
    "10227": {
      "op": "JUMPI"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10230": {
      "op": "DUP1"
    },
    "10231": {
      "op": "REVERT"
    },
    "10232": {
      "op": "JUMPDEST"
    },
    "10233": {
      "op": "PUSH2",
      "value": "0x2804"
    },
    "10236": {
      "op": "DUP11"
    },
    "10237": {
      "op": "DUP4"
    },
    "10238": {
      "op": "DUP12"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "op": "PUSH2",
      "value": "0x26A7"
    },
    "10243": {
      "jump": "i",
      "op": "JUMP"
    },
    "10244": {
      "op": "JUMPDEST"
    },
    "10245": {
      "op": "SWAP5"
    },
    "10246": {
      "op": "POP"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10249": {
      "op": "DUP10"
    },
    "10250": {
      "op": "ADD"
    },
    "10251": {
      "op": "CALLDATALOAD"
    },
    "10252": {
      "op": "SWAP2"
    },
    "10253": {
      "op": "POP"
    },
    "10254": {
      "op": "DUP1"
    },
    "10255": {
      "op": "DUP3"
    },
    "10256": {
      "op": "GT"
    },
    "10257": {
      "op": "ISZERO"
    },
    "10258": {
      "op": "PUSH2",
      "value": "0x281A"
    },
    "10261": {
      "op": "JUMPI"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10264": {
      "op": "DUP1"
    },
    "10265": {
      "op": "REVERT"
    },
    "10266": {
      "op": "JUMPDEST"
    },
    "10267": {
      "op": "PUSH2",
      "value": "0x2826"
    },
    "10270": {
      "op": "DUP11"
    },
    "10271": {
      "op": "DUP4"
    },
    "10272": {
      "op": "DUP12"
    },
    "10273": {
      "op": "ADD"
    },
    "10274": {
      "op": "PUSH2",
      "value": "0x2638"
    },
    "10277": {
      "jump": "i",
      "op": "JUMP"
    },
    "10278": {
      "op": "JUMPDEST"
    },
    "10279": {
      "op": "SWAP4"
    },
    "10280": {
      "op": "POP"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10283": {
      "op": "DUP10"
    },
    "10284": {
      "op": "ADD"
    },
    "10285": {
      "op": "CALLDATALOAD"
    },
    "10286": {
      "op": "SWAP2"
    },
    "10287": {
      "op": "POP"
    },
    "10288": {
      "op": "DUP1"
    },
    "10289": {
      "op": "DUP3"
    },
    "10290": {
      "op": "GT"
    },
    "10291": {
      "op": "ISZERO"
    },
    "10292": {
      "op": "PUSH2",
      "value": "0x283C"
    },
    "10295": {
      "op": "JUMPI"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10298": {
      "op": "DUP1"
    },
    "10299": {
      "op": "REVERT"
    },
    "10300": {
      "op": "JUMPDEST"
    },
    "10301": {
      "op": "POP"
    },
    "10302": {
      "op": "PUSH2",
      "value": "0x2849"
    },
    "10305": {
      "op": "DUP10"
    },
    "10306": {
      "op": "DUP3"
    },
    "10307": {
      "op": "DUP11"
    },
    "10308": {
      "op": "ADD"
    },
    "10309": {
      "op": "PUSH2",
      "value": "0x2718"
    },
    "10312": {
      "jump": "i",
      "op": "JUMP"
    },
    "10313": {
      "op": "JUMPDEST"
    },
    "10314": {
      "op": "SWAP2"
    },
    "10315": {
      "op": "POP"
    },
    "10316": {
      "op": "POP"
    },
    "10317": {
      "op": "SWAP3"
    },
    "10318": {
      "op": "SWAP6"
    },
    "10319": {
      "op": "POP"
    },
    "10320": {
      "op": "SWAP3"
    },
    "10321": {
      "op": "SWAP6"
    },
    "10322": {
      "op": "POP"
    },
    "10323": {
      "op": "SWAP3"
    },
    "10324": {
      "op": "SWAP6"
    },
    "10325": {
      "jump": "o",
      "op": "JUMP"
    },
    "10326": {
      "op": "JUMPDEST"
    },
    "10327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10329": {
      "op": "DUP1"
    },
    "10330": {
      "op": "DUP3"
    },
    "10331": {
      "op": "MSTORE"
    },
    "10332": {
      "op": "DUP3"
    },
    "10333": {
      "op": "MLOAD"
    },
    "10334": {
      "op": "DUP3"
    },
    "10335": {
      "op": "DUP3"
    },
    "10336": {
      "op": "ADD"
    },
    "10337": {
      "op": "DUP2"
    },
    "10338": {
      "op": "SWAP1"
    },
    "10339": {
      "op": "MSTORE"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10342": {
      "op": "SWAP2"
    },
    "10343": {
      "op": "SWAP1"
    },
    "10344": {
      "op": "DUP5"
    },
    "10345": {
      "op": "DUP3"
    },
    "10346": {
      "op": "ADD"
    },
    "10347": {
      "op": "SWAP1"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10350": {
      "op": "DUP6"
    },
    "10351": {
      "op": "ADD"
    },
    "10352": {
      "op": "SWAP1"
    },
    "10353": {
      "op": "DUP5"
    },
    "10354": {
      "op": "JUMPDEST"
    },
    "10355": {
      "op": "DUP2"
    },
    "10356": {
      "op": "DUP2"
    },
    "10357": {
      "op": "LT"
    },
    "10358": {
      "op": "ISZERO"
    },
    "10359": {
      "op": "PUSH2",
      "value": "0x2890"
    },
    "10362": {
      "op": "JUMPI"
    },
    "10363": {
      "op": "DUP4"
    },
    "10364": {
      "op": "MLOAD"
    },
    "10365": {
      "op": "ISZERO"
    },
    "10366": {
      "op": "ISZERO"
    },
    "10367": {
      "op": "DUP4"
    },
    "10368": {
      "op": "MSTORE"
    },
    "10369": {
      "op": "SWAP3"
    },
    "10370": {
      "op": "DUP5"
    },
    "10371": {
      "op": "ADD"
    },
    "10372": {
      "op": "SWAP3"
    },
    "10373": {
      "op": "SWAP2"
    },
    "10374": {
      "op": "DUP5"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "SWAP2"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10379": {
      "op": "ADD"
    },
    "10380": {
      "op": "PUSH2",
      "value": "0x2872"
    },
    "10383": {
      "op": "JUMP"
    },
    "10384": {
      "op": "JUMPDEST"
    },
    "10385": {
      "op": "POP"
    },
    "10386": {
      "op": "SWAP1"
    },
    "10387": {
      "op": "SWAP7"
    },
    "10388": {
      "op": "SWAP6"
    },
    "10389": {
      "op": "POP"
    },
    "10390": {
      "op": "POP"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "op": "POP"
    },
    "10393": {
      "op": "POP"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "jump": "o",
      "op": "JUMP"
    },
    "10396": {
      "op": "JUMPDEST"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10399": {
      "op": "DUP2"
    },
    "10400": {
      "op": "MLOAD"
    },
    "10401": {
      "op": "DUP1"
    },
    "10402": {
      "op": "DUP5"
    },
    "10403": {
      "op": "MSTORE"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10406": {
      "op": "DUP1"
    },
    "10407": {
      "op": "DUP6"
    },
    "10408": {
      "op": "ADD"
    },
    "10409": {
      "op": "SWAP5"
    },
    "10410": {
      "op": "POP"
    },
    "10411": {
      "op": "DUP1"
    },
    "10412": {
      "op": "DUP5"
    },
    "10413": {
      "op": "ADD"
    },
    "10414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10416": {
      "op": "JUMPDEST"
    },
    "10417": {
      "op": "DUP4"
    },
    "10418": {
      "op": "DUP2"
    },
    "10419": {
      "op": "LT"
    },
    "10420": {
      "op": "ISZERO"
    },
    "10421": {
      "op": "PUSH2",
      "value": "0x28CC"
    },
    "10424": {
      "op": "JUMPI"
    },
    "10425": {
      "op": "DUP2"
    },
    "10426": {
      "op": "MLOAD"
    },
    "10427": {
      "op": "DUP8"
    },
    "10428": {
      "op": "MSTORE"
    },
    "10429": {
      "op": "SWAP6"
    },
    "10430": {
      "op": "DUP3"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "SWAP6"
    },
    "10433": {
      "op": "SWAP1"
    },
    "10434": {
      "op": "DUP3"
    },
    "10435": {
      "op": "ADD"
    },
    "10436": {
      "op": "SWAP1"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10439": {
      "op": "ADD"
    },
    "10440": {
      "op": "PUSH2",
      "value": "0x28B0"
    },
    "10443": {
      "op": "JUMP"
    },
    "10444": {
      "op": "JUMPDEST"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "SWAP5"
    },
    "10447": {
      "op": "SWAP6"
    },
    "10448": {
      "op": "SWAP5"
    },
    "10449": {
      "op": "POP"
    },
    "10450": {
      "op": "POP"
    },
    "10451": {
      "op": "POP"
    },
    "10452": {
      "op": "POP"
    },
    "10453": {
      "op": "POP"
    },
    "10454": {
      "jump": "o",
      "op": "JUMP"
    },
    "10455": {
      "op": "JUMPDEST"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10458": {
      "op": "DUP2"
    },
    "10459": {
      "op": "MSTORE"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10462": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10467": {
      "op": "DUP4"
    },
    "10468": {
      "op": "ADD"
    },
    "10469": {
      "op": "DUP5"
    },
    "10470": {
      "op": "PUSH2",
      "value": "0x289C"
    },
    "10473": {
      "jump": "i",
      "op": "JUMP"
    },
    "10474": {
      "op": "JUMPDEST"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10477": {
      "op": "DUP2"
    },
    "10478": {
      "op": "AND"
    },
    "10479": {
      "op": "DUP2"
    },
    "10480": {
      "op": "EQ"
    },
    "10481": {
      "op": "PUSH2",
      "value": "0xA1F"
    },
    "10484": {
      "op": "JUMPI"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10487": {
      "op": "DUP1"
    },
    "10488": {
      "op": "REVERT"
    },
    "10489": {
      "op": "JUMPDEST"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10492": {
      "op": "DUP1"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10495": {
      "op": "DUP1"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10498": {
      "op": "DUP1"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10503": {
      "op": "DUP9"
    },
    "10504": {
      "op": "DUP11"
    },
    "10505": {
      "op": "SUB"
    },
    "10506": {
      "op": "SLT"
    },
    "10507": {
      "op": "ISZERO"
    },
    "10508": {
      "op": "PUSH2",
      "value": "0x2914"
    },
    "10511": {
      "op": "JUMPI"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10514": {
      "op": "DUP1"
    },
    "10515": {
      "op": "REVERT"
    },
    "10516": {
      "op": "JUMPDEST"
    },
    "10517": {
      "op": "DUP8"
    },
    "10518": {
      "op": "CALLDATALOAD"
    },
    "10519": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10522": {
      "op": "DUP2"
    },
    "10523": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "10526": {
      "jump": "i",
      "op": "JUMP"
    },
    "10527": {
      "op": "JUMPDEST"
    },
    "10528": {
      "op": "SWAP7"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10532": {
      "op": "DUP9"
    },
    "10533": {
      "op": "ADD"
    },
    "10534": {
      "op": "CALLDATALOAD"
    },
    "10535": {
      "op": "PUSH2",
      "value": "0x292F"
    },
    "10538": {
      "op": "DUP2"
    },
    "10539": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "10542": {
      "jump": "i",
      "op": "JUMP"
    },
    "10543": {
      "op": "JUMPDEST"
    },
    "10544": {
      "op": "SWAP6"
    },
    "10545": {
      "op": "POP"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10548": {
      "op": "DUP9"
    },
    "10549": {
      "op": "ADD"
    },
    "10550": {
      "op": "CALLDATALOAD"
    },
    "10551": {
      "op": "SWAP5"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10555": {
      "op": "DUP9"
    },
    "10556": {
      "op": "ADD"
    },
    "10557": {
      "op": "CALLDATALOAD"
    },
    "10558": {
      "op": "SWAP4"
    },
    "10559": {
      "op": "POP"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10562": {
      "op": "DUP9"
    },
    "10563": {
      "op": "ADD"
    },
    "10564": {
      "op": "CALLDATALOAD"
    },
    "10565": {
      "op": "PUSH2",
      "value": "0x294D"
    },
    "10568": {
      "op": "DUP2"
    },
    "10569": {
      "op": "PUSH2",
      "value": "0x28EA"
    },
    "10572": {
      "jump": "i",
      "op": "JUMP"
    },
    "10573": {
      "op": "JUMPDEST"
    },
    "10574": {
      "op": "SWAP7"
    },
    "10575": {
      "op": "SWAP10"
    },
    "10576": {
      "op": "SWAP6"
    },
    "10577": {
      "op": "SWAP9"
    },
    "10578": {
      "op": "POP"
    },
    "10579": {
      "op": "SWAP4"
    },
    "10580": {
      "op": "SWAP7"
    },
    "10581": {
      "op": "SWAP3"
    },
    "10582": {
      "op": "SWAP6"
    },
    "10583": {
      "op": "SWAP5"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10586": {
      "op": "DUP5"
    },
    "10587": {
      "op": "ADD"
    },
    "10588": {
      "op": "CALLDATALOAD"
    },
    "10589": {
      "op": "SWAP5"
    },
    "10590": {
      "op": "POP"
    },
    "10591": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10593": {
      "op": "SWAP1"
    },
    "10594": {
      "op": "SWAP4"
    },
    "10595": {
      "op": "ADD"
    },
    "10596": {
      "op": "CALLDATALOAD"
    },
    "10597": {
      "op": "SWAP3"
    },
    "10598": {
      "op": "SWAP2"
    },
    "10599": {
      "op": "POP"
    },
    "10600": {
      "op": "POP"
    },
    "10601": {
      "jump": "o",
      "op": "JUMP"
    },
    "10602": {
      "op": "JUMPDEST"
    },
    "10603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10605": {
      "op": "DUP1"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10608": {
      "op": "DUP4"
    },
    "10609": {
      "op": "DUP6"
    },
    "10610": {
      "op": "SUB"
    },
    "10611": {
      "op": "SLT"
    },
    "10612": {
      "op": "ISZERO"
    },
    "10613": {
      "op": "PUSH2",
      "value": "0x297D"
    },
    "10616": {
      "op": "JUMPI"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10619": {
      "op": "DUP1"
    },
    "10620": {
      "op": "REVERT"
    },
    "10621": {
      "op": "JUMPDEST"
    },
    "10622": {
      "op": "DUP3"
    },
    "10623": {
      "op": "CALLDATALOAD"
    },
    "10624": {
      "op": "PUSH2",
      "value": "0x2988"
    },
    "10627": {
      "op": "DUP2"
    },
    "10628": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "10631": {
      "jump": "i",
      "op": "JUMP"
    },
    "10632": {
      "op": "JUMPDEST"
    },
    "10633": {
      "op": "SWAP2"
    },
    "10634": {
      "op": "POP"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10637": {
      "op": "DUP4"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "CALLDATALOAD"
    },
    "10640": {
      "op": "PUSH2",
      "value": "0x2998"
    },
    "10643": {
      "op": "DUP2"
    },
    "10644": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "10647": {
      "jump": "i",
      "op": "JUMP"
    },
    "10648": {
      "op": "JUMPDEST"
    },
    "10649": {
      "op": "DUP1"
    },
    "10650": {
      "op": "SWAP2"
    },
    "10651": {
      "op": "POP"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "op": "SWAP3"
    },
    "10654": {
      "op": "POP"
    },
    "10655": {
      "op": "SWAP3"
    },
    "10656": {
      "op": "SWAP1"
    },
    "10657": {
      "op": "POP"
    },
    "10658": {
      "jump": "o",
      "op": "JUMP"
    },
    "10659": {
      "op": "JUMPDEST"
    },
    "10660": {
      "op": "DUP1"
    },
    "10661": {
      "op": "ISZERO"
    },
    "10662": {
      "op": "ISZERO"
    },
    "10663": {
      "op": "DUP2"
    },
    "10664": {
      "op": "EQ"
    },
    "10665": {
      "op": "PUSH2",
      "value": "0xA1F"
    },
    "10668": {
      "op": "JUMPI"
    },
    "10669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10671": {
      "op": "DUP1"
    },
    "10672": {
      "op": "REVERT"
    },
    "10673": {
      "op": "JUMPDEST"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10676": {
      "op": "DUP1"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10679": {
      "op": "DUP4"
    },
    "10680": {
      "op": "DUP6"
    },
    "10681": {
      "op": "SUB"
    },
    "10682": {
      "op": "SLT"
    },
    "10683": {
      "op": "ISZERO"
    },
    "10684": {
      "op": "PUSH2",
      "value": "0x29C4"
    },
    "10687": {
      "op": "JUMPI"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10690": {
      "op": "DUP1"
    },
    "10691": {
      "op": "REVERT"
    },
    "10692": {
      "op": "JUMPDEST"
    },
    "10693": {
      "op": "DUP3"
    },
    "10694": {
      "op": "CALLDATALOAD"
    },
    "10695": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "10698": {
      "op": "DUP2"
    },
    "10699": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "10702": {
      "jump": "i",
      "op": "JUMP"
    },
    "10703": {
      "op": "JUMPDEST"
    },
    "10704": {
      "op": "SWAP2"
    },
    "10705": {
      "op": "POP"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10708": {
      "op": "DUP4"
    },
    "10709": {
      "op": "ADD"
    },
    "10710": {
      "op": "CALLDATALOAD"
    },
    "10711": {
      "op": "PUSH2",
      "value": "0x2998"
    },
    "10714": {
      "op": "DUP2"
    },
    "10715": {
      "op": "PUSH2",
      "value": "0x29A3"
    },
    "10718": {
      "jump": "i",
      "op": "JUMP"
    },
    "10719": {
      "op": "JUMPDEST"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10722": {
      "op": "DUP2"
    },
    "10723": {
      "op": "DUP2"
    },
    "10724": {
      "op": "SHR"
    },
    "10725": {
      "op": "SWAP1"
    },
    "10726": {
      "op": "DUP3"
    },
    "10727": {
      "op": "AND"
    },
    "10728": {
      "op": "DUP1"
    },
    "10729": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10732": {
      "op": "JUMPI"
    },
    "10733": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10735": {
      "op": "DUP3"
    },
    "10736": {
      "op": "AND"
    },
    "10737": {
      "op": "SWAP2"
    },
    "10738": {
      "op": "POP"
    },
    "10739": {
      "op": "JUMPDEST"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10742": {
      "op": "DUP3"
    },
    "10743": {
      "op": "LT"
    },
    "10744": {
      "op": "DUP2"
    },
    "10745": {
      "op": "EQ"
    },
    "10746": {
      "op": "ISZERO"
    },
    "10747": {
      "op": "PUSH2",
      "value": "0x2A14"
    },
    "10750": {
      "op": "JUMPI"
    },
    "10751": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10758": {
      "op": "SHL"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10761": {
      "op": "MSTORE"
    },
    "10762": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10766": {
      "op": "MSTORE"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10771": {
      "op": "REVERT"
    },
    "10772": {
      "op": "JUMPDEST"
    },
    "10773": {
      "op": "POP"
    },
    "10774": {
      "op": "SWAP2"
    },
    "10775": {
      "op": "SWAP1"
    },
    "10776": {
      "op": "POP"
    },
    "10777": {
      "jump": "o",
      "op": "JUMP"
    },
    "10778": {
      "op": "JUMPDEST"
    },
    "10779": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10786": {
      "op": "SHL"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10789": {
      "op": "MSTORE"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10794": {
      "op": "MSTORE"
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10799": {
      "op": "REVERT"
    },
    "10800": {
      "op": "JUMPDEST"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10803": {
      "op": "DUP3"
    },
    "10804": {
      "op": "DUP3"
    },
    "10805": {
      "op": "LT"
    },
    "10806": {
      "op": "ISZERO"
    },
    "10807": {
      "op": "PUSH2",
      "value": "0x2A42"
    },
    "10810": {
      "op": "JUMPI"
    },
    "10811": {
      "op": "PUSH2",
      "value": "0x2A42"
    },
    "10814": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "10817": {
      "jump": "i",
      "op": "JUMP"
    },
    "10818": {
      "op": "JUMPDEST"
    },
    "10819": {
      "op": "POP"
    },
    "10820": {
      "op": "SUB"
    },
    "10821": {
      "op": "SWAP1"
    },
    "10822": {
      "jump": "o",
      "op": "JUMP"
    },
    "10823": {
      "op": "JUMPDEST"
    },
    "10824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10826": {
      "op": "DUP2"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10829": {
      "op": "NOT"
    },
    "10830": {
      "op": "DIV"
    },
    "10831": {
      "op": "DUP4"
    },
    "10832": {
      "op": "GT"
    },
    "10833": {
      "op": "DUP3"
    },
    "10834": {
      "op": "ISZERO"
    },
    "10835": {
      "op": "ISZERO"
    },
    "10836": {
      "op": "AND"
    },
    "10837": {
      "op": "ISZERO"
    },
    "10838": {
      "op": "PUSH2",
      "value": "0x2A61"
    },
    "10841": {
      "op": "JUMPI"
    },
    "10842": {
      "op": "PUSH2",
      "value": "0x2A61"
    },
    "10845": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "10848": {
      "jump": "i",
      "op": "JUMP"
    },
    "10849": {
      "op": "JUMPDEST"
    },
    "10850": {
      "op": "POP"
    },
    "10851": {
      "op": "MUL"
    },
    "10852": {
      "op": "SWAP1"
    },
    "10853": {
      "jump": "o",
      "op": "JUMP"
    },
    "10854": {
      "op": "JUMPDEST"
    },
    "10855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10857": {
      "op": "DUP3"
    },
    "10858": {
      "op": "PUSH2",
      "value": "0x2A83"
    },
    "10861": {
      "op": "JUMPI"
    },
    "10862": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10869": {
      "op": "SHL"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10872": {
      "op": "MSTORE"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10875": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10877": {
      "op": "MSTORE"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10882": {
      "op": "REVERT"
    },
    "10883": {
      "op": "JUMPDEST"
    },
    "10884": {
      "op": "POP"
    },
    "10885": {
      "op": "DIV"
    },
    "10886": {
      "op": "SWAP1"
    },
    "10887": {
      "jump": "o",
      "op": "JUMP"
    },
    "10888": {
      "op": "JUMPDEST"
    },
    "10889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10891": {
      "op": "DUP3"
    },
    "10892": {
      "op": "NOT"
    },
    "10893": {
      "op": "DUP3"
    },
    "10894": {
      "op": "GT"
    },
    "10895": {
      "op": "ISZERO"
    },
    "10896": {
      "op": "PUSH2",
      "value": "0x2A9B"
    },
    "10899": {
      "op": "JUMPI"
    },
    "10900": {
      "op": "PUSH2",
      "value": "0x2A9B"
    },
    "10903": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "10906": {
      "jump": "i",
      "op": "JUMP"
    },
    "10907": {
      "op": "JUMPDEST"
    },
    "10908": {
      "op": "POP"
    },
    "10909": {
      "op": "ADD"
    },
    "10910": {
      "op": "SWAP1"
    },
    "10911": {
      "jump": "o",
      "op": "JUMP"
    },
    "10912": {
      "op": "JUMPDEST"
    },
    "10913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10917": {
      "op": "DUP3"
    },
    "10918": {
      "op": "DUP5"
    },
    "10919": {
      "op": "SUB"
    },
    "10920": {
      "op": "SLT"
    },
    "10921": {
      "op": "ISZERO"
    },
    "10922": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10925": {
      "op": "JUMPI"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10928": {
      "op": "DUP1"
    },
    "10929": {
      "op": "REVERT"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "DUP2"
    },
    "10932": {
      "op": "MLOAD"
    },
    "10933": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "10936": {
      "op": "DUP2"
    },
    "10937": {
      "op": "PUSH2",
      "value": "0x29A3"
    },
    "10940": {
      "jump": "i",
      "op": "JUMP"
    },
    "10941": {
      "op": "JUMPDEST"
    },
    "10942": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10949": {
      "op": "SHL"
    },
    "10950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10952": {
      "op": "MSTORE"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10955": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10957": {
      "op": "MSTORE"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10962": {
      "op": "REVERT"
    },
    "10963": {
      "op": "JUMPDEST"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10968": {
      "op": "DUP3"
    },
    "10969": {
      "op": "DUP5"
    },
    "10970": {
      "op": "SUB"
    },
    "10971": {
      "op": "SLT"
    },
    "10972": {
      "op": "ISZERO"
    },
    "10973": {
      "op": "PUSH2",
      "value": "0x2AE5"
    },
    "10976": {
      "op": "JUMPI"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10979": {
      "op": "DUP1"
    },
    "10980": {
      "op": "REVERT"
    },
    "10981": {
      "op": "JUMPDEST"
    },
    "10982": {
      "op": "DUP2"
    },
    "10983": {
      "op": "MLOAD"
    },
    "10984": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "10987": {
      "op": "DUP2"
    },
    "10988": {
      "op": "PUSH2",
      "value": "0x28EA"
    },
    "10991": {
      "jump": "i",
      "op": "JUMP"
    },
    "10992": {
      "op": "JUMPDEST"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10995": {
      "op": "DUP2"
    },
    "10996": {
      "op": "DUP2"
    },
    "10997": {
      "op": "JUMPDEST"
    },
    "10998": {
      "op": "DUP1"
    },
    "10999": {
      "op": "DUP6"
    },
    "11000": {
      "op": "GT"
    },
    "11001": {
      "op": "ISZERO"
    },
    "11002": {
      "op": "PUSH2",
      "value": "0x2B2B"
    },
    "11005": {
      "op": "JUMPI"
    },
    "11006": {
      "op": "DUP2"
    },
    "11007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11009": {
      "op": "NOT"
    },
    "11010": {
      "op": "DIV"
    },
    "11011": {
      "op": "DUP3"
    },
    "11012": {
      "op": "GT"
    },
    "11013": {
      "op": "ISZERO"
    },
    "11014": {
      "op": "PUSH2",
      "value": "0x2B11"
    },
    "11017": {
      "op": "JUMPI"
    },
    "11018": {
      "op": "PUSH2",
      "value": "0x2B11"
    },
    "11021": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11024": {
      "jump": "i",
      "op": "JUMP"
    },
    "11025": {
      "op": "JUMPDEST"
    },
    "11026": {
      "op": "DUP1"
    },
    "11027": {
      "op": "DUP6"
    },
    "11028": {
      "op": "AND"
    },
    "11029": {
      "op": "ISZERO"
    },
    "11030": {
      "op": "PUSH2",
      "value": "0x2B1E"
    },
    "11033": {
      "op": "JUMPI"
    },
    "11034": {
      "op": "SWAP2"
    },
    "11035": {
      "op": "DUP2"
    },
    "11036": {
      "op": "MUL"
    },
    "11037": {
      "op": "SWAP2"
    },
    "11038": {
      "op": "JUMPDEST"
    },
    "11039": {
      "op": "SWAP4"
    },
    "11040": {
      "op": "DUP5"
    },
    "11041": {
      "op": "SHR"
    },
    "11042": {
      "op": "SWAP4"
    },
    "11043": {
      "op": "SWAP1"
    },
    "11044": {
      "op": "DUP1"
    },
    "11045": {
      "op": "MUL"
    },
    "11046": {
      "op": "SWAP1"
    },
    "11047": {
      "op": "PUSH2",
      "value": "0x2AF5"
    },
    "11050": {
      "op": "JUMP"
    },
    "11051": {
      "op": "JUMPDEST"
    },
    "11052": {
      "op": "POP"
    },
    "11053": {
      "op": "SWAP3"
    },
    "11054": {
      "op": "POP"
    },
    "11055": {
      "op": "SWAP3"
    },
    "11056": {
      "op": "SWAP1"
    },
    "11057": {
      "op": "POP"
    },
    "11058": {
      "jump": "o",
      "op": "JUMP"
    },
    "11059": {
      "op": "JUMPDEST"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11062": {
      "op": "DUP3"
    },
    "11063": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "11066": {
      "op": "JUMPI"
    },
    "11067": {
      "op": "POP"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11070": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "11073": {
      "op": "JUMP"
    },
    "11074": {
      "op": "JUMPDEST"
    },
    "11075": {
      "op": "DUP2"
    },
    "11076": {
      "op": "PUSH2",
      "value": "0x2B4F"
    },
    "11079": {
      "op": "JUMPI"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11083": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "11086": {
      "op": "JUMP"
    },
    "11087": {
      "op": "JUMPDEST"
    },
    "11088": {
      "op": "DUP2"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11091": {
      "op": "DUP2"
    },
    "11092": {
      "op": "EQ"
    },
    "11093": {
      "op": "PUSH2",
      "value": "0x2B65"
    },
    "11096": {
      "op": "JUMPI"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11099": {
      "op": "DUP2"
    },
    "11100": {
      "op": "EQ"
    },
    "11101": {
      "op": "PUSH2",
      "value": "0x2B6F"
    },
    "11104": {
      "op": "JUMPI"
    },
    "11105": {
      "op": "PUSH2",
      "value": "0x2B8B"
    },
    "11108": {
      "op": "JUMP"
    },
    "11109": {
      "op": "JUMPDEST"
    },
    "11110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11112": {
      "op": "SWAP2"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "11118": {
      "op": "JUMP"
    },
    "11119": {
      "op": "JUMPDEST"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11122": {
      "op": "DUP5"
    },
    "11123": {
      "op": "GT"
    },
    "11124": {
      "op": "ISZERO"
    },
    "11125": {
      "op": "PUSH2",
      "value": "0x2B80"
    },
    "11128": {
      "op": "JUMPI"
    },
    "11129": {
      "op": "PUSH2",
      "value": "0x2B80"
    },
    "11132": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11135": {
      "jump": "i",
      "op": "JUMP"
    },
    "11136": {
      "op": "JUMPDEST"
    },
    "11137": {
      "op": "POP"
    },
    "11138": {
      "op": "POP"
    },
    "11139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11141": {
      "op": "DUP3"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "11146": {
      "op": "JUMP"
    },
    "11147": {
      "op": "JUMPDEST"
    },
    "11148": {
      "op": "POP"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11151": {
      "op": "DUP4"
    },
    "11152": {
      "op": "LT"
    },
    "11153": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "11156": {
      "op": "DUP4"
    },
    "11157": {
      "op": "LT"
    },
    "11158": {
      "op": "AND"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "11161": {
      "op": "DUP5"
    },
    "11162": {
      "op": "LT"
    },
    "11163": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "11165": {
      "op": "DUP5"
    },
    "11166": {
      "op": "LT"
    },
    "11167": {
      "op": "AND"
    },
    "11168": {
      "op": "OR"
    },
    "11169": {
      "op": "ISZERO"
    },
    "11170": {
      "op": "PUSH2",
      "value": "0x2BAE"
    },
    "11173": {
      "op": "JUMPI"
    },
    "11174": {
      "op": "POP"
    },
    "11175": {
      "op": "DUP2"
    },
    "11176": {
      "op": "DUP2"
    },
    "11177": {
      "op": "EXP"
    },
    "11178": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "11181": {
      "op": "JUMP"
    },
    "11182": {
      "op": "JUMPDEST"
    },
    "11183": {
      "op": "PUSH2",
      "value": "0x2BB8"
    },
    "11186": {
      "op": "DUP4"
    },
    "11187": {
      "op": "DUP4"
    },
    "11188": {
      "op": "PUSH2",
      "value": "0x2AF0"
    },
    "11191": {
      "jump": "i",
      "op": "JUMP"
    },
    "11192": {
      "op": "JUMPDEST"
    },
    "11193": {
      "op": "DUP1"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11196": {
      "op": "NOT"
    },
    "11197": {
      "op": "DIV"
    },
    "11198": {
      "op": "DUP3"
    },
    "11199": {
      "op": "GT"
    },
    "11200": {
      "op": "ISZERO"
    },
    "11201": {
      "op": "PUSH2",
      "value": "0x2BCC"
    },
    "11204": {
      "op": "JUMPI"
    },
    "11205": {
      "op": "PUSH2",
      "value": "0x2BCC"
    },
    "11208": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11211": {
      "jump": "i",
      "op": "JUMP"
    },
    "11212": {
      "op": "JUMPDEST"
    },
    "11213": {
      "op": "MUL"
    },
    "11214": {
      "op": "SWAP4"
    },
    "11215": {
      "op": "SWAP3"
    },
    "11216": {
      "op": "POP"
    },
    "11217": {
      "op": "POP"
    },
    "11218": {
      "op": "POP"
    },
    "11219": {
      "jump": "o",
      "op": "JUMP"
    },
    "11220": {
      "op": "JUMPDEST"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11223": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11228": {
      "op": "DUP5"
    },
    "11229": {
      "op": "AND"
    },
    "11230": {
      "op": "DUP4"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2B33"
    },
    "11234": {
      "jump": "i",
      "op": "JUMP"
    },
    "11235": {
      "op": "JUMPDEST"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11240": {
      "op": "NOT"
    },
    "11241": {
      "op": "DUP3"
    },
    "11242": {
      "op": "EQ"
    },
    "11243": {
      "op": "ISZERO"
    },
    "11244": {
      "op": "PUSH2",
      "value": "0x2BF7"
    },
    "11247": {
      "op": "JUMPI"
    },
    "11248": {
      "op": "PUSH2",
      "value": "0x2BF7"
    },
    "11251": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11254": {
      "jump": "i",
      "op": "JUMP"
    },
    "11255": {
      "op": "JUMPDEST"
    },
    "11256": {
      "op": "POP"
    },
    "11257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11259": {
      "op": "ADD"
    },
    "11260": {
      "op": "SWAP1"
    },
    "11261": {
      "jump": "o",
      "op": "JUMP"
    },
    "11262": {
      "op": "JUMPDEST"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11265": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11270": {
      "op": "DUP1"
    },
    "11271": {
      "op": "DUP4"
    },
    "11272": {
      "op": "AND"
    },
    "11273": {
      "op": "DUP2"
    },
    "11274": {
      "op": "DUP6"
    },
    "11275": {
      "op": "AND"
    },
    "11276": {
      "op": "DUP1"
    },
    "11277": {
      "op": "DUP4"
    },
    "11278": {
      "op": "SUB"
    },
    "11279": {
      "op": "DUP3"
    },
    "11280": {
      "op": "GT"
    },
    "11281": {
      "op": "ISZERO"
    },
    "11282": {
      "op": "PUSH2",
      "value": "0x2C1D"
    },
    "11285": {
      "op": "JUMPI"
    },
    "11286": {
      "op": "PUSH2",
      "value": "0x2C1D"
    },
    "11289": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11292": {
      "jump": "i",
      "op": "JUMP"
    },
    "11293": {
      "op": "JUMPDEST"
    },
    "11294": {
      "op": "ADD"
    },
    "11295": {
      "op": "SWAP5"
    },
    "11296": {
      "op": "SWAP4"
    },
    "11297": {
      "op": "POP"
    },
    "11298": {
      "op": "POP"
    },
    "11299": {
      "op": "POP"
    },
    "11300": {
      "op": "POP"
    },
    "11301": {
      "jump": "o",
      "op": "JUMP"
    },
    "11302": {
      "op": "JUMPDEST"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11305": {
      "op": "DUP2"
    },
    "11306": {
      "op": "MLOAD"
    },
    "11307": {
      "op": "DUP1"
    },
    "11308": {
      "op": "DUP5"
    },
    "11309": {
      "op": "MSTORE"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11312": {
      "op": "DUP1"
    },
    "11313": {
      "op": "DUP6"
    },
    "11314": {
      "op": "ADD"
    },
    "11315": {
      "op": "SWAP5"
    },
    "11316": {
      "op": "POP"
    },
    "11317": {
      "op": "DUP1"
    },
    "11318": {
      "op": "DUP5"
    },
    "11319": {
      "op": "ADD"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11322": {
      "op": "JUMPDEST"
    },
    "11323": {
      "op": "DUP4"
    },
    "11324": {
      "op": "DUP2"
    },
    "11325": {
      "op": "LT"
    },
    "11326": {
      "op": "ISZERO"
    },
    "11327": {
      "op": "PUSH2",
      "value": "0x28CC"
    },
    "11330": {
      "op": "JUMPI"
    },
    "11331": {
      "op": "DUP2"
    },
    "11332": {
      "op": "MLOAD"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11339": {
      "op": "SHL"
    },
    "11340": {
      "op": "SUB"
    },
    "11341": {
      "op": "AND"
    },
    "11342": {
      "op": "DUP8"
    },
    "11343": {
      "op": "MSTORE"
    },
    "11344": {
      "op": "SWAP6"
    },
    "11345": {
      "op": "DUP3"
    },
    "11346": {
      "op": "ADD"
    },
    "11347": {
      "op": "SWAP6"
    },
    "11348": {
      "op": "SWAP1"
    },
    "11349": {
      "op": "DUP3"
    },
    "11350": {
      "op": "ADD"
    },
    "11351": {
      "op": "SWAP1"
    },
    "11352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11354": {
      "op": "ADD"
    },
    "11355": {
      "op": "PUSH2",
      "value": "0x2C3A"
    },
    "11358": {
      "op": "JUMP"
    },
    "11359": {
      "op": "JUMPDEST"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11362": {
      "op": "DUP2"
    },
    "11363": {
      "op": "MLOAD"
    },
    "11364": {
      "op": "DUP1"
    },
    "11365": {
      "op": "DUP5"
    },
    "11366": {
      "op": "MSTORE"
    },
    "11367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11369": {
      "op": "DUP1"
    },
    "11370": {
      "op": "DUP6"
    },
    "11371": {
      "op": "ADD"
    },
    "11372": {
      "op": "SWAP5"
    },
    "11373": {
      "op": "POP"
    },
    "11374": {
      "op": "DUP1"
    },
    "11375": {
      "op": "DUP5"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11379": {
      "op": "JUMPDEST"
    },
    "11380": {
      "op": "DUP4"
    },
    "11381": {
      "op": "DUP2"
    },
    "11382": {
      "op": "LT"
    },
    "11383": {
      "op": "ISZERO"
    },
    "11384": {
      "op": "PUSH2",
      "value": "0x28CC"
    },
    "11387": {
      "op": "JUMPI"
    },
    "11388": {
      "op": "DUP2"
    },
    "11389": {
      "op": "MLOAD"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11396": {
      "op": "SHL"
    },
    "11397": {
      "op": "SUB"
    },
    "11398": {
      "op": "AND"
    },
    "11399": {
      "op": "DUP8"
    },
    "11400": {
      "op": "MSTORE"
    },
    "11401": {
      "op": "SWAP6"
    },
    "11402": {
      "op": "DUP3"
    },
    "11403": {
      "op": "ADD"
    },
    "11404": {
      "op": "SWAP6"
    },
    "11405": {
      "op": "SWAP1"
    },
    "11406": {
      "op": "DUP3"
    },
    "11407": {
      "op": "ADD"
    },
    "11408": {
      "op": "SWAP1"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11411": {
      "op": "ADD"
    },
    "11412": {
      "op": "PUSH2",
      "value": "0x2C73"
    },
    "11415": {
      "op": "JUMP"
    },
    "11416": {
      "op": "JUMPDEST"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11419": {
      "op": "DUP1"
    },
    "11420": {
      "op": "DUP3"
    },
    "11421": {
      "op": "MSTORE"
    },
    "11422": {
      "op": "DUP9"
    },
    "11423": {
      "op": "MLOAD"
    },
    "11424": {
      "op": "SWAP1"
    },
    "11425": {
      "op": "DUP3"
    },
    "11426": {
      "op": "ADD"
    },
    "11427": {
      "op": "DUP2"
    },
    "11428": {
      "op": "SWAP1"
    },
    "11429": {
      "op": "MSTORE"
    },
    "11430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11432": {
      "op": "SWAP1"
    },
    "11433": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11438": {
      "op": "DUP3"
    },
    "11439": {
      "op": "SWAP1"
    },
    "11440": {
      "op": "SHL"
    },
    "11441": {
      "op": "DUP5"
    },
    "11442": {
      "op": "ADD"
    },
    "11443": {
      "op": "DUP2"
    },
    "11444": {
      "op": "ADD"
    },
    "11445": {
      "op": "SWAP2"
    },
    "11446": {
      "op": "SWAP1"
    },
    "11447": {
      "op": "DUP5"
    },
    "11448": {
      "op": "ADD"
    },
    "11449": {
      "op": "SWAP1"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11452": {
      "op": "DUP1"
    },
    "11453": {
      "op": "DUP14"
    },
    "11454": {
      "op": "ADD"
    },
    "11455": {
      "op": "DUP6"
    },
    "11456": {
      "op": "JUMPDEST"
    },
    "11457": {
      "op": "DUP4"
    },
    "11458": {
      "op": "DUP2"
    },
    "11459": {
      "op": "LT"
    },
    "11460": {
      "op": "ISZERO"
    },
    "11461": {
      "op": "PUSH2",
      "value": "0x2CEE"
    },
    "11464": {
      "op": "JUMPI"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11467": {
      "op": "NOT"
    },
    "11468": {
      "op": "DUP9"
    },
    "11469": {
      "op": "DUP8"
    },
    "11470": {
      "op": "SUB"
    },
    "11471": {
      "op": "ADD"
    },
    "11472": {
      "op": "DUP6"
    },
    "11473": {
      "op": "MSTORE"
    },
    "11474": {
      "op": "PUSH2",
      "value": "0x2CDC"
    },
    "11477": {
      "op": "DUP7"
    },
    "11478": {
      "op": "DUP4"
    },
    "11479": {
      "op": "MLOAD"
    },
    "11480": {
      "op": "PUSH2",
      "value": "0x2344"
    },
    "11483": {
      "jump": "i",
      "op": "JUMP"
    },
    "11484": {
      "op": "JUMPDEST"
    },
    "11485": {
      "op": "SWAP6"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "op": "SWAP4"
    },
    "11488": {
      "op": "DUP3"
    },
    "11489": {
      "op": "ADD"
    },
    "11490": {
      "op": "SWAP4"
    },
    "11491": {
      "op": "SWAP1"
    },
    "11492": {
      "op": "DUP3"
    },
    "11493": {
      "op": "ADD"
    },
    "11494": {
      "op": "SWAP1"
    },
    "11495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11497": {
      "op": "ADD"
    },
    "11498": {
      "op": "PUSH2",
      "value": "0x2CC0"
    },
    "11501": {
      "op": "JUMP"
    },
    "11502": {
      "op": "JUMPDEST"
    },
    "11503": {
      "op": "POP"
    },
    "11504": {
      "op": "POP"
    },
    "11505": {
      "op": "DUP6"
    },
    "11506": {
      "op": "DUP5"
    },
    "11507": {
      "op": "SUB"
    },
    "11508": {
      "op": "DUP2"
    },
    "11509": {
      "op": "DUP8"
    },
    "11510": {
      "op": "ADD"
    },
    "11511": {
      "op": "MSTORE"
    },
    "11512": {
      "op": "POP"
    },
    "11513": {
      "op": "POP"
    },
    "11514": {
      "op": "POP"
    },
    "11515": {
      "op": "PUSH2",
      "value": "0x2D04"
    },
    "11518": {
      "op": "DUP2"
    },
    "11519": {
      "op": "DUP11"
    },
    "11520": {
      "op": "PUSH2",
      "value": "0x2C26"
    },
    "11523": {
      "jump": "i",
      "op": "JUMP"
    },
    "11524": {
      "op": "JUMPDEST"
    },
    "11525": {
      "op": "SWAP1"
    },
    "11526": {
      "op": "POP"
    },
    "11527": {
      "op": "DUP3"
    },
    "11528": {
      "op": "DUP2"
    },
    "11529": {
      "op": "SUB"
    },
    "11530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11532": {
      "op": "DUP5"
    },
    "11533": {
      "op": "ADD"
    },
    "11534": {
      "op": "MSTORE"
    },
    "11535": {
      "op": "PUSH2",
      "value": "0x2D18"
    },
    "11538": {
      "op": "DUP2"
    },
    "11539": {
      "op": "DUP10"
    },
    "11540": {
      "op": "PUSH2",
      "value": "0x2C5F"
    },
    "11543": {
      "jump": "i",
      "op": "JUMP"
    },
    "11544": {
      "op": "JUMPDEST"
    },
    "11545": {
      "op": "SWAP1"
    },
    "11546": {
      "op": "POP"
    },
    "11547": {
      "op": "DUP3"
    },
    "11548": {
      "op": "DUP2"
    },
    "11549": {
      "op": "SUB"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11552": {
      "op": "DUP5"
    },
    "11553": {
      "op": "ADD"
    },
    "11554": {
      "op": "MSTORE"
    },
    "11555": {
      "op": "PUSH2",
      "value": "0x2D2C"
    },
    "11558": {
      "op": "DUP2"
    },
    "11559": {
      "op": "DUP9"
    },
    "11560": {
      "op": "PUSH2",
      "value": "0x2C26"
    },
    "11563": {
      "jump": "i",
      "op": "JUMP"
    },
    "11564": {
      "op": "JUMPDEST"
    },
    "11565": {
      "op": "SWAP1"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "op": "DUP3"
    },
    "11568": {
      "op": "DUP2"
    },
    "11569": {
      "op": "SUB"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11572": {
      "op": "DUP5"
    },
    "11573": {
      "op": "ADD"
    },
    "11574": {
      "op": "MSTORE"
    },
    "11575": {
      "op": "PUSH2",
      "value": "0x2D40"
    },
    "11578": {
      "op": "DUP2"
    },
    "11579": {
      "op": "DUP8"
    },
    "11580": {
      "op": "PUSH2",
      "value": "0x289C"
    },
    "11583": {
      "jump": "i",
      "op": "JUMP"
    },
    "11584": {
      "op": "JUMPDEST"
    },
    "11585": {
      "op": "SWAP2"
    },
    "11586": {
      "op": "POP"
    },
    "11587": {
      "op": "POP"
    },
    "11588": {
      "op": "PUSH2",
      "value": "0x2D55"
    },
    "11591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11593": {
      "op": "DUP4"
    },
    "11594": {
      "op": "ADD"
    },
    "11595": {
      "op": "DUP6"
    },
    "11596": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11601": {
      "op": "AND"
    },
    "11602": {
      "op": "SWAP1"
    },
    "11603": {
      "op": "MSTORE"
    },
    "11604": {
      "op": "JUMP"
    },
    "11605": {
      "op": "JUMPDEST"
    },
    "11606": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11611": {
      "op": "DUP4"
    },
    "11612": {
      "op": "AND"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11615": {
      "op": "DUP4"
    },
    "11616": {
      "op": "ADD"
    },
    "11617": {
      "op": "MSTORE"
    },
    "11618": {
      "op": "SWAP9"
    },
    "11619": {
      "op": "SWAP8"
    },
    "11620": {
      "op": "POP"
    },
    "11621": {
      "op": "POP"
    },
    "11622": {
      "op": "POP"
    },
    "11623": {
      "op": "POP"
    },
    "11624": {
      "op": "POP"
    },
    "11625": {
      "op": "POP"
    },
    "11626": {
      "op": "POP"
    },
    "11627": {
      "op": "POP"
    },
    "11628": {
      "jump": "o",
      "op": "JUMP"
    },
    "11629": {
      "op": "JUMPDEST"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11634": {
      "op": "DUP3"
    },
    "11635": {
      "op": "DUP5"
    },
    "11636": {
      "op": "SUB"
    },
    "11637": {
      "op": "SLT"
    },
    "11638": {
      "op": "ISZERO"
    },
    "11639": {
      "op": "PUSH2",
      "value": "0x2D7F"
    },
    "11642": {
      "op": "JUMPI"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11645": {
      "op": "DUP1"
    },
    "11646": {
      "op": "REVERT"
    },
    "11647": {
      "op": "JUMPDEST"
    },
    "11648": {
      "op": "POP"
    },
    "11649": {
      "op": "MLOAD"
    },
    "11650": {
      "op": "SWAP2"
    },
    "11651": {
      "op": "SWAP1"
    },
    "11652": {
      "op": "POP"
    },
    "11653": {
      "jump": "o",
      "op": "JUMP"
    },
    "11654": {
      "op": "JUMPDEST"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11657": {
      "op": "DUP1"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11660": {
      "op": "SHL"
    },
    "11661": {
      "op": "SUB"
    },
    "11662": {
      "op": "DUP6"
    },
    "11663": {
      "op": "AND"
    },
    "11664": {
      "op": "DUP2"
    },
    "11665": {
      "op": "MSTORE"
    },
    "11666": {
      "op": "DUP4"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11669": {
      "op": "DUP3"
    },
    "11670": {
      "op": "ADD"
    },
    "11671": {
      "op": "MSTORE"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11676": {
      "op": "DUP3"
    },
    "11677": {
      "op": "ADD"
    },
    "11678": {
      "op": "MSTORE"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11681": {
      "op": "PUSH2",
      "value": "0x2DAD"
    },
    "11684": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11686": {
      "op": "DUP4"
    },
    "11687": {
      "op": "ADD"
    },
    "11688": {
      "op": "DUP6"
    },
    "11689": {
      "op": "PUSH2",
      "value": "0x2C26"
    },
    "11692": {
      "jump": "i",
      "op": "JUMP"
    },
    "11693": {
      "op": "JUMPDEST"
    },
    "11694": {
      "op": "DUP3"
    },
    "11695": {
      "op": "DUP2"
    },
    "11696": {
      "op": "SUB"
    },
    "11697": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11699": {
      "op": "DUP5"
    },
    "11700": {
      "op": "ADD"
    },
    "11701": {
      "op": "MSTORE"
    },
    "11702": {
      "op": "PUSH2",
      "value": "0x2DBF"
    },
    "11705": {
      "op": "DUP2"
    },
    "11706": {
      "op": "DUP6"
    },
    "11707": {
      "op": "PUSH2",
      "value": "0x289C"
    },
    "11710": {
      "jump": "i",
      "op": "JUMP"
    },
    "11711": {
      "op": "JUMPDEST"
    },
    "11712": {
      "op": "SWAP8"
    },
    "11713": {
      "op": "SWAP7"
    },
    "11714": {
      "op": "POP"
    },
    "11715": {
      "op": "POP"
    },
    "11716": {
      "op": "POP"
    },
    "11717": {
      "op": "POP"
    },
    "11718": {
      "op": "POP"
    },
    "11719": {
      "op": "POP"
    },
    "11720": {
      "op": "POP"
    },
    "11721": {
      "jump": "o",
      "op": "JUMP"
    },
    "11722": {
      "op": "JUMPDEST"
    },
    "11723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11725": {
      "op": "DUP1"
    },
    "11726": {
      "op": "DUP4"
    },
    "11727": {
      "op": "SLOAD"
    },
    "11728": {
      "op": "DUP2"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11731": {
      "op": "DUP3"
    },
    "11732": {
      "op": "DUP2"
    },
    "11733": {
      "op": "SHR"
    },
    "11734": {
      "op": "SWAP2"
    },
    "11735": {
      "op": "POP"
    },
    "11736": {
      "op": "DUP1"
    },
    "11737": {
      "op": "DUP4"
    },
    "11738": {
      "op": "AND"
    },
    "11739": {
      "op": "DUP1"
    },
    "11740": {
      "op": "PUSH2",
      "value": "0x2DE6"
    },
    "11743": {
      "op": "JUMPI"
    },
    "11744": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11746": {
      "op": "DUP4"
    },
    "11747": {
      "op": "AND"
    },
    "11748": {
      "op": "SWAP3"
    },
    "11749": {
      "op": "POP"
    },
    "11750": {
      "op": "JUMPDEST"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11753": {
      "op": "DUP1"
    },
    "11754": {
      "op": "DUP5"
    },
    "11755": {
      "op": "LT"
    },
    "11756": {
      "op": "DUP3"
    },
    "11757": {
      "op": "EQ"
    },
    "11758": {
      "op": "ISZERO"
    },
    "11759": {
      "op": "PUSH2",
      "value": "0x2E06"
    },
    "11762": {
      "op": "JUMPI"
    },
    "11763": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11770": {
      "op": "SHL"
    },
    "11771": {
      "op": "DUP7"
    },
    "11772": {
      "op": "MSTORE"
    },
    "11773": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11777": {
      "op": "MSTORE"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11780": {
      "op": "DUP7"
    },
    "11781": {
      "op": "REVERT"
    },
    "11782": {
      "op": "JUMPDEST"
    },
    "11783": {
      "op": "DUP2"
    },
    "11784": {
      "op": "DUP1"
    },
    "11785": {
      "op": "ISZERO"
    },
    "11786": {
      "op": "PUSH2",
      "value": "0x2E1A"
    },
    "11789": {
      "op": "JUMPI"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11792": {
      "op": "DUP2"
    },
    "11793": {
      "op": "EQ"
    },
    "11794": {
      "op": "PUSH2",
      "value": "0x2E2B"
    },
    "11797": {
      "op": "JUMPI"
    },
    "11798": {
      "op": "PUSH2",
      "value": "0x2E58"
    },
    "11801": {
      "op": "JUMP"
    },
    "11802": {
      "op": "JUMPDEST"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11805": {
      "op": "NOT"
    },
    "11806": {
      "op": "DUP7"
    },
    "11807": {
      "op": "AND"
    },
    "11808": {
      "op": "DUP10"
    },
    "11809": {
      "op": "MSTORE"
    },
    "11810": {
      "op": "DUP5"
    },
    "11811": {
      "op": "DUP10"
    },
    "11812": {
      "op": "ADD"
    },
    "11813": {
      "op": "SWAP7"
    },
    "11814": {
      "op": "POP"
    },
    "11815": {
      "op": "PUSH2",
      "value": "0x2E58"
    },
    "11818": {
      "op": "JUMP"
    },
    "11819": {
      "op": "JUMPDEST"
    },
    "11820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11822": {
      "op": "DUP11"
    },
    "11823": {
      "op": "DUP2"
    },
    "11824": {
      "op": "MSTORE"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11827": {
      "op": "SWAP1"
    },
    "11828": {
      "op": "KECCAK256"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11831": {
      "op": "JUMPDEST"
    },
    "11832": {
      "op": "DUP7"
    },
    "11833": {
      "op": "DUP2"
    },
    "11834": {
      "op": "LT"
    },
    "11835": {
      "op": "ISZERO"
    },
    "11836": {
      "op": "PUSH2",
      "value": "0x2E50"
    },
    "11839": {
      "op": "JUMPI"
    },
    "11840": {
      "op": "DUP2"
    },
    "11841": {
      "op": "SLOAD"
    },
    "11842": {
      "op": "DUP12"
    },
    "11843": {
      "op": "DUP3"
    },
    "11844": {
      "op": "ADD"
    },
    "11845": {
      "op": "MSTORE"
    },
    "11846": {
      "op": "SWAP1"
    },
    "11847": {
      "op": "DUP6"
    },
    "11848": {
      "op": "ADD"
    },
    "11849": {
      "op": "SWAP1"
    },
    "11850": {
      "op": "DUP4"
    },
    "11851": {
      "op": "ADD"
    },
    "11852": {
      "op": "PUSH2",
      "value": "0x2E37"
    },
    "11855": {
      "op": "JUMP"
    },
    "11856": {
      "op": "JUMPDEST"
    },
    "11857": {
      "op": "POP"
    },
    "11858": {
      "op": "POP"
    },
    "11859": {
      "op": "DUP5"
    },
    "11860": {
      "op": "DUP10"
    },
    "11861": {
      "op": "ADD"
    },
    "11862": {
      "op": "SWAP7"
    },
    "11863": {
      "op": "POP"
    },
    "11864": {
      "op": "JUMPDEST"
    },
    "11865": {
      "op": "POP"
    },
    "11866": {
      "op": "SWAP5"
    },
    "11867": {
      "op": "SWAP9"
    },
    "11868": {
      "op": "SWAP8"
    },
    "11869": {
      "op": "POP"
    },
    "11870": {
      "op": "POP"
    },
    "11871": {
      "op": "POP"
    },
    "11872": {
      "op": "POP"
    },
    "11873": {
      "op": "POP"
    },
    "11874": {
      "op": "POP"
    },
    "11875": {
      "op": "POP"
    },
    "11876": {
      "op": "POP"
    },
    "11877": {
      "jump": "o",
      "op": "JUMP"
    },
    "11878": {
      "op": "JUMPDEST"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11881": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11886": {
      "op": "DUP4"
    },
    "11887": {
      "op": "DUP2"
    },
    "11888": {
      "op": "AND"
    },
    "11889": {
      "op": "SWAP1"
    },
    "11890": {
      "op": "DUP4"
    },
    "11891": {
      "op": "AND"
    },
    "11892": {
      "op": "DUP2"
    },
    "11893": {
      "op": "DUP2"
    },
    "11894": {
      "op": "LT"
    },
    "11895": {
      "op": "ISZERO"
    },
    "11896": {
      "op": "PUSH2",
      "value": "0x2E83"
    },
    "11899": {
      "op": "JUMPI"
    },
    "11900": {
      "op": "PUSH2",
      "value": "0x2E83"
    },
    "11903": {
      "op": "PUSH2",
      "value": "0x2A1A"
    },
    "11906": {
      "jump": "i",
      "op": "JUMP"
    },
    "11907": {
      "op": "JUMPDEST"
    },
    "11908": {
      "op": "SUB"
    },
    "11909": {
      "op": "SWAP4"
    },
    "11910": {
      "op": "SWAP3"
    },
    "11911": {
      "op": "POP"
    },
    "11912": {
      "op": "POP"
    },
    "11913": {
      "op": "POP"
    },
    "11914": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4c154d6f92cedfd3275dd0e39569b354e4a092e7",
  "source": "pragma solidity ^0.8.0;\n\nimport \"../interfaces/IBuidlCollective.sol\";\nimport {ERC20} from \"./solmate/src/tokens/ERC20.sol\";\n\ncontract BuidlCollective is ERC20, IBuidlCollective {\n    //using SafeERC20 for ERC20;\n    bool collectiveStarted;\n    bool collectiveInitialized;\n    string[] public namesOfParticipants;\n    uint256 public noOfTokens;\n    struct Collective {\n        uint32 vestingTime;\n        uint32 cliff;\n        uint32 collectiveStart;\n    }\n    // tokenInfo\n    address[] public tokens;\n\n    mapping(address => TokenInfo) public tokenInfo;\n\n    address public admin;\n\n    struct TokenInfo {\n        uint256 target;\n        uint128 price;\n        address user;\n    }\n\n    uint256 public totalAssets;\n    // keep track of tokenBalances\n    //mapping(address => uint256) tokenBalances;\n\n    Collective public collectiveInfo;\n\n    ///////////////////////////////////////////\n    // Staking Logic\n    uint32 public constant BP = 10000;\n    uint256 public constant VEST_MULTIPLIER = 10 ** 18;\n    mapping(address => UserInfo) public userInfo;\n    // timestamp\n    uint256 public lastCheckpoint;\n    // a checkpoint number based on percentageStaked(bp) * every second passed\n    uint256 public lastTWAP;\n    // totalStaked in percetnage(bp)\n    uint256 public totalStaked;\n    uint256 public releaseFactor = 86400 * 3;\n\n    struct UserInfo {\n        // percentage(bp) in VEST_MULTIPLIER\n        uint256 depositedShare;\n        // last TWAP during stake/unstake/claim\n        uint256 lastCheckpointTWAP;\n        // last timestamp during stake/unstake/claim\n        uint256 lastCheckpointTime;\n        // last percentageVested during stake/unstake/claim\n        uint256 lastCheckpointPercentageVested;\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin);\n        _;\n    }\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) ERC20(_name, _symbol, _decimals) {\n        admin = msg.sender;\n        emit LogNewAdmin(admin);\n    }\n\n    //////////////////////////////////////////// SETTERS\n    // ADMIN FUNCTION //\n    // assumptions - 1 wallet => 1 token => 1 price\n    // TODO: change name and symbol of token => name of collective\n    // TODO: pass deployer, set deployer as new admin of contract (this is for proxy)\n    function initialize(\n        string[] memory _namesOfParticipants,\n        Collective memory _collectiveInfo,\n        address[] memory _tokens,\n        uint128[] memory _prices,\n        address[] memory _users,\n        uint256[] memory _targets\n    ) external {\n        require(collectiveInitialized == false);\n        collectiveInitialized = true;\n        admin = msg.sender;\n        collectiveInfo = _collectiveInfo;\n        collectiveInfo.collectiveStart = 0;\n        uint256 tokenLength = _tokens.length;\n        for (uint256 i = 0; i < tokenLength; i++) {\n            namesOfParticipants.push(_namesOfParticipants[i]);\n            TokenInfo memory t = TokenInfo(_targets[i], _prices[i], _users[i]);\n            tokenInfo[_tokens[i]] = t;\n            tokens.push(_tokens[i]);\n        }\n        noOfTokens = tokens.length;\n        emit LogNewCollectiveInitialized(\n            _namesOfParticipants,\n            _tokens,\n            _prices,\n            _users,\n            _targets,\n            collectiveInfo.cliff,\n            collectiveInfo.vestingTime\n        );\n    }\n\n    // before startCollective, cancel the collective\n    function cancel(address payable to) external onlyAdmin {\n        require(collectiveStarted == false);\n        selfdestruct(to);\n    }\n\n    function updateAdmin(address _newAdmin) external onlyAdmin {\n        admin = _newAdmin;\n        emit LogNewAdmin(_newAdmin);\n    }\n\n    function startCollective() external onlyAdmin {\n        require(collectiveStarted == false);\n        collectiveStarted = true;\n        address[] memory _tokens = tokens;\n        TokenInfo memory _tokenInfo;\n        uint256 _totalAssets;\n        for (uint256 i; i < _tokens.length; i++) {\n            _tokenInfo = tokenInfo[_tokens[i]];\n            uint256 target = _tokenInfo.target;\n            address contributor = _tokenInfo.user;\n            uint128 price = _tokenInfo.price;\n            ERC20(_tokens[i]).transferFrom(contributor, address(this), target);\n            // @TODO assetValue in price(128) / divided 10 ** 8\n            // @TODO need to take native decimals into account - target * our decimal / their decimals * price\n            //uint256 assetValue = target * price;\n            uint256 assetValue = (target * price * 10 ** 18) /\n                10 ** ERC20(_tokens[i]).decimals();\n            _totalAssets += assetValue;\n            _mint(contributor, assetValue);\n        }\n        collectiveInfo.collectiveStart = uint32(block.timestamp);\n        lastCheckpoint = collectiveInfo.collectiveStart + collectiveInfo.cliff;\n        totalAssets = _totalAssets;\n        emit LogNewPoolInitialized(block.timestamp);\n    }\n\n    //////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // VIEW FUNCTION\n    // return adddress, targetSupply, price, contributor.\n    function readToken(\n        uint256 _tokenId\n    ) public view returns (address, TokenInfo memory) {\n        address tokenAddr = tokens[_tokenId];\n        return (tokenAddr, tokenInfo[tokenAddr]);\n    }\n\n    // return if tokens approval is completed for each tokens\n    function pokeApproval() public view returns (bool[] memory) {\n        bool[] memory approvals = new bool[](tokens.length);\n        address contributor;\n        uint256 allowance;\n        for (uint256 i; i < tokens.length; i++) {\n            contributor = tokenInfo[tokens[i]].user;\n            allowance = ERC20(tokens[i]).allowance(contributor, address(this));\n            if (allowance >= tokenInfo[tokens[i]].target) {\n                approvals[i] = true;\n            } else {\n                approvals[i] = false;\n            }\n        }\n        return approvals;\n    }\n\n    ///////////////////////////// STAKING LOGIC\n\n    modifier updateCheckpoint() {\n        if (block.timestamp > lastCheckpoint) {\n            lastTWAP +=\n                (totalStaked * BP * (block.timestamp - lastCheckpoint)) /\n                totalAssets;\n            lastCheckpoint = block.timestamp;\n            _;\n        } else {\n            _;\n        }\n    }\n\n    function stake(uint256 _assetValue) external updateCheckpoint {\n        address from = msg.sender;\n        address to = address(this);\n\n        require(balanceOf[from] >= _assetValue, \"USER BALANCE NOT ENOUGH\");\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[from] -= _assetValue;\n            balanceOf[to] += _assetValue;\n        }\n\n        uint256 _depositedShare = (_assetValue * BP * VEST_MULTIPLIER) /\n            totalAssets;\n        uint256 _lastCheckpointTWAP = lastTWAP;\n        uint256 _lastCheckpointTime = block.timestamp;\n        uint256 _lastCheckpointPercentageVested = getVestingPercent();\n        UserInfo memory _stakePosition = UserInfo(\n            _depositedShare,\n            _lastCheckpointTWAP,\n            _lastCheckpointTime,\n            _lastCheckpointPercentageVested\n        );\n        userInfo[msg.sender] = _stakePosition;\n        totalStaked += _assetValue;\n        emit Transfer(from, to, _assetValue);\n        emit LogTokensStaked(\n            msg.sender,\n            _assetValue,\n            _depositedShare,\n            _lastCheckpointTWAP,\n            _lastCheckpointTime,\n            _lastCheckpointPercentageVested\n        );\n    }\n\n    function unstake(uint256 _assetValueLeft) external updateCheckpoint {\n        _claim(msg.sender);\n        uint256 p = (_assetValueLeft * BP * VEST_MULTIPLIER) / totalAssets;\n        require(\n            p < userInfo[msg.sender].depositedShare,\n            \"UNSTAKE AMOUNT TOO BIG\"\n        );\n        userInfo[msg.sender].depositedShare -= p;\n        ERC20(address(this)).transfer(msg.sender, _assetValueLeft);\n        emit LogTokensUnstaked(msg.sender, _assetValueLeft);\n    }\n\n    function unstakeAll() external updateCheckpoint {\n        if (userInfo[msg.sender].depositedShare == 0) return;\n        _claim(msg.sender);\n        uint256 assetValue = (userInfo[msg.sender].depositedShare *\n            totalAssets) /\n            VEST_MULTIPLIER /\n            BP;\n        ERC20(address(this)).transfer(msg.sender, assetValue);\n        emit LogTokensUnstaked(msg.sender, assetValue);\n    }\n\n    function claim() external updateCheckpoint {\n        _claim(msg.sender);\n    }\n\n    function _claim(address user) internal returns (uint256 share) {\n        // @TODO BP and VEST_MULTIPLIER\n        uint256 share = calculateShareToClaim(user, true);\n        address[] memory _tokens = tokens;\n        uint256[] memory amounts = new uint256[](_tokens.length);\n        if (share > 0) {\n            userInfo[user].lastCheckpointTWAP = lastTWAP;\n            userInfo[user].lastCheckpointPercentageVested = getVestingPercent();\n            userInfo[user].lastCheckpointTime = block.timestamp;\n            userInfo[user].depositedShare -= share;\n            uint256 shareToBurn = (share * totalAssets) / VEST_MULTIPLIER;\n            uint256 assetValue = shareToBurn / BP;\n            _burn(address(this), assetValue);\n            for (uint256 i = 0; i < _tokens.length; i++) {\n                uint256 amount = convertShareToToken(share, i);\n                amounts[i] = amount;\n                ERC20(_tokens[i]).transfer(user, amount);\n            }\n            emit LogTokensClaimed(user, share, _tokens, amounts);\n        }\n    }\n\n    function convertShareToToken(\n        uint256 share,\n        uint256 tokenId\n    ) internal view returns (uint256) {\n        require(tokenId < tokens.length, \"tokenId OUT OF BOUND\");\n        return\n            (tokenInfo[tokens[tokenId]].target * share) / VEST_MULTIPLIER / BP;\n    }\n\n    // function vestedMultiplier(address user) internal view returns(uint256) {\n    //     uint256 elapsedTime = block.timestamp - UserInfo[user].lastCheckpointTime;\n    //     uint256 elapsedTWAP = lastTWAP - UserInfo[user].lastTWAP;\n    //     uint256 avgPercentage = elapsedTWAP / elapsedTime;\n    //     return VEST_MULTIPLIER * BP / avgPercentage;\n    // }\n    // return the share(% but in BP) to be claimed by user, multiplier by 10 ** 8\n\n    function getClaimable(address user) public view returns (uint256[] memory) {\n        uint256 share = calculateShareToClaim(user, false);\n        uint256[] memory _claimables = new uint256[](tokens.length);\n        for (uint256 i = 0; i < tokens.length; i++) {\n            _claimables[i] = convertShareToToken(share, i);\n        }\n\n        return _claimables;\n    }\n\n    // this would reflect elapsedTWAP with latestTWAP + block.timestamp\n    // updated = true means updateCheckpoint is run aldy;\n    // updated = false means updateCheckpoint is not run and need to factor latest time pass\n    function calculateShareToClaim(\n        address user,\n        bool updated\n    ) public view returns (uint256) {\n        if (block.timestamp <= userInfo[user].lastCheckpointTime) return 0;\n        uint256 elapsedTime = block.timestamp -\n            userInfo[user].lastCheckpointTime;\n        uint256 elapsedVestingPercentage = getVestingPercent() -\n            userInfo[user].lastCheckpointPercentageVested;\n        // stakedAvg\n        uint256 elapsedTWAP;\n        if (updated) {\n            elapsedTWAP = lastTWAP - userInfo[user].lastCheckpointTWAP;\n        } else {\n            elapsedTWAP =\n                lastTWAP -\n                userInfo[user].lastCheckpointTWAP +\n                (totalStaked * BP * (block.timestamp - lastCheckpoint)) /\n                totalAssets;\n        }\n        uint256 avgPercentageStaked = elapsedTWAP / elapsedTime;\n        if (avgPercentageStaked == 0) return 0;\n        // user's percentage out of allStaked during the period\n        uint256 userShareOfStaked = (userInfo[user].depositedShare * BP) /\n            avgPercentageStaked;\n        // user can get elapsedAmount\n        uint256 userEntitlement = (elapsedVestingPercentage *\n            userShareOfStaked) / BP;\n\n        if (elapsedTime >= releaseFactor) {\n            return userEntitlement;\n        } else {\n            return (userEntitlement * elapsedTime) / releaseFactor;\n        }\n    }\n\n    ///////////////////////////// VESTING LOGIC\n    function getVestingPercent() internal view returns (uint256) {\n        uint32 startTime = collectiveInfo.collectiveStart;\n        if (startTime == 0) return 0;\n        uint32 vestingTime = collectiveInfo.vestingTime;\n        uint32 timePassed = uint32(block.timestamp) - startTime;\n        if (vestingTime <= timePassed) return BP;\n        if (timePassed <= collectiveInfo.cliff) return 0;\n        return (uint256(timePassed) * BP) / uint256(vestingTime);\n    }\n}\n",
  "sourceMap": "125:12774:3:-:0;;;1316:9;1285:40;;1802:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1911:5;1918:7;1927:9;2310:5:6;2303:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2325:16:6;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2351:20:6;;;;;2401:13;2382:32;;2451:24;:22;:24::i;:::-;2424:51;;-1:-1:-1;;1948:5:3::1;:18:::0;;-1:-1:-1;;;;;;1948:18:3::1;1956:10;1948:18:::0;;::::1;::::0;;;1981::::1;::::0;1899:51:8;;;1981:18:3::1;::::0;-1:-1:-1;1887:2:8;1872:18;1981::3::1;;;;;;;1802:204:::0;;;125:12774;;5629:492:6;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;3843:25:8;;;;3884:18;;3877:34;;;;5998:14:6;3927:18:8;;;3920:34;6034:13:6;3970:18:8;;;3963:34;6077:4:6;4013:19:8;;;4006:61;3815:19;;5759:341:6;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;125:12774:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;125:12774:3;;;-1:-1:-1;125:12774:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:712::-;1142:6;1150;1158;1211:2;1199:9;1190:7;1186:23;1182:32;1179:52;;;1227:1;1224;1217:12;1179:52;1254:16;;-1:-1:-1;;;;;1319:14:8;;;1316:34;;;1346:1;1343;1336:12;1316:34;1369:61;1422:7;1413:6;1402:9;1398:22;1369:61;:::i;:::-;1359:71;;1476:2;1465:9;1461:18;1455:25;1439:41;;1505:2;1495:8;1492:16;1489:36;;;1521:1;1518;1511:12;1489:36;;1544:63;1599:7;1588:8;1577:9;1573:24;1544:63;:::i;:::-;1534:73;;;1650:2;1639:9;1635:18;1629:25;1694:4;1687:5;1683:16;1676:5;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;1737:5;1727:15;;;1036:712;;;;;:::o;1961:380::-;2040:1;2036:12;;;;2083;;;2104:61;;2158:4;2150:6;2146:17;2136:27;;2104:61;2211:2;2203:6;2200:14;2180:18;2177:38;2174:161;;;2257:10;2252:3;2248:20;2245:1;2238:31;2292:4;2289:1;2282:15;2320:4;2317:1;2310:15;2174:161;;1961:380;;;:::o;2475:1104::-;2605:3;2634:1;2667:6;2661:13;2697:3;2719:1;2747:9;2743:2;2739:18;2729:28;;2807:2;2796:9;2792:18;2829;2819:61;;2873:4;2865:6;2861:17;2851:27;;2819:61;2899:2;2947;2939:6;2936:14;2916:18;2913:38;2910:165;;;-1:-1:-1;;;2974:33:8;;3030:4;3027:1;3020:15;3060:4;2981:3;3048:17;2910:165;3091:18;3118:104;;;;3236:1;3231:323;;;;3084:470;;3118:104;-1:-1:-1;;3151:24:8;;3139:37;;3196:16;;;;-1:-1:-1;3118:104:8;;3231:323;2422:1;2415:14;;;2459:4;2446:18;;3329:1;3343:165;3357:6;3354:1;3351:13;3343:165;;;3435:14;;3422:11;;;3415:35;3478:16;;;;3372:10;;3343:165;;;3347:3;;3537:6;3532:3;3528:16;3521:23;;3084:470;-1:-1:-1;3570:3:8;;2475:1104;-1:-1:-1;;;;;;;;2475:1104:8:o;3584:489::-;125:12774:3;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BuidlCollective.sol",
  "type": "contract"
}