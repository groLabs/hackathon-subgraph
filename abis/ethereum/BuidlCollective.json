{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CollectiveConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "LogClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "LogNewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint128[]",
          "name": "price",
          "type": "uint128[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "targets",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestimTime",
          "type": "uint32"
        }
      ],
      "name": "LogNewCollectiveInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "LogNewPoolInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sentAmount",
          "type": "uint256"
        }
      ],
      "name": "UserConfirmed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BP",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VEST_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectiveInfo",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "vestingTime",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "cliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "collectiveStart",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "vestingTime",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "collectiveStart",
              "type": "uint32"
            }
          ],
          "internalType": "struct BuidlCollective.Collective",
          "name": "_collectiveInfo",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint128[]",
          "name": "_prices",
          "type": "uint128[]"
        },
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_targets",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastCheckpoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pokeApproval",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "readToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "price",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimed",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "internalType": "struct BuidlCollective.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValue",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startCollective",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "price",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "claimed",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetValueLeft",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "updateAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTWAP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCheckpointPercentageVested",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/kat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
    "1": "/home/kat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "3": "contracts/BuidlCollective.sol",
    "4": "contracts/solmate/src/tokens/ERC20.sol",
    "5": "interfaces/IBuidlCollective.sol"
  },
  "ast": {
    "absolutePath": "contracts/BuidlCollective.sol",
    "exportedSymbols": {
      "Address": [
        1783
      ],
      "BuidlCollective": [
        885
      ],
      "ERC20": [
        1432
      ],
      "IBuidlCollective": [
        1488
      ],
      "IERC20": [
        1037
      ],
      "Initializable": [
        959
      ]
    },
    "id": 886,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:3"
      },
      {
        "absolutePath": "interfaces/IBuidlCollective.sol",
        "file": "../interfaces/IBuidlCollective.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 1489,
        "src": "60:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/solmate/src/tokens/ERC20.sol",
        "file": "./solmate/src/tokens/ERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 1433,
        "src": "105:53:3",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "113:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 1038,
        "src": "159:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kat/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 886,
        "sourceUnit": 960,
        "src": "216:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1432,
              "src": "377:5:3"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "377:5:3"
          },
          {
            "baseName": {
              "id": 9,
              "name": "IBuidlCollective",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1488,
              "src": "384:16:3"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "384:16:3"
          },
          {
            "baseName": {
              "id": 11,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 959,
              "src": "402:13:3"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "402:13:3"
          }
        ],
        "canonicalName": "BuidlCollective",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 885,
        "linearizedBaseContracts": [
          885,
          959,
          1488,
          1432
        ],
        "name": "BuidlCollective",
        "nameLocation": "358:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "collectiveStarted",
            "nameLocation": "459:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "454:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 13,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "454:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "BuidlCollective.Collective",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "vestingTime",
                "nameLocation": "522:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "515:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "515:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "cliff",
                "nameLocation": "550:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "543:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "collectiveStart",
                "nameLocation": "572:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "565:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Collective",
            "nameLocation": "494:10:3",
            "nodeType": "StructDefinition",
            "scope": 885,
            "src": "487:107:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 24,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "633:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "616:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "616:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 23,
              "nodeType": "ArrayTypeName",
              "src": "616:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5dab711",
            "id": 29,
            "mutability": "mutable",
            "name": "tokenInfo",
            "nameLocation": "683:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "646:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "654:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "646:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.TokenInfo)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "TokenInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "665:9:3"
                },
                "referencedDeclaration": 40,
                "src": "665:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                  "typeString": "struct BuidlCollective.TokenInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 31,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "714:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "699:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.TokenInfo",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "761:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "753:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "753:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "785:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "777:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "777:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "808:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "800:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "800:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "833:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "825:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "825:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenInfo",
            "nameLocation": "733:9:3",
            "nodeType": "StructDefinition",
            "scope": 885,
            "src": "726:118:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01e1d114",
            "id": 42,
            "mutability": "mutable",
            "name": "totalAssets",
            "nameLocation": "865:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "850:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "850:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e0c9802f",
            "id": 45,
            "mutability": "mutable",
            "name": "collectiveInfo",
            "nameLocation": "985:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "967:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Collective_$21_storage",
              "typeString": "struct BuidlCollective.Collective"
            },
            "typeName": {
              "id": 44,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 43,
                "name": "Collective",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21,
                "src": "967:10:3"
              },
              "referencedDeclaration": 21,
              "src": "967:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Collective_$21_storage_ptr",
                "typeString": "struct BuidlCollective.Collective"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "9cfdbd5e",
            "id": 48,
            "mutability": "constant",
            "name": "BP",
            "nameLocation": "1102:2:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1079:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 46,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1079:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 47,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1108:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "7d9fce4d",
            "id": 53,
            "mutability": "constant",
            "name": "VEST_MULTIPLIER",
            "nameLocation": "1142:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1119:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 49,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1119:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 50,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1160:2:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "38",
                "id": 51,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1166:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_8_by_1",
                  "typeString": "int_const 8"
                },
                "value": "8"
              },
              "src": "1160:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 58,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "1209:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1173:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
              "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1181:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1173:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                "typeString": "mapping(address => struct BuidlCollective.UserInfo)"
              },
              "valueType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "1192:8:3"
                },
                "referencedDeclaration": 78,
                "src": "1192:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$78_storage_ptr",
                  "typeString": "struct BuidlCollective.UserInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d32e81a5",
            "id": 60,
            "mutability": "mutable",
            "name": "lastCheckpoint",
            "nameLocation": "1255:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1240:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1240:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77a1d3a",
            "id": 62,
            "mutability": "mutable",
            "name": "lastTWAP",
            "nameLocation": "1369:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1354:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1354:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 64,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "1435:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1420:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5da69cb6",
            "id": 69,
            "mutability": "mutable",
            "name": "releaseFactor",
            "nameLocation": "1467:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 885,
            "src": "1452:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1452:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              },
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 66,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1483:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "33",
                "id": 67,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1491:1:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "1483:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_259200_by_1",
                "typeString": "int_const 259200"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuidlCollective.UserInfo",
            "id": 78,
            "members": [
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "depositedShare",
                "nameLocation": "1582:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "1574:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1574:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "lastCheckpointTWAP",
                "nameLocation": "1662:18:3",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "1654:26:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 72,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1654:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "lastCheckpointTime",
                "nameLocation": "1751:18:3",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "1743:26:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1743:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "lastCheckpointPercentageVested",
                "nameLocation": "1847:30:3",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "1839:38:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "1510:8:3",
            "nodeType": "StructDefinition",
            "scope": 885,
            "src": "1503:381:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1912:56:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1930:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1930:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1944:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1930:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1922:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1922:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1922:28:3"
                },
                {
                  "id": 87,
                  "nodeType": "PlaceholderStatement",
                  "src": "1960:1:3"
                }
              ]
            },
            "id": 89,
            "name": "onlyAdmin",
            "nameLocation": "1900:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:3"
            },
            "src": "1891:77:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "2080:2:3",
              "statements": []
            },
            "id": 104,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 98,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "2053:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 99,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 93,
                    "src": "2060:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 100,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 95,
                    "src": "2069:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 101,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 97,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1432,
                  "src": "2047:5:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2047:32:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2000:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1986:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2021:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "2007:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "2036:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "2030:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:61:3"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2080:0:3"
            },
            "scope": 885,
            "src": "1974:108:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2399:1120:3",
              "statements": [
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2810:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$21_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "2827:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$21_memory_ptr",
                        "typeString": "struct BuidlCollective.Collective memory"
                      }
                    },
                    "src": "2810:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$21_storage",
                      "typeString": "struct BuidlCollective.Collective storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:32:3"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 128,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2852:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$21_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2852:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2885:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2852:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:34:3"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "tokenLength",
                      "nameLocation": "2904:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2896:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2896:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "expression": {
                      "id": 136,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2918:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2918:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2896:36:3"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "2984:244:3",
                    "statements": [
                      {
                        "assignments": [
                          151
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 151,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "3015:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 181,
                            "src": "2998:18:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo"
                            },
                            "typeName": {
                              "id": 150,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 149,
                                "name": "TokenInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 40,
                                "src": "2998:9:3"
                              },
                              "referencedDeclaration": 40,
                              "src": "2998:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                                "typeString": "struct BuidlCollective.TokenInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 164,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 153,
                                "name": "_targets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "3046:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 155,
                              "indexExpression": {
                                "id": 154,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3055:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3046:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 156,
                                "name": "_prices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "3075:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                                  "typeString": "uint128[] memory"
                                }
                              },
                              "id": 158,
                              "indexExpression": {
                                "id": 157,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3083:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3075:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3103:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "baseExpression": {
                                "id": 160,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "3122:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 162,
                              "indexExpression": {
                                "id": 161,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3129:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3122:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 152,
                            "name": "TokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "3019:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenInfo_$40_storage_ptr_$",
                              "typeString": "type(struct BuidlCollective.TokenInfo storage pointer)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:122:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$40_memory_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2998:143:3"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 165,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "3155:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 169,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 166,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "3165:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 168,
                              "indexExpression": {
                                "id": 167,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3173:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3165:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3155:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 170,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "3179:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_memory_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo memory"
                            }
                          },
                          "src": "3155:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                            "typeString": "struct BuidlCollective.TokenInfo storage ref"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "3155:25:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 176,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "3206:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 178,
                              "indexExpression": {
                                "id": 177,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 140,
                                "src": "3214:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3206:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 173,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "3194:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3194:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3194:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "ExpressionStatement",
                        "src": "3194:23:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 143,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2962:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 144,
                      "name": "tokenLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2966:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2962:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "initializationExpression": {
                    "assignments": [
                      140
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2955:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "2947:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2947:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 142,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2959:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2947:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2979:3:3",
                      "subExpression": {
                        "id": 146,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2979:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 148,
                    "nodeType": "ExpressionStatement",
                    "src": "2979:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "2942:286:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3270:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 185,
                        "name": "_prices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "3279:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        }
                      },
                      {
                        "id": 186,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3288:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 187,
                        "name": "_targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "3296:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 188,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3306:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$21_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "3306:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 190,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3328:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$21_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vestingTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "3328:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                          "typeString": "uint128[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 183,
                      "name": "LogNewCollectiveInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "3242:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint128_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (address[] memory,uint128[] memory,address[] memory,uint256[] memory,uint32,uint32)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "3237:118:3"
                }
              ]
            },
            "functionSelector": "09d0e30c",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 121,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "2380:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2380:9:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "2230:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_collectiveInfo",
                  "nameLocation": "2259:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2241:33:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collective_$21_memory_ptr",
                    "typeString": "struct BuidlCollective.Collective"
                  },
                  "typeName": {
                    "id": 106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 105,
                      "name": "Collective",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21,
                      "src": "2241:10:3"
                    },
                    "referencedDeclaration": 21,
                    "src": "2241:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collective_$21_storage_ptr",
                      "typeString": "struct BuidlCollective.Collective"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "2293:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2276:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 108,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2276:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 109,
                    "nodeType": "ArrayTypeName",
                    "src": "2276:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_prices",
                  "nameLocation": "2319:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2302:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 111,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "2302:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 112,
                    "nodeType": "ArrayTypeName",
                    "src": "2302:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_users",
                  "nameLocation": "2345:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2328:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 114,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2328:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 115,
                    "nodeType": "ArrayTypeName",
                    "src": "2328:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_targets",
                  "nameLocation": "2370:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2353:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2353:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 118,
                    "nodeType": "ArrayTypeName",
                    "src": "2353:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:139:3"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2399:0:3"
            },
            "scope": 885,
            "src": "2221:1298:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3633:78:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "3651:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3672:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3651:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3643:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "3701:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 208,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "3688:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:16:3"
                }
              ]
            },
            "functionSelector": "4c33fe94",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 199,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "3614:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3614:9:3"
              }
            ],
            "name": "cancel",
            "nameLocation": "3587:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3610:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3594:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3593:20:3"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3633:0:3"
            },
            "scope": 885,
            "src": "3578:133:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "3780:106:3",
              "statements": [
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 220,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3790:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3798:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3790:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:17:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "3869:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 224,
                      "name": "LogNewAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "3857:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3857:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "3852:27:3"
                }
              ]
            },
            "functionSelector": "e2f273bd",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 217,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "3761:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3761:9:3"
              }
            ],
            "name": "updateAdmin",
            "nameLocation": "3730:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "3750:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3742:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3741:19:3"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:0:3"
            },
            "scope": 885,
            "src": "3721:165:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3953:974:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 237,
                          "name": "collectiveStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "3971:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3992:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3971:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3963:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:35:3"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 242,
                      "name": "collectiveStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "4008:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4028:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4008:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:24:3"
                },
                {
                  "assignments": [
                    250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 250,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "4059:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4042:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4042:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 249,
                        "nodeType": "ArrayTypeName",
                        "src": "4042:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "id": 251,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "4069:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4042:33:3"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "_tokenInfo",
                      "nameLocation": "4103:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4085:28:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                        "typeString": "struct BuidlCollective.TokenInfo"
                      },
                      "typeName": {
                        "id": 254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 253,
                          "name": "TokenInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "4085:9:3"
                        },
                        "referencedDeclaration": 40,
                        "src": "4085:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                          "typeString": "struct BuidlCollective.TokenInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4085:28:3"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4131:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4123:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4123:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4123:14:3"
                },
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "4155:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "4147:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4147:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4147:20:3"
                },
                {
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "4218:504:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 273,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4232:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 274,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4245:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 278,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 275,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "4255:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 277,
                              "indexExpression": {
                                "id": 276,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 264,
                                "src": "4263:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4255:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4245:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "src": "4232:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                            "typeString": "struct BuidlCollective.TokenInfo storage pointer"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "4232:34:3"
                      },
                      {
                        "assignments": [
                          282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 282,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4289:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 323,
                            "src": "4281:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 281,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4281:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 285,
                        "initialValue": {
                          "expression": {
                            "id": 283,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4298:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo storage pointer"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "4298:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4281:34:3"
                      },
                      {
                        "assignments": [
                          287
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 287,
                            "mutability": "mutable",
                            "name": "contributor",
                            "nameLocation": "4337:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 323,
                            "src": "4329:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 286,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4329:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 290,
                        "initialValue": {
                          "expression": {
                            "id": 288,
                            "name": "_tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4351:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                              "typeString": "struct BuidlCollective.TokenInfo storage pointer"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4351:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4329:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 297,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 287,
                              "src": "4412:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 300,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4433:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4425:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 298,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4425:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4425:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 302,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "4440:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 292,
                                    "name": "_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 250,
                                    "src": "4387:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 294,
                                  "indexExpression": {
                                    "id": 293,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 264,
                                    "src": "4395:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4387:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 291,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1037,
                                "src": "4380:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1037_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4380:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1037",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1018,
                            "src": "4380:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4380:67:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "4380:67:3"
                      },
                      {
                        "assignments": [
                          306
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 306,
                            "mutability": "mutable",
                            "name": "assetValue",
                            "nameLocation": "4533:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 323,
                            "src": "4525:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 305,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4525:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 313,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 307,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "4546:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 308,
                                "name": "_tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "4555:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                                  "typeString": "struct BuidlCollective.TokenInfo storage pointer"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35,
                              "src": "4555:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "4546:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "314538",
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4574:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "1E8"
                          },
                          "src": "4546:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4525:52:3"
                      },
                      {
                        "expression": {
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 314,
                            "name": "_totalAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "4591:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 315,
                            "name": "assetValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "4607:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4591:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "4591:26:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 319,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 287,
                              "src": "4687:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 320,
                              "name": "assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "4700:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 318,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "4681:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4681:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "4681:30:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 266,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "4193:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 267,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "4197:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4197:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4193:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 324,
                  "initializationExpression": {
                    "assignments": [
                      264
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4190:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "4182:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4182:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 265,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4182:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4213:3:3",
                      "subExpression": {
                        "id": 270,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4213:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 272,
                    "nodeType": "ExpressionStatement",
                    "src": "4213:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "4177:545:3"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 325,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "4731:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$21_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectiveStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4731:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 330,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4771:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4771:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4764:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4764:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4764:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4731:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:56:3"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 335,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "4797:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 336,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "4814:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$21_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collectiveStart",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "4814:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 338,
                          "name": "collectiveInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "4847:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collective_$21_storage",
                            "typeString": "struct BuidlCollective.Collective storage ref"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cliff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "4847:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "4814:53:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4797:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:70:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 344,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4904:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4904:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 343,
                      "name": "LogNewPoolInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "4882:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4882:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "EmitStatement",
                  "src": "4877:43:3"
                }
              ]
            },
            "functionSelector": "4ae99d30",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 231,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89,
                  "src": "3928:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3928:9:3"
              }
            ],
            "name": "startCollective",
            "nameLocation": "3901:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3916:2:3"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3947:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3946:6:3"
            },
            "scope": 885,
            "src": "3892:1035:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "5229:103:3",
              "statements": [
                {
                  "assignments": [
                    360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "nameLocation": "5247:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 371,
                      "src": "5239:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5239:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "baseExpression": {
                      "id": 361,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "5259:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 363,
                    "indexExpression": {
                      "id": 362,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "5266:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5259:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5239:36:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 365,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5293:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 366,
                          "name": "tokenInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5304:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                          }
                        },
                        "id": 368,
                        "indexExpression": {
                          "id": 367,
                          "name": "tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "5314:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5304:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                          "typeString": "struct BuidlCollective.TokenInfo storage ref"
                        }
                      }
                    ],
                    "id": 369,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5292:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                      "typeString": "tuple(address,struct BuidlCollective.TokenInfo storage ref)"
                    }
                  },
                  "functionReturnParameters": 358,
                  "id": 370,
                  "nodeType": "Return",
                  "src": "5285:40:3"
                }
              ]
            },
            "functionSelector": "a9320688",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readToken",
            "nameLocation": "5154:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5172:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "5164:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5163:18:3"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "5203:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5203:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "5212:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenInfo_$40_memory_ptr",
                    "typeString": "struct BuidlCollective.TokenInfo"
                  },
                  "typeName": {
                    "id": 356,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 355,
                      "name": "TokenInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40,
                      "src": "5212:9:3"
                    },
                    "referencedDeclaration": 40,
                    "src": "5212:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenInfo_$40_storage_ptr",
                      "typeString": "struct BuidlCollective.TokenInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5202:27:3"
            },
            "scope": 885,
            "src": "5145:187:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "5458:411:3",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "approvals",
                      "nameLocation": "5482:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "5468:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 380,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5468:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 381,
                        "nodeType": "ArrayTypeName",
                        "src": "5468:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 386,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5505:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5505:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5494:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 383,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5498:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 384,
                        "nodeType": "ArrayTypeName",
                        "src": "5498:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5494:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5468:51:3"
                },
                {
                  "body": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "5569:268:3",
                    "statements": [
                      {
                        "assignments": [
                          401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 401,
                            "mutability": "mutable",
                            "name": "contributor",
                            "nameLocation": "5591:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 441,
                            "src": "5583:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 400,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5583:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 408,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 402,
                              "name": "tokenInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "5605:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                              }
                            },
                            "id": 406,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 403,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "5615:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 405,
                              "indexExpression": {
                                "id": 404,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 391,
                                "src": "5622:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5615:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5605:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                              "typeString": "struct BuidlCollective.TokenInfo storage ref"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "5605:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5583:47:3"
                      },
                      {
                        "assignments": [
                          410
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 410,
                            "mutability": "mutable",
                            "name": "allowance",
                            "nameLocation": "5652:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 441,
                            "src": "5644:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 409,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5644:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 423,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 417,
                              "name": "contributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "5692:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 420,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5713:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                    "typeString": "contract BuidlCollective"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                    "typeString": "contract BuidlCollective"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5705:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5705:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5705:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 412,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "5671:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 414,
                                  "indexExpression": {
                                    "id": 413,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "5678:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5671:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 411,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1037,
                                "src": "5664:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1037_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5664:17:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1037",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 996,
                            "src": "5664:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5664:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5644:75:3"
                      },
                      {
                        "assignments": [
                          425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 425,
                            "mutability": "mutable",
                            "name": "approval",
                            "nameLocation": "5738:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 441,
                            "src": "5733:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 424,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5733:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 434,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 426,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "5749:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 427,
                                "name": "tokenInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "5762:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                                }
                              },
                              "id": 431,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 428,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "5772:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 430,
                                "indexExpression": {
                                  "id": 429,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "5779:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5772:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5762:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                                "typeString": "struct BuidlCollective.TokenInfo storage ref"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "5762:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5749:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5733:56:3"
                      },
                      {
                        "expression": {
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 435,
                              "name": "approvals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "5803:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 437,
                            "indexExpression": {
                              "id": 436,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "5813:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5803:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 438,
                            "name": "approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "5818:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5803:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 440,
                        "nodeType": "ExpressionStatement",
                        "src": "5803:23:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "5545:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 394,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5549:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5549:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5545:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 442,
                  "initializationExpression": {
                    "assignments": [
                      391
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5542:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "5534:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5534:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 392,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5534:9:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5564:3:3",
                      "subExpression": {
                        "id": 397,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "5564:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 399,
                    "nodeType": "ExpressionStatement",
                    "src": "5564:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "5529:308:3"
                },
                {
                  "expression": {
                    "id": 443,
                    "name": "approvals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 382,
                    "src": "5853:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "functionReturnParameters": 377,
                  "id": 444,
                  "nodeType": "Return",
                  "src": "5846:16:3"
                }
              ]
            },
            "functionSelector": "a4c8b46b",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pokeApproval",
            "nameLocation": "5408:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5420:2:3"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5443:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 374,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "5443:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 375,
                    "nodeType": "ArrayTypeName",
                    "src": "5443:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5442:15:3"
            },
            "scope": 885,
            "src": "5399:470:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "5954:260:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 448,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5968:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5968:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 450,
                      "name": "lastCheckpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5986:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5968:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "6173:26:3",
                    "statements": [
                      {
                        "id": 473,
                        "nodeType": "PlaceholderStatement",
                        "src": "6187:1:3"
                      }
                    ]
                  },
                  "id": 475,
                  "nodeType": "IfStatement",
                  "src": "5964:235:3",
                  "trueBody": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "6002:165:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 452,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "6016:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 453,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "6028:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 454,
                                  "name": "BP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "6042:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "6028:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 456,
                                "name": "totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "6047:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6028:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 458,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "6062:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "6062:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 460,
                                    "name": "lastCheckpoint",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "6080:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6062:32:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 462,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6061:34:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6028:67:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6016:79:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "6016:79:3"
                      },
                      {
                        "expression": {
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 466,
                            "name": "lastCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "6109:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 467,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6126:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6126:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6109:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "6109:32:3"
                      },
                      {
                        "id": 471,
                        "nodeType": "PlaceholderStatement",
                        "src": "6155:1:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 477,
            "name": "updateCheckpoint",
            "nameLocation": "5935:16:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5951:2:3"
            },
            "src": "5926:288:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "6287:296:3",
              "statements": [
                {
                  "assignments": [
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "mutability": "mutable",
                      "name": "u",
                      "nameLocation": "6396:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "6380:17:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$78_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo"
                      },
                      "typeName": {
                        "id": 485,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 484,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 78,
                          "src": "6380:8:3"
                        },
                        "referencedDeclaration": 78,
                        "src": "6380:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$78_storage_ptr",
                          "typeString": "struct BuidlCollective.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 501,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 488,
                              "name": "_assetValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "6409:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 489,
                              "name": "BP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "6423:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "6409:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 491,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6428:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6409:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 493,
                          "name": "totalAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "6446:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6409:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 495,
                        "name": "lastTWAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "6459:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 496,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6469:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6469:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 498,
                          "name": "getVestingPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 884,
                          "src": "6486:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6486:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 487,
                      "name": "UserInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "6400:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserInfo_$78_storage_ptr_$",
                        "typeString": "type(struct BuidlCollective.UserInfo storage pointer)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6400:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$78_memory_ptr",
                      "typeString": "struct BuidlCollective.UserInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6380:126:3"
                },
                {
                  "expression": {
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 502,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6516:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                          "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                        }
                      },
                      "id": 505,
                      "indexExpression": {
                        "expression": {
                          "id": 503,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6525:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6525:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6516:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                        "typeString": "struct BuidlCollective.UserInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 506,
                      "name": "u",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "6539:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$78_memory_ptr",
                        "typeString": "struct BuidlCollective.UserInfo memory"
                      }
                    },
                    "src": "6516:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                      "typeString": "struct BuidlCollective.UserInfo storage ref"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "6516:24:3"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 509,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "6550:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 510,
                      "name": "_assetValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6565:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6550:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "6550:26:3"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 481,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "6261:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6261:16:3"
              }
            ],
            "name": "stake",
            "nameLocation": "6234:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "_assetValue",
                  "nameLocation": "6248:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "6240:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6239:21:3"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6287:0:3"
            },
            "scope": 885,
            "src": "6225:358:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "6657:312:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6674:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6674:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 521,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "6667:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "6667:18:3"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "6703:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "6695:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6695:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 535,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 528,
                          "name": "_assetValueLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "6707:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 529,
                          "name": "BP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6725:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "6707:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 531,
                        "name": "VEST_MULTIPLIER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6730:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "6707:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 533,
                      "name": "totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "6748:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6707:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6695:64:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 537,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "6778:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 538,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "6782:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                              }
                            },
                            "id": 541,
                            "indexExpression": {
                              "expression": {
                                "id": 539,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6791:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6791:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6782:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                              "typeString": "struct BuidlCollective.UserInfo storage ref"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "depositedShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71,
                          "src": "6782:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6778:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "554e5354414b4520414d4f554e5420544f4f20424947",
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6819:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        },
                        "value": "UNSTAKE AMOUNT TOO BIG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc5c68e8f861dfe90aff9b9e3bc6a0517d48c43cd7f17f874cb20501316375d",
                          "typeString": "literal_string \"UNSTAKE AMOUNT TOO BIG\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6769:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:75:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:75:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 554,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6885:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6885:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 556,
                        "name": "_assetValueLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "6897:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 550,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6869:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6861:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 548,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6861:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6861:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 547,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "6854:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1037_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6854:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1037",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "6854:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6854:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "6854:59:3"
                },
                {
                  "expression": {
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 559,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "6923:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 562,
                        "indexExpression": {
                          "expression": {
                            "id": 560,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6932:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6932:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6923:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "depositedShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "6923:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6961:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6923:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "6923:39:3"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 518,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "6631:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6631:16:3"
              }
            ],
            "name": "unstake",
            "nameLocation": "6598:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_assetValueLeft",
                  "nameLocation": "6614:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "6606:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6605:25:3"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6657:0:3"
            },
            "scope": 885,
            "src": "6589:380:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "7027:156:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7068:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7068:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 582,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "7080:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 585,
                              "indexExpression": {
                                "expression": {
                                  "id": 583,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7089:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7089:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7080:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "7080:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 587,
                            "name": "totalAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "7118:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7080:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 589,
                          "name": "VEST_MULTIPLIER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "7132:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "7080:67:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 576,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7052:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                  "typeString": "contract BuidlCollective"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BuidlCollective_$885",
                                  "typeString": "contract BuidlCollective"
                                }
                              ],
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7044:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 574,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7044:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7044:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 573,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "7037:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1037_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7037:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1037",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "7037:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7037:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "7037:111:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 594,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7165:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7165:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 593,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "7158:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "7158:18:3"
                }
              ]
            },
            "functionSelector": "35322f37",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 570,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "7001:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7001:16:3"
              }
            ],
            "name": "unstakeAll",
            "nameLocation": "6988:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6998:2:3"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7027:0:3"
            },
            "scope": 885,
            "src": "6979:204:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "7244:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 607,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "7261:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 606,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "7254:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:12:3"
                }
              ]
            },
            "functionSelector": "1e83409a",
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 603,
                  "name": "updateCheckpoint",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "7218:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7218:16:3"
              }
            ],
            "name": "claim",
            "nameLocation": "7198:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7212:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "7204:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7204:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7203:14:3"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7244:0:3"
            },
            "scope": 885,
            "src": "7189:87:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "7321:861:3",
              "statements": [
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "7402:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "7394:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7394:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "7433:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 618,
                      "name": "_calculateShareToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "7410:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7394:44:3"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "nameLocation": "7465:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "7448:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 625,
                        "nodeType": "ArrayTypeName",
                        "src": "7448:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 628,
                  "initialValue": {
                    "id": 627,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "7475:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7448:33:3"
                },
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "7508:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 726,
                      "src": "7491:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7491:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 632,
                        "nodeType": "ArrayTypeName",
                        "src": "7491:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 637,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "7532:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7532:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7518:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7522:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 635,
                        "nodeType": "ArrayTypeName",
                        "src": "7522:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7518:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7491:56:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 641,
                      "name": "share",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "7561:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7569:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7561:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "IfStatement",
                  "src": "7557:619:3",
                  "trueBody": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "7572:604:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 644,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "7586:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 646,
                              "indexExpression": {
                                "id": 645,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "7595:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7586:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTWAP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "7586:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 648,
                            "name": "lastTWAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "7622:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7586:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 650,
                        "nodeType": "ExpressionStatement",
                        "src": "7586:44:3"
                      },
                      {
                        "expression": {
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 651,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "7644:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 653,
                              "indexExpression": {
                                "id": 652,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "7653:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7644:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointPercentageVested",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77,
                            "src": "7644:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 655,
                              "name": "getVestingPercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 884,
                              "src": "7692:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7692:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7644:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 658,
                        "nodeType": "ExpressionStatement",
                        "src": "7644:67:3"
                      },
                      {
                        "expression": {
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 659,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "7725:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 661,
                              "indexExpression": {
                                "id": 660,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "7734:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7725:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastCheckpointTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75,
                            "src": "7725:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 663,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7761:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7761:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7725:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "7725:51:3"
                      },
                      {
                        "expression": {
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 667,
                                "name": "userInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "7790:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                                  "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                                }
                              },
                              "id": 669,
                              "indexExpression": {
                                "id": 668,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "7799:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7790:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                                "typeString": "struct BuidlCollective.UserInfo storage ref"
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "depositedShare",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "7790:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 671,
                            "name": "share",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "7823:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7790:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 673,
                        "nodeType": "ExpressionStatement",
                        "src": "7790:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 675,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7848:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 676,
                                "name": "share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "7854:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 677,
                                "name": "totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "7862:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7854:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 674,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "7842:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7842:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "7842:32:3"
                      },
                      {
                        "body": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "7933:175:3",
                          "statements": [
                            {
                              "assignments": [
                                693
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 693,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "7959:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 715,
                                  "src": "7951:14:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 692,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7951:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 698,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 695,
                                    "name": "share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 617,
                                    "src": "7988:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 696,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "7995:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 694,
                                  "name": "convertShareToToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "7968:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7968:29:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7951:46:3"
                            },
                            {
                              "expression": {
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 699,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 633,
                                    "src": "8015:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 701,
                                  "indexExpression": {
                                    "id": 700,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "8023:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8015:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 702,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 693,
                                  "src": "8028:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8015:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 704,
                              "nodeType": "ExpressionStatement",
                              "src": "8015:19:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 711,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 613,
                                    "src": "8080:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 712,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "8086:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 706,
                                          "name": "_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 626,
                                          "src": "8059:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 708,
                                        "indexExpression": {
                                          "id": 707,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 682,
                                          "src": "8067:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8059:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 705,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1037,
                                      "src": "8052:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1037_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8052:18:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1037",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 986,
                                  "src": "8052:27:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8052:41:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 714,
                              "nodeType": "ExpressionStatement",
                              "src": "8052:41:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 685,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "7908:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 686,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "7912:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7912:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7908:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "initializationExpression": {
                          "assignments": [
                            682
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 682,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7901:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 716,
                              "src": "7893:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 681,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7893:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 684,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7905:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7893:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "7928:3:3",
                            "subExpression": {
                              "id": 689,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "7928:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 691,
                          "nodeType": "ExpressionStatement",
                          "src": "7928:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "7888:220:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 718,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "8135:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 719,
                              "name": "share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "8141:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 720,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "8148:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 721,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "8157:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 717,
                            "name": "LogClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1467,
                            "src": "8126:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8126:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "EmitStatement",
                        "src": "8121:44:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "7291:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7306:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7298:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7298:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7297:14:3"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7321:0:3"
            },
            "scope": 885,
            "src": "7282:900:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "8279:91:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 736,
                            "name": "tokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "8296:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenInfo_$40_storage_$",
                              "typeString": "mapping(address => struct BuidlCollective.TokenInfo storage ref)"
                            }
                          },
                          "id": 740,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 737,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "8306:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 739,
                            "indexExpression": {
                              "id": 738,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "8313:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8306:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8296:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$40_storage",
                            "typeString": "struct BuidlCollective.TokenInfo storage ref"
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "target",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "8296:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 742,
                        "name": "share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "8332:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8296:41:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 744,
                            "name": "BP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "8341:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 745,
                            "name": "VEST_MULTIPLIER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "8347:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8341:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 747,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8340:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8296:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 735,
                  "id": 749,
                  "nodeType": "Return",
                  "src": "8289:74:3"
                }
              ]
            },
            "id": 751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertShareToToken",
            "nameLocation": "8197:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "share",
                  "nameLocation": "8225:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "8217:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8217:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8240:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "8232:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8232:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8216:32:3"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "8271:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8271:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8270:9:3"
            },
            "scope": 885,
            "src": "8188:182:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "8907:837:3",
              "statements": [
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "elapsedTime",
                      "nameLocation": "8925:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "8917:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 767,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 760,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8939:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8939:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 762,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "8957:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 764,
                        "indexExpression": {
                          "id": 763,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "8966:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8957:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "8957:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8939:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8917:73:3"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "elapsedVestingPercentage",
                      "nameLocation": "9008:24:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "9000:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9000:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 770,
                        "name": "getVestingPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "9035:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9035:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 772,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "9057:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 774,
                        "indexExpression": {
                          "id": 773,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "9066:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9057:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointPercentageVested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "9057:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9035:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9000:102:3"
                },
                {
                  "assignments": [
                    779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 779,
                      "mutability": "mutable",
                      "name": "elapsedTWAP",
                      "nameLocation": "9141:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "9133:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9133:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 786,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 780,
                      "name": "lastTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "9155:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 781,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "9166:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                            "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                          }
                        },
                        "id": 783,
                        "indexExpression": {
                          "id": 782,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "9175:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9166:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                          "typeString": "struct BuidlCollective.UserInfo storage ref"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastCheckpointTWAP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "9166:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9155:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9133:66:3"
                },
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "mutability": "mutable",
                      "name": "avgPercentageStaked",
                      "nameLocation": "9217:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "9209:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 787,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9209:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 789,
                      "name": "elapsedTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "9239:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 790,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "9253:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9239:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9209:55:3"
                },
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "userShareOfStaked",
                      "nameLocation": "9346:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "9338:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9338:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 803,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 795,
                            "name": "userInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "9366:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$78_storage_$",
                              "typeString": "mapping(address => struct BuidlCollective.UserInfo storage ref)"
                            }
                          },
                          "id": 797,
                          "indexExpression": {
                            "id": 796,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "9375:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9366:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$78_storage",
                            "typeString": "struct BuidlCollective.UserInfo storage ref"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositedShare",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71,
                        "src": "9366:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 799,
                        "name": "BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "9398:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "9366:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 801,
                      "name": "avgPercentageStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "9403:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9366:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9338:84:3"
                },
                {
                  "assignments": [
                    805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "userEntitlement",
                      "nameLocation": "9479:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 826,
                      "src": "9471:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9471:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 806,
                        "name": "elapsedVestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "9497:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 807,
                        "name": "userShareOfStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "9524:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9497:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 809,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "9544:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9497:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9471:75:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 812,
                      "name": "elapsedTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "9561:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 813,
                      "name": "releaseFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "9576:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9561:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "9644:77:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 818,
                              "name": "userEntitlement",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "9665:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 819,
                              "name": "elapsedTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "9683:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9665:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 821,
                            "name": "releaseFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "9697:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9665:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 757,
                        "id": 823,
                        "nodeType": "Return",
                        "src": "9658:52:3"
                      }
                    ]
                  },
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "9557:164:3",
                  "trueBody": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "9591:47:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 815,
                          "name": "userEntitlement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 805,
                          "src": "9612:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 757,
                        "id": 816,
                        "nodeType": "Return",
                        "src": "9605:22:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateShareToClaim",
            "nameLocation": "8839:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8870:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "8862:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8862:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8861:14:3"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "8898:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8898:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8897:9:3"
            },
            "scope": 885,
            "src": "8830:914:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "9862:398:3",
              "statements": [
                {
                  "assignments": [
                    833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 833,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "9879:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 883,
                      "src": "9872:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 832,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9872:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 836,
                  "initialValue": {
                    "expression": {
                      "id": 834,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "9891:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$21_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collectiveStart",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "9891:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9872:49:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 837,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "9935:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9948:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9935:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 842,
                  "nodeType": "IfStatement",
                  "src": "9931:28:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9958:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 831,
                    "id": 841,
                    "nodeType": "Return",
                    "src": "9951:8:3"
                  }
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "vestingTime",
                      "nameLocation": "9976:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 883,
                      "src": "9969:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9969:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "expression": {
                      "id": 845,
                      "name": "collectiveInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "9990:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collective_$21_storage",
                        "typeString": "struct BuidlCollective.Collective storage ref"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vestingTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "9990:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9969:47:3"
                },
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nameLocation": "10033:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 883,
                      "src": "10026:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10026:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 852,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10053:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10053:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10046:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10046:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10046:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 855,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "10072:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "10046:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10026:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 858,
                      "name": "vestingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "10095:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 859,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "10110:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "10095:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 863,
                  "nodeType": "IfStatement",
                  "src": "10091:40:3",
                  "trueBody": {
                    "expression": {
                      "id": 861,
                      "name": "BP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "10129:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "functionReturnParameters": 831,
                    "id": 862,
                    "nodeType": "Return",
                    "src": "10122:9:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 864,
                      "name": "timePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "10145:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 865,
                        "name": "collectiveInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "10159:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collective_$21_storage",
                          "typeString": "struct BuidlCollective.Collective storage ref"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cliff",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "10159:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "10145:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 870,
                  "nodeType": "IfStatement",
                  "src": "10141:48:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10188:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 831,
                    "id": 869,
                    "nodeType": "Return",
                    "src": "10181:8:3"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 873,
                            "name": "timePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "10214:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10206:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 871,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10206:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10206:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 875,
                        "name": "BP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "10228:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "10206:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 879,
                          "name": "vestingTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "10241:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10233:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10233:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10233:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10206:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 831,
                  "id": 882,
                  "nodeType": "Return",
                  "src": "10199:54:3"
                }
              ]
            },
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingPercent",
            "nameLocation": "9811:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9828:2:3"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "9853:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9853:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9852:9:3"
            },
            "scope": 885,
            "src": "9802:458:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 886,
        "src": "349:9913:3",
        "usedErrors": []
      }
    ],
    "src": "35:10228:3"
  },
  "bytecode": "60e06040526203f4806010553480156200001857600080fd5b5060405162002c5b38038062002c5b8339810160408190526200003b91620002a1565b8282828260009080519060200190620000569291906200012e565b5081516200006c9060019060208501906200012e565b5060ff81166080524660a0526200008262000092565b60c0525062000407945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c6919062000363565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200013c9062000326565b90600052602060002090601f016020900481019282620001605760008555620001ab565b82601f106200017b57805160ff1916838001178555620001ab565b82800160010185558215620001ab579182015b82811115620001ab5782518255916020019190600101906200018e565b50620001b9929150620001bd565b5090565b5b80821115620001b95760008155600101620001be565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001fc57600080fd5b81516001600160401b0380821115620002195762000219620001d4565b604051601f8301601f19908116603f01168101908282118183101715620002445762000244620001d4565b816040528381526020925086838588010111156200026157600080fd5b600091505b8382101562000285578582018301518183018401529082019062000266565b83821115620002975760008385830101525b9695505050505050565b600080600060608486031215620002b757600080fd5b83516001600160401b0380821115620002cf57600080fd5b620002dd87838801620001ea565b94506020860151915080821115620002f457600080fd5b506200030386828701620001ea565b925050604084015160ff811681146200031b57600080fd5b809150509250925092565b600181811c908216806200033b57607f821691505b602082108114156200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200038057607f831692505b6020808410821415620003a157634e487b7160e01b86526022600452602486fd5b818015620003b85760018114620003ca57620003f9565b60ff19861689528489019650620003f9565b60008a81526020902060005b86811015620003f15781548b820152908501908301620003d6565b505084890196505b509498975050505050505050565b60805160a05160c051612824620004376000396000610e3201526000610dfd0152600061034201526128246000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a9320688116100ad578063dd62ed3e1161007c578063dd62ed3e14610514578063e0c9802f1461053f578063e2f273bd1461058d578063f5dab711146105a0578063f851a4401461062657600080fd5b8063a93206881461048a578063d32e81a5146104ef578063d505accf146104f8578063d77a1d3a1461050b57600080fd5b806395d89b41116100f457806395d89b411461043e5780639cfdbd5e14610446578063a4c8b46b1461044f578063a694fc3a14610464578063a9059cbb1461047757600080fd5b806370a08231146103d55780637d9fce4d146103f55780637ecebe0014610415578063817b1cd21461043557600080fd5b80632e17de78116101a85780633644e515116101775780633644e5151461037e5780634ae99d30146103865780634c33fe941461038e5780634f64b2be146103a15780635da69cb6146103cc57600080fd5b80632e17de781461030357806330adf81f14610316578063313ce5671461033d57806335322f371461037657600080fd5b806318160ddd116101e457806318160ddd1461027f5780631959a002146102885780631e83409a146102dd57806323b872dd146102f057600080fd5b806301e1d1141461021657806306fdde0314610232578063095ea7b31461024757806309d0e30c1461026a575b600080fd5b61021f600a5481565b6040519081526020015b60405180910390f35b61023a610639565b6040516102299190611e4f565b61025a610255366004611eb9565b6106c7565b6040519015158152602001610229565b61027d6102783660046120d2565b610734565b005b61021f60025481565b6102bd6102963660046121cc565b600c6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610229565b61027d6102eb3660046121cc565b610983565b61025a6102fe3660046121e9565b6109f0565b61027d61031136600461222a565b610ad0565b61021f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103647f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610229565b61027d610cc6565b61021f610df9565b61025a610e54565b61027d61039c3660046121cc565b6110c2565b6103b46103af36600461222a565b6110fb565b6040516001600160a01b039091168152602001610229565b61021f60105481565b61021f6103e33660046121cc565b60036020526000908152604090205481565b6104006305f5e10081565b60405163ffffffff9091168152602001610229565b61021f6104233660046121cc565b60056020526000908152604090205481565b61021f600f5481565b61023a611125565b61040061271081565b610457611132565b6040516102299190612243565b61027d61047236600461222a565b6112f6565b61025a610485366004611eb9565b6114a1565b61049d61049836600461222a565b611507565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b03908116828401529183015190911660608083019190915290910151909116608082015260a001610229565b61021f600d5481565b61027d610506366004612289565b6115b0565b61021f600e5481565b61021f610522366004612300565b600460209081526000928352604080842090915290825290205481565b600b546105669063ffffffff808216916401000000008104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610229565b61027d61059b3660046121cc565b611801565b6105ed6105ae3660046121cc565b60086020526000908152604090208054600182015460029092015490916001600160801b0380821692600160801b90920416906001600160a01b031684565b60405161022994939291909384526001600160801b039283166020850152911660408301526001600160a01b0316606082015260800190565b6009546103b4906001600160a01b031681565b6000805461064690612339565b80601f016020809104026020016040519081016040528092919081815260200182805461067290612339565b80156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107229086815260200190565b60405180910390a35060015b92915050565b6009546001600160a01b0316331461074b57600080fd5b8451600b80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b199081169282166401000000000267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b8181101561092757600060405180608001604052808584815181106107cb576107cb61236e565b602002602001015181526020018784815181106107ea576107ea61236e565b60200260200101516001600160801b0316815260200160006001600160801b031681526020018684815181106108225761082261236e565b60200260200101516001600160a01b03168152509050806008600089858151811061084f5761084f61236e565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208451815590840151918401516001600160801b03908116600160801b02921691909117600182015560609092015160029092018054929091166001600160a01b031990921691909117905586516007908890849081106108d9576108d961236e565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055508061091f8161239a565b9150506107a4565b50600b546040517f416073e33674c1f05095c354d2b4b414ca3ae45d0ecba40599c89f1ee63c4b359161097391889188918891889163ffffffff64010000000083048116921690612429565b60405180910390a1505050505050565b600d544211156109e757600d5461099a90426124d3565b600a54600f546109ad90612710906124ea565b6109b79190612509565b6109c191906124ea565b600e60008282546109d2919061252b565b909155505042600d556109e48161186c565b50565b6109e48161186c565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610a4c57610a2783826124d3565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610a749084906124d3565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206127cf83398151915290610abd9087815260200190565b60405180910390a3506001949350505050565b600d54421115610c3857600d54610ae790426124d3565b600a54600f54610afa90612710906124ea565b610b049190612509565b610b0e91906124ea565b600e6000828254610b1f919061252b565b909155505042600d55610b313361186c565b600a546000906305f5e100610b48612710856124ea565b610b5291906124ea565b610b5c9190612509565b336000908152600c60205260409020549091508110610bbb5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b60405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af1158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190612543565b5050336000908152600c602052604081205550565b610c413361186c565b600a546000906305f5e100610c58612710856124ea565b610c6291906124ea565b610c6c9190612509565b336000908152600c60205260409020549091508110610bbb5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b6044820152606401610bb2565b600d54421115610dce57600d54610cdd90426124d3565b600a54600f54610cf090612710906124ea565b610cfa9190612509565b610d0491906124ea565b600e6000828254610d15919061252b565b909155505042600d55600a54336000818152600c6020526040902054309263a9059cbb92916305f5e10091610d49916124ea565b610d539190612509565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc29190612543565b50610dcc3361186c565b565b600a54336000818152600c6020526040902054309263a9059cbb92916305f5e10091610d49916124ea565b60007f00000000000000000000000000000000000000000000000000000000000000004614610e2f57610e2a611ac5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6009546000906001600160a01b03163314610e6e57600080fd5b60065462010000900460ff1615610e8457600080fd5b6006805462ff0000191662010000179055600780546040805160208084028201810190925282815260009390929091830182828015610eec57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ece575b505050505090506000806000805b84518110156110405760086000868381518110610f1957610f1961236e565b6020908102919091018101516001600160a01b0390811683529082019290925260400160002080546002820154885192975090921690879084908110610f6157610f6161236e565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190612543565b5060018601546000906305f5e10090611008906001600160801b0316856124ea565b6110129190612509565b905061101e818661252b565b945061102a8282611b5f565b50505080806110389061239a565b915050610efa565b50600b805463ffffffff60401b1916600160401b4263ffffffff9081168202929092179283905561107f92640100000000810483169291900416612565565b63ffffffff16600d556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a15050505090565b6009546001600160a01b031633146110d957600080fd5b60065462010000900460ff16156110ef57600080fd5b806001600160a01b0316ff5b6007818154811061110b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001805461064690612339565b60075460609060009067ffffffffffffffff81111561115357611153611ee5565b60405190808252806020026020018201604052801561117c578160200160208202803683370190505b50905060005b6007548110156112f057600060086000600784815481106111a5576111a561236e565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910181206002015460078054919093169350909190849081106111ef576111ef61236e565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c919061258d565b9050600060086000600786815481106112875761128761236e565b60009182526020808320909101546001600160a01b03168352820192909252604001902054855190831015915081908690869081106112c8576112c861236e565b60200260200101901515908115158152505050505080806112e89061239a565b915050611182565b50919050565b600d544211156113f957600d5461130d90426124d3565b600a54600f5461132090612710906124ea565b61132a9190612509565b61133491906124ea565b600e6000828254611345919061252b565b909155505042600d556040805160808101909152600a546000919081906305f5e100611373612710876124ea565b61137d91906124ea565b6113879190612509565b8152602001600e5481526020014281526020016113a2611bb9565b9052336000908152600c602090815260408083208451815591840151600183015583015160028201556060830151600390910155600f805492935084929091906113ed90849061252b565b909155506109e4915050565b6040805160808101909152600a546000919081906305f5e10061141e612710876124ea565b61142891906124ea565b6114329190612509565b8152602001600e54815260200142815260200161144d611bb9565b9052336000908152600c602090815260408083208451815591840151600183015583015160028201556060830151600390910155600f8054929350849290919061149890849061252b565b90915550505050565b336000908152600360205260408120805483919083906114c29084906124d3565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206127cf833981519152906107229086815260200190565b604080516080810182526000808252602082018190529181018290526060810182905260006007848154811061153f5761153f61236e565b60009182526020808320909101546001600160a01b039081168084526008835260409384902084516080810186528154815260018201546001600160801b0380821696830196909652600160801b900490941694840194909452600290930154166060820152909590945092505050565b428410156116005760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610bb2565b600061160a610df9565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611723573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117595750886001600160a01b0316816001600160a01b0316145b6117965760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610bb2565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6009546001600160a01b0316331461181857600080fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f39060200160405180910390a150565b600061187782611c5d565b9050600060078054806020026020016040519081016040528092919081815260200182805480156118d157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118b3575b505050505090506000815167ffffffffffffffff8111156118f4576118f4611ee5565b60405190808252806020026020018201604052801561191d578160200160208202803683370190505b5090508215611abf57600e546001600160a01b0385166000908152600c602052604090206001015561194d611bb9565b6001600160a01b0385166000908152600c6020526040812060038101929092554260028301558154859291906119849084906124d3565b9091555050600a546119a190859061199c90866124ea565b611d7d565b60005b8251811015611a805760006119b98583611ddf565b9050808383815181106119ce576119ce61236e565b6020026020010181815250508382815181106119ec576119ec61236e565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b9190612543565b50508080611a789061239a565b9150506119a4565b507f039799ae7423f24077d39da7d23f675b0a56d381a884d5714932b9dc762bdb5284848484604051611ab694939291906125a6565b60405180910390a15b50505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611af791906125df565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254611b71919061252b565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206127cf83398151915291015b60405180910390a35050565b600b54600090600160401b900463ffffffff1680611bd957600091505090565b600b5463ffffffff166000611bee834261267b565b90508063ffffffff168263ffffffff1611611c0e57506127109392505050565b600b5463ffffffff640100000000909104811690821611611c33576000935050505090565b63ffffffff80831690611c4b906127109084166124ea565b611c559190612509565b935050505090565b6001600160a01b0381166000908152600c60205260408120600201548190611c8590426124d3565b6001600160a01b0384166000908152600c602052604081206003015491925090611cad611bb9565b611cb791906124d3565b6001600160a01b0385166000908152600c6020526040812060010154600e549293509091611ce591906124d3565b90506000611cf38483612509565b6001600160a01b0387166000908152600c6020526040812054919250908290611d1f90612710906124ea565b611d299190612509565b90506000612710611d3a83876124ea565b611d449190612509565b90506010548610611d5a57979650505050505050565b601054611d6787836124ea565b611d719190612509565b98975050505050505050565b6001600160a01b03821660009081526003602052604081208054839290611da59084906124d3565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206127cf83398151915290602001611bad565b6000611df16305f5e1006127106127b1565b63ffffffff16836008600060078681548110611e0f57611e0f61236e565b60009182526020808320909101546001600160a01b03168352820192909252604001902054611e3e91906124ea565b611e489190612509565b9392505050565b600060208083528351808285015260005b81811015611e7c57858101830151858201604001528201611e60565b81811115611e8e576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146109e457600080fd5b60008060408385031215611ecc57600080fd5b8235611ed781611ea4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f1e57611f1e611ee5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f4d57611f4d611ee5565b604052919050565b803563ffffffff81168114611f6957600080fd5b919050565b600067ffffffffffffffff821115611f8857611f88611ee5565b5060051b60200190565b600082601f830112611fa357600080fd5b81356020611fb8611fb383611f6e565b611f24565b82815260059290921b84018101918181019086841115611fd757600080fd5b8286015b84811015611ffb578035611fee81611ea4565b8352918301918301611fdb565b509695505050505050565b600082601f83011261201757600080fd5b81356020612027611fb383611f6e565b82815260059290921b8401810191818101908684111561204657600080fd5b8286015b84811015611ffb5780356001600160801b038116811461206a5760008081fd5b835291830191830161204a565b600082601f83011261208857600080fd5b81356020612098611fb383611f6e565b82815260059290921b840181019181810190868411156120b757600080fd5b8286015b84811015611ffb57803583529183019183016120bb565b600080600080600085870360e08112156120eb57600080fd5b60608112156120f957600080fd5b50612102611efb565b61210b87611f55565b815261211960208801611f55565b602082015261212a60408801611f55565b60408201529450606086013567ffffffffffffffff8082111561214c57600080fd5b61215889838a01611f92565b9550608088013591508082111561216e57600080fd5b61217a89838a01612006565b945060a088013591508082111561219057600080fd5b61219c89838a01611f92565b935060c08801359150808211156121b257600080fd5b506121bf88828901612077565b9150509295509295909350565b6000602082840312156121de57600080fd5b8135611e4881611ea4565b6000806000606084860312156121fe57600080fd5b833561220981611ea4565b9250602084013561221981611ea4565b929592945050506040919091013590565b60006020828403121561223c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561227d57835115158352928401929184019160010161225f565b50909695505050505050565b600080600080600080600060e0888a0312156122a457600080fd5b87356122af81611ea4565b965060208801356122bf81611ea4565b95506040880135945060608801359350608088013560ff811681146122e357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561231357600080fd5b823561231e81611ea4565b9150602083013561232e81611ea4565b809150509250929050565b600181811c9082168061234d57607f821691505b602082108114156112f057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156123ae576123ae612384565b5060010190565b600081518084526020808501945080840160005b838110156123ee5781516001600160a01b0316875295820195908201906001016123c9565b509495945050505050565b600081518084526020808501945080840160005b838110156123ee5781518752958201959082019060010161240d565b60c08152600061243c60c08301896123b5565b82810360208481019190915288518083528982019282019060005b8181101561247c5784516001600160801b031683529383019391830191600101612457565b50508481036040860152612490818a6123b5565b9250505082810360608401526124a681876123f9565b9150506124bb608083018563ffffffff169052565b63ffffffff831660a08301525b979650505050505050565b6000828210156124e5576124e5612384565b500390565b600081600019048311821515161561250457612504612384565b500290565b60008261252657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561253e5761253e612384565b500190565b60006020828403121561255557600080fd5b81518015158114611e4857600080fd5b600063ffffffff80831681851680830382111561258457612584612384565b01949350505050565b60006020828403121561259f57600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006125cd60808301856123b5565b82810360608401526124c881856123f9565b600080835481600182811c9150808316806125fb57607f831692505b602080841082141561261b57634e487b7160e01b86526022600452602486fd5b81801561262f57600181146126405761266d565b60ff1986168952848901965061266d565b60008a81526020902060005b868110156126655781548b82015290850190830161264c565b505084890196505b509498975050505050505050565b600063ffffffff8381169083168181101561269857612698612384565b039392505050565b600181815b808511156126dd578163ffffffff048211156126c3576126c3612384565b808516156126d057918102915b93841c93908002906126a5565b509250929050565b6000826126f45750600161072e565b816127015750600061072e565b8160018114612717576002811461272157612752565b600191505061072e565b60ff84111561273257612732612384565b6001841b915063ffffffff82111561274c5761274c612384565b5061072e565b5060208310610133831016604e8410600b8410161715612789575081810a63ffffffff81111561278457612784612384565b61072e565b61279383836126a0565b8063ffffffff048211156127a9576127a9612384565b029392505050565b600063ffffffff6127c68185168285166126e5565b94935050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edef0984763cee00817e64c3a7276c4e48db2f5131ca1409718576eae3e846ac64736f6c634300080a0033",
  "bytecodeSha1": "5393e131accac64aafa531411a8baed834f20c83",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "BuidlCollective",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "3": {
        "BuidlCollective._calculateShareToClaim": {
          "77": [
            9561,
            9589,
            false
          ]
        },
        "BuidlCollective._claim": {
          "74": [
            7561,
            7570,
            false
          ]
        },
        "BuidlCollective.cancel": {
          "73": [
            3651,
            3677,
            true
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "75": [
            10095,
            10120,
            false
          ],
          "76": [
            10145,
            10179,
            false
          ]
        },
        "BuidlCollective.startCollective": {
          "72": [
            3971,
            3997,
            true
          ]
        },
        "BuidlCollective.unstake": {
          "71": [
            6778,
            6817,
            true
          ]
        }
      },
      "4": {
        "ERC20.DOMAIN_SEPARATOR": {
          "79": [
            5497,
            5530,
            true
          ]
        },
        "ERC20.permit": {
          "80": [
            4324,
            4351,
            true
          ],
          "81": [
            5166,
            5196,
            false
          ],
          "82": [
            5200,
            5225,
            true
          ]
        },
        "ERC20.transferFrom": {
          "78": [
            3552,
            3580,
            false
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "3": {
        "BuidlCollective._calculateShareToClaim": {
          "65": [
            9605,
            9627
          ],
          "66": [
            9658,
            9710
          ]
        },
        "BuidlCollective._claim": {
          "49": [
            7586,
            7630
          ],
          "50": [
            7644,
            7711
          ],
          "51": [
            7725,
            7776
          ],
          "52": [
            7790,
            7828
          ],
          "53": [
            7842,
            7874
          ],
          "54": [
            8015,
            8034
          ],
          "55": [
            8052,
            8093
          ],
          "56": [
            7928,
            7931
          ],
          "57": [
            8121,
            8165
          ]
        },
        "BuidlCollective.cancel": {
          "32": [
            3643,
            3678
          ],
          "33": [
            3688,
            3704
          ]
        },
        "BuidlCollective.claim": {
          "9": [
            7254,
            7266
          ]
        },
        "BuidlCollective.convertShareToToken": {
          "70": [
            8289,
            8363
          ]
        },
        "BuidlCollective.getVestingPercent": {
          "62": [
            9951,
            9959
          ],
          "63": [
            10181,
            10189
          ],
          "64": [
            10199,
            10253
          ]
        },
        "BuidlCollective.initialize": {
          "3": [
            2810,
            2842
          ],
          "4": [
            2852,
            2886
          ],
          "5": [
            3155,
            3180
          ],
          "6": [
            3194,
            3217
          ],
          "7": [
            2979,
            2982
          ],
          "8": [
            3237,
            3355
          ]
        },
        "BuidlCollective.pokeApproval": {
          "34": [
            5803,
            5826
          ],
          "35": [
            5564,
            5567
          ],
          "36": [
            5846,
            5862
          ]
        },
        "BuidlCollective.readToken": {
          "42": [
            5285,
            5325
          ]
        },
        "BuidlCollective.stake": {
          "37": [
            6516,
            6540
          ],
          "38": [
            6550,
            6576
          ]
        },
        "BuidlCollective.startCollective": {
          "22": [
            3963,
            3998
          ],
          "23": [
            4008,
            4032
          ],
          "24": [
            4232,
            4266
          ],
          "25": [
            4380,
            4447
          ],
          "26": [
            4591,
            4617
          ],
          "27": [
            4681,
            4711
          ],
          "28": [
            4213,
            4216
          ],
          "29": [
            4731,
            4787
          ],
          "30": [
            4797,
            4867
          ],
          "31": [
            4877,
            4920
          ]
        },
        "BuidlCollective.unstake": {
          "15": [
            6667,
            6685
          ],
          "16": [
            6769,
            6844
          ],
          "17": [
            6854,
            6913
          ],
          "18": [
            6923,
            6962
          ]
        },
        "BuidlCollective.unstakeAll": {
          "19": [
            7037,
            7148
          ],
          "20": [
            7158,
            7176
          ]
        },
        "BuidlCollective.updateAdmin": {
          "47": [
            3790,
            3807
          ],
          "48": [
            3852,
            3879
          ]
        }
      },
      "4": {
        "ERC20.DOMAIN_SEPARATOR": {
          "21": [
            5478,
            5616
          ]
        },
        "ERC20._burn": {
          "67": [
            6718,
            6743
          ],
          "68": [
            6886,
            6907
          ],
          "69": [
            6928,
            6967
          ]
        },
        "ERC20._mint": {
          "59": [
            6385,
            6406
          ],
          "60": [
            6552,
            6575
          ],
          "61": [
            6596,
            6633
          ]
        },
        "ERC20.approve": {
          "0": [
            2788,
            2827
          ],
          "1": [
            2838,
            2880
          ],
          "2": [
            2891,
            2902
          ]
        },
        "ERC20.computeDomainSeparator": {
          "58": [
            5713,
            6114
          ]
        },
        "ERC20.permit": {
          "43": [
            4316,
            4379
          ],
          "44": [
            5141,
            5273
          ],
          "45": [
            5288,
            5332
          ],
          "46": [
            5353,
            5389
          ]
        },
        "ERC20.transfer": {
          "39": [
            3029,
            3060
          ],
          "40": [
            3206,
            3229
          ],
          "41": [
            3250,
            3287
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            3594,
            3640
          ],
          "11": [
            3651,
            3676
          ],
          "12": [
            3822,
            3845
          ],
          "13": [
            3866,
            3897
          ],
          "14": [
            3908,
            3919
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "ERC20",
    "IBuidlCollective",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a9320688116100ad578063dd62ed3e1161007c578063dd62ed3e14610514578063e0c9802f1461053f578063e2f273bd1461058d578063f5dab711146105a0578063f851a4401461062657600080fd5b8063a93206881461048a578063d32e81a5146104ef578063d505accf146104f8578063d77a1d3a1461050b57600080fd5b806395d89b41116100f457806395d89b411461043e5780639cfdbd5e14610446578063a4c8b46b1461044f578063a694fc3a14610464578063a9059cbb1461047757600080fd5b806370a08231146103d55780637d9fce4d146103f55780637ecebe0014610415578063817b1cd21461043557600080fd5b80632e17de78116101a85780633644e515116101775780633644e5151461037e5780634ae99d30146103865780634c33fe941461038e5780634f64b2be146103a15780635da69cb6146103cc57600080fd5b80632e17de781461030357806330adf81f14610316578063313ce5671461033d57806335322f371461037657600080fd5b806318160ddd116101e457806318160ddd1461027f5780631959a002146102885780631e83409a146102dd57806323b872dd146102f057600080fd5b806301e1d1141461021657806306fdde0314610232578063095ea7b31461024757806309d0e30c1461026a575b600080fd5b61021f600a5481565b6040519081526020015b60405180910390f35b61023a610639565b6040516102299190611e4f565b61025a610255366004611eb9565b6106c7565b6040519015158152602001610229565b61027d6102783660046120d2565b610734565b005b61021f60025481565b6102bd6102963660046121cc565b600c6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610229565b61027d6102eb3660046121cc565b610983565b61025a6102fe3660046121e9565b6109f0565b61027d61031136600461222a565b610ad0565b61021f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103647f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610229565b61027d610cc6565b61021f610df9565b61025a610e54565b61027d61039c3660046121cc565b6110c2565b6103b46103af36600461222a565b6110fb565b6040516001600160a01b039091168152602001610229565b61021f60105481565b61021f6103e33660046121cc565b60036020526000908152604090205481565b6104006305f5e10081565b60405163ffffffff9091168152602001610229565b61021f6104233660046121cc565b60056020526000908152604090205481565b61021f600f5481565b61023a611125565b61040061271081565b610457611132565b6040516102299190612243565b61027d61047236600461222a565b6112f6565b61025a610485366004611eb9565b6114a1565b61049d61049836600461222a565b611507565b604080516001600160a01b03938416815282516020808301919091528301516001600160801b03908116828401529183015190911660608083019190915290910151909116608082015260a001610229565b61021f600d5481565b61027d610506366004612289565b6115b0565b61021f600e5481565b61021f610522366004612300565b600460209081526000928352604080842090915290825290205481565b600b546105669063ffffffff808216916401000000008104821691600160401b9091041683565b6040805163ffffffff94851681529284166020840152921691810191909152606001610229565b61027d61059b3660046121cc565b611801565b6105ed6105ae3660046121cc565b60086020526000908152604090208054600182015460029092015490916001600160801b0380821692600160801b90920416906001600160a01b031684565b60405161022994939291909384526001600160801b039283166020850152911660408301526001600160a01b0316606082015260800190565b6009546103b4906001600160a01b031681565b6000805461064690612339565b80601f016020809104026020016040519081016040528092919081815260200182805461067290612339565b80156106bf5780601f10610694576101008083540402835291602001916106bf565b820191906000526020600020905b8154815290600101906020018083116106a257829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107229086815260200190565b60405180910390a35060015b92915050565b6009546001600160a01b0316331461074b57600080fd5b8451600b80546020880151604089015163ffffffff908116600160401b0263ffffffff60401b199081169282166401000000000267ffffffffffffffff1990941691909516179190911792909216919091179055835160005b8181101561092757600060405180608001604052808584815181106107cb576107cb61236e565b602002602001015181526020018784815181106107ea576107ea61236e565b60200260200101516001600160801b0316815260200160006001600160801b031681526020018684815181106108225761082261236e565b60200260200101516001600160a01b03168152509050806008600089858151811061084f5761084f61236e565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208451815590840151918401516001600160801b03908116600160801b02921691909117600182015560609092015160029092018054929091166001600160a01b031990921691909117905586516007908890849081106108d9576108d961236e565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055508061091f8161239a565b9150506107a4565b50600b546040517f416073e33674c1f05095c354d2b4b414ca3ae45d0ecba40599c89f1ee63c4b359161097391889188918891889163ffffffff64010000000083048116921690612429565b60405180910390a1505050505050565b600d544211156109e757600d5461099a90426124d3565b600a54600f546109ad90612710906124ea565b6109b79190612509565b6109c191906124ea565b600e60008282546109d2919061252b565b909155505042600d556109e48161186c565b50565b6109e48161186c565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610a4c57610a2783826124d3565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610a749084906124d3565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206127cf83398151915290610abd9087815260200190565b60405180910390a3506001949350505050565b600d54421115610c3857600d54610ae790426124d3565b600a54600f54610afa90612710906124ea565b610b049190612509565b610b0e91906124ea565b600e6000828254610b1f919061252b565b909155505042600d55610b313361186c565b600a546000906305f5e100610b48612710856124ea565b610b5291906124ea565b610b5c9190612509565b336000908152600c60205260409020549091508110610bbb5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b60448201526064015b60405180910390fd5b60405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af1158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190612543565b5050336000908152600c602052604081205550565b610c413361186c565b600a546000906305f5e100610c58612710856124ea565b610c6291906124ea565b610c6c9190612509565b336000908152600c60205260409020549091508110610bbb5760405162461bcd60e51b8152602060048201526016602482015275554e5354414b4520414d4f554e5420544f4f2042494760501b6044820152606401610bb2565b600d54421115610dce57600d54610cdd90426124d3565b600a54600f54610cf090612710906124ea565b610cfa9190612509565b610d0491906124ea565b600e6000828254610d15919061252b565b909155505042600d55600a54336000818152600c6020526040902054309263a9059cbb92916305f5e10091610d49916124ea565b610d539190612509565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc29190612543565b50610dcc3361186c565b565b600a54336000818152600c6020526040902054309263a9059cbb92916305f5e10091610d49916124ea565b60007f00000000000000000000000000000000000000000000000000000000000000004614610e2f57610e2a611ac5565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6009546000906001600160a01b03163314610e6e57600080fd5b60065462010000900460ff1615610e8457600080fd5b6006805462ff0000191662010000179055600780546040805160208084028201810190925282815260009390929091830182828015610eec57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ece575b505050505090506000806000805b84518110156110405760086000868381518110610f1957610f1961236e565b6020908102919091018101516001600160a01b0390811683529082019290925260400160002080546002820154885192975090921690879084908110610f6157610f6161236e565b60209081029190910101516040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190612543565b5060018601546000906305f5e10090611008906001600160801b0316856124ea565b6110129190612509565b905061101e818661252b565b945061102a8282611b5f565b50505080806110389061239a565b915050610efa565b50600b805463ffffffff60401b1916600160401b4263ffffffff9081168202929092179283905561107f92640100000000810483169291900416612565565b63ffffffff16600d556040514281527f83aaee11563f280eac61ebd060f088ce7577d5e823efa6c78de1cfec8167605d9060200160405180910390a15050505090565b6009546001600160a01b031633146110d957600080fd5b60065462010000900460ff16156110ef57600080fd5b806001600160a01b0316ff5b6007818154811061110b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001805461064690612339565b60075460609060009067ffffffffffffffff81111561115357611153611ee5565b60405190808252806020026020018201604052801561117c578160200160208202803683370190505b50905060005b6007548110156112f057600060086000600784815481106111a5576111a561236e565b60009182526020808320909101546001600160a01b03908116845290830193909352604090910181206002015460078054919093169350909190849081106111ef576111ef61236e565b600091825260209091200154604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c919061258d565b9050600060086000600786815481106112875761128761236e565b60009182526020808320909101546001600160a01b03168352820192909252604001902054855190831015915081908690869081106112c8576112c861236e565b60200260200101901515908115158152505050505080806112e89061239a565b915050611182565b50919050565b600d544211156113f957600d5461130d90426124d3565b600a54600f5461132090612710906124ea565b61132a9190612509565b61133491906124ea565b600e6000828254611345919061252b565b909155505042600d556040805160808101909152600a546000919081906305f5e100611373612710876124ea565b61137d91906124ea565b6113879190612509565b8152602001600e5481526020014281526020016113a2611bb9565b9052336000908152600c602090815260408083208451815591840151600183015583015160028201556060830151600390910155600f805492935084929091906113ed90849061252b565b909155506109e4915050565b6040805160808101909152600a546000919081906305f5e10061141e612710876124ea565b61142891906124ea565b6114329190612509565b8152602001600e54815260200142815260200161144d611bb9565b9052336000908152600c602090815260408083208451815591840151600183015583015160028201556060830151600390910155600f8054929350849290919061149890849061252b565b90915550505050565b336000908152600360205260408120805483919083906114c29084906124d3565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206127cf833981519152906107229086815260200190565b604080516080810182526000808252602082018190529181018290526060810182905260006007848154811061153f5761153f61236e565b60009182526020808320909101546001600160a01b039081168084526008835260409384902084516080810186528154815260018201546001600160801b0380821696830196909652600160801b900490941694840194909452600290930154166060820152909590945092505050565b428410156116005760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610bb2565b600061160a610df9565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611723573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117595750886001600160a01b0316816001600160a01b0316145b6117965760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610bb2565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6009546001600160a01b0316331461181857600080fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527f39e7d4b9ba48f55a740a5192809dbc498fa12724c030b37dab126a3f6774c0f39060200160405180910390a150565b600061187782611c5d565b9050600060078054806020026020016040519081016040528092919081815260200182805480156118d157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116118b3575b505050505090506000815167ffffffffffffffff8111156118f4576118f4611ee5565b60405190808252806020026020018201604052801561191d578160200160208202803683370190505b5090508215611abf57600e546001600160a01b0385166000908152600c602052604090206001015561194d611bb9565b6001600160a01b0385166000908152600c6020526040812060038101929092554260028301558154859291906119849084906124d3565b9091555050600a546119a190859061199c90866124ea565b611d7d565b60005b8251811015611a805760006119b98583611ddf565b9050808383815181106119ce576119ce61236e565b6020026020010181815250508382815181106119ec576119ec61236e565b602090810291909101015160405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b9190612543565b50508080611a789061239a565b9150506119a4565b507f039799ae7423f24077d39da7d23f675b0a56d381a884d5714932b9dc762bdb5284848484604051611ab694939291906125a6565b60405180910390a15b50505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611af791906125df565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254611b71919061252b565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206127cf83398151915291015b60405180910390a35050565b600b54600090600160401b900463ffffffff1680611bd957600091505090565b600b5463ffffffff166000611bee834261267b565b90508063ffffffff168263ffffffff1611611c0e57506127109392505050565b600b5463ffffffff640100000000909104811690821611611c33576000935050505090565b63ffffffff80831690611c4b906127109084166124ea565b611c559190612509565b935050505090565b6001600160a01b0381166000908152600c60205260408120600201548190611c8590426124d3565b6001600160a01b0384166000908152600c602052604081206003015491925090611cad611bb9565b611cb791906124d3565b6001600160a01b0385166000908152600c6020526040812060010154600e549293509091611ce591906124d3565b90506000611cf38483612509565b6001600160a01b0387166000908152600c6020526040812054919250908290611d1f90612710906124ea565b611d299190612509565b90506000612710611d3a83876124ea565b611d449190612509565b90506010548610611d5a57979650505050505050565b601054611d6787836124ea565b611d719190612509565b98975050505050505050565b6001600160a01b03821660009081526003602052604081208054839290611da59084906124d3565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206127cf83398151915290602001611bad565b6000611df16305f5e1006127106127b1565b63ffffffff16836008600060078681548110611e0f57611e0f61236e565b60009182526020808320909101546001600160a01b03168352820192909252604001902054611e3e91906124ea565b611e489190612509565b9392505050565b600060208083528351808285015260005b81811015611e7c57858101830151858201604001528201611e60565b81811115611e8e576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146109e457600080fd5b60008060408385031215611ecc57600080fd5b8235611ed781611ea4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f1e57611f1e611ee5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f4d57611f4d611ee5565b604052919050565b803563ffffffff81168114611f6957600080fd5b919050565b600067ffffffffffffffff821115611f8857611f88611ee5565b5060051b60200190565b600082601f830112611fa357600080fd5b81356020611fb8611fb383611f6e565b611f24565b82815260059290921b84018101918181019086841115611fd757600080fd5b8286015b84811015611ffb578035611fee81611ea4565b8352918301918301611fdb565b509695505050505050565b600082601f83011261201757600080fd5b81356020612027611fb383611f6e565b82815260059290921b8401810191818101908684111561204657600080fd5b8286015b84811015611ffb5780356001600160801b038116811461206a5760008081fd5b835291830191830161204a565b600082601f83011261208857600080fd5b81356020612098611fb383611f6e565b82815260059290921b840181019181810190868411156120b757600080fd5b8286015b84811015611ffb57803583529183019183016120bb565b600080600080600085870360e08112156120eb57600080fd5b60608112156120f957600080fd5b50612102611efb565b61210b87611f55565b815261211960208801611f55565b602082015261212a60408801611f55565b60408201529450606086013567ffffffffffffffff8082111561214c57600080fd5b61215889838a01611f92565b9550608088013591508082111561216e57600080fd5b61217a89838a01612006565b945060a088013591508082111561219057600080fd5b61219c89838a01611f92565b935060c08801359150808211156121b257600080fd5b506121bf88828901612077565b9150509295509295909350565b6000602082840312156121de57600080fd5b8135611e4881611ea4565b6000806000606084860312156121fe57600080fd5b833561220981611ea4565b9250602084013561221981611ea4565b929592945050506040919091013590565b60006020828403121561223c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561227d57835115158352928401929184019160010161225f565b50909695505050505050565b600080600080600080600060e0888a0312156122a457600080fd5b87356122af81611ea4565b965060208801356122bf81611ea4565b95506040880135945060608801359350608088013560ff811681146122e357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561231357600080fd5b823561231e81611ea4565b9150602083013561232e81611ea4565b809150509250929050565b600181811c9082168061234d57607f821691505b602082108114156112f057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156123ae576123ae612384565b5060010190565b600081518084526020808501945080840160005b838110156123ee5781516001600160a01b0316875295820195908201906001016123c9565b509495945050505050565b600081518084526020808501945080840160005b838110156123ee5781518752958201959082019060010161240d565b60c08152600061243c60c08301896123b5565b82810360208481019190915288518083528982019282019060005b8181101561247c5784516001600160801b031683529383019391830191600101612457565b50508481036040860152612490818a6123b5565b9250505082810360608401526124a681876123f9565b9150506124bb608083018563ffffffff169052565b63ffffffff831660a08301525b979650505050505050565b6000828210156124e5576124e5612384565b500390565b600081600019048311821515161561250457612504612384565b500290565b60008261252657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561253e5761253e612384565b500190565b60006020828403121561255557600080fd5b81518015158114611e4857600080fd5b600063ffffffff80831681851680830382111561258457612584612384565b01949350505050565b60006020828403121561259f57600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006125cd60808301856123b5565b82810360608401526124c881856123f9565b600080835481600182811c9150808316806125fb57607f831692505b602080841082141561261b57634e487b7160e01b86526022600452602486fd5b81801561262f57600181146126405761266d565b60ff1986168952848901965061266d565b60008a81526020902060005b868110156126655781548b82015290850190830161264c565b505084890196505b509498975050505050505050565b600063ffffffff8381169083168181101561269857612698612384565b039392505050565b600181815b808511156126dd578163ffffffff048211156126c3576126c3612384565b808516156126d057918102915b93841c93908002906126a5565b509250929050565b6000826126f45750600161072e565b816127015750600061072e565b8160018114612717576002811461272157612752565b600191505061072e565b60ff84111561273257612732612384565b6001841b915063ffffffff82111561274c5761274c612384565b5061072e565b5060208310610133831016604e8410600b8410161715612789575081810a63ffffffff81111561278457612784612384565b61072e565b61279383836126a0565b8063ffffffff048211156127a9576127a9612384565b029392505050565b600063ffffffff6127c68185168285166126e5565b94935050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edef0984763cee00817e64c3a7276c4e48db2f5131ca1409718576eae3e846ac64736f6c634300080a0033",
  "deployedSourceMap": "349:9913:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:26;;;;;;;;;160:25:6;;;148:2;133:18;850:26:3;;;;;;;;1062:18:4;;;:::i;:::-;;;;;;;:::i;2670:239::-;;;;;;:::i;:::-;;:::i;:::-;;;1419:14:6;;1412:22;1394:41;;1382:2;1367:18;2670:239:4;1254:187:6;2221:1298:3;;;;;;:::i;:::-;;:::i;:::-;;1336:26:4;;;;;;1173:44:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6663:25:6;;;6719:2;6704:18;;6697:34;;;;6747:18;;;6740:34;6805:2;6790:18;;6783:34;6650:3;6635:19;1173:44:3;6432:391:6;7189:87:3;;;;;;:::i;:::-;;:::i;3322:604:4:-;;;;;;:::i;:::-;;:::i;6589:380:3:-;;;;;;:::i;:::-;;:::i;1677:167:4:-;;1727:117;1677:167;;1114:31;;;;;;;;7828:4:6;7816:17;;;7798:36;;7786:2;7771:18;1114:31:4;7656:184:6;6979:204:3;;;:::i;5402:221:4:-;;;:::i;3892:1035:3:-;;;:::i;3578:133::-;;;;;;:::i;:::-;;:::i;616:23::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8269:32:6;;;8251:51;;8239:2;8224:18;616:23:3;8105:203:6;1452:40:3;;;;;;1369:44:4;;;;;;:::i;:::-;;;;;;;;;;;;;;1119:48:3;;1160:7;1119:48;;;;;8586:10:6;8574:23;;;8556:42;;8544:2;8529:18;1119:48:3;8412:192:6;1959:41:4;;;;;;:::i;:::-;;;;;;;;;;;;;;1420:26:3;;;;;;1087:20:4;;;:::i;1079:34:3:-;;1108:5;1079:34;;5399:470;;;:::i;:::-;;;;;;;:::i;6225:358::-;;;;;;:::i;:::-;;:::i;2915:401:4:-;;;;;;:::i;:::-;;:::i;5145:187:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9537:15:6;;;9519:34;;9589:13;;9584:2;9569:18;;;9562:41;;;;9638:15;;9632:22;-1:-1:-1;;;;;9743:21:6;;;9723:18;;;9716:49;9811:15;;;9805:22;9801:31;;;9796:2;9781:18;;;9774:59;;;;9880:15;;;9874:22;9870:31;;;9864:3;9849:19;;9842:60;9468:3;9453:19;5145:187:3;9256:652:6;1240:29:3;;;;;;4117:1279:4;;;;;;:::i;:::-;;:::i;1354:23:3:-;;;;;;1420:64:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;967:32:3;;;;;;;;;;;;;;;;-1:-1:-1;;;967:32:3;;;;;;;;;;11346:10:6;11383:15;;;11365:34;;11435:15;;;11430:2;11415:18;;11408:43;11487:15;;11467:18;;;11460:43;;;;11324:2;11309:18;967:32:3;11140:369:6;3721:165:3;;;;;;:::i;:::-;;:::i;646:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;646:46:3;;;;-1:-1:-1;;;646:46:3;;;;;-1:-1:-1;;;;;646:46:3;;;;;;;;;;;;11745:25:6;;;-1:-1:-1;;;;;11859:15:6;;;11854:2;11839:18;;11832:43;11911:15;;11906:2;11891:18;;11884:43;-1:-1:-1;;;;;11963:32:6;11958:2;11943:18;;11936:60;11732:3;11717:19;;11514:488;699:20:3;;;;;-1:-1:-1;;;;;699:20:3;;;1062:18:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2670:239::-;2798:10;2768:4;2788:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2788:30:4;;;;;;;;;;:39;;;2843:37;2768:4;;2788:30;;2843:37;;;;2821:6;160:25:6;;148:2;133:18;;14:177;2843:37:4;;;;;;;;-1:-1:-1;2898:4:4;2670:239;;;;;:::o;2221:1298:3:-;1944:5;;-1:-1:-1;;;;;1944:5:3;1930:10;:19;1922:28;;;;;;2810:32;;:14:::1;:32:::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;2810:32:3::1;-1:-1:-1::0;;;;2852:34:3;;;2810:32;;::::1;::::0;::::1;-1:-1:-1::0;;2810:32:3;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;2852:34:::0;;;;;;2918:14;;2810:32:::1;2942:286;2966:11;2962:1;:15;2942:286;;;2998:18;3019:122;;;;;;;;3046:8;3055:1;3046:11;;;;;;;;:::i;:::-;;;;;;;3019:122;;;;3075:7;3083:1;3075:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3019:122:3::1;;;;;3103:1;-1:-1:-1::0;;;;;3019:122:3::1;;;;;3122:6;3129:1;3122:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3019:122:3::1;;;::::0;2998:143:::1;;3179:1;3155:9;:21;3165:7;3173:1;3165:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;3155:21:3;;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;3155:21:3;:25;;;;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;3155:25:3;;::::1;-1:-1:-1::0;;;3155:25:3::1;::::0;::::1;::::0;;;::::1;;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;-1:-1:-1::0;;;;;;3155:25:3;;::::1;::::0;;;::::1;::::0;;3206:10;;3194:6:::1;::::0;3206:7;;3214:1;;3206:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;3194:23;;::::1;::::0;::::1;::::0;;-1:-1:-1;3194:23:3;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;3194:23:3::1;-1:-1:-1::0;;;;;3194:23:3;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2979:3:3;::::1;::::0;::::1;:::i;:::-;;;;2942:286;;;-1:-1:-1::0;3306:14:3::1;:20:::0;3242:113:::1;::::0;::::1;::::0;::::1;::::0;3270:7;;3279;;3288:6;;3296:8;;3306:20:::1;::::0;;::::1;::::0;::::1;::::0;3328:26:::1;::::0;3242:113:::1;:::i;:::-;;;;;;;;2399:1120;2221:1298:::0;;;;;:::o;7189:87::-;5986:14;;5968:15;:32;5964:235;;;6080:14;;6062:32;;:15;:32;:::i;:::-;6047:11;;6028;;:16;;1108:5;;6028:16;:::i;:::-;:30;;;;:::i;:::-;:67;;;;:::i;:::-;6016:8;;:79;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:15:3;6109:14;:32;7254:12:::1;7261:4:::0;7254:6:::1;:12::i;:::-;7189:87:::0;:::o;5964:235::-;7254:12:::1;7261:4;7254:6;:12::i;3322:604:4:-:0;-1:-1:-1;;;;;3474:15:4;;3440:4;3474:15;;;:9;:15;;;;;;;;3490:10;3474:27;;;;;;;;-1:-1:-1;;3552:28:4;;3548:92;;3624:16;3634:6;3624:7;:16;:::i;:::-;-1:-1:-1;;;;;3594:15:4;;;;;;:9;:15;;;;;;;;3610:10;3594:27;;;;;;;:46;3548:92;-1:-1:-1;;;;;3651:15:4;;;;;;:9;:15;;;;;:25;;3670:6;;3651:15;:25;;3670:6;;3651:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3822:13:4;;;;;;;:9;:13;;;;;;;:23;;;;;;3871:26;3822:13;;3871:26;;;-1:-1:-1;;;;;;;;;;;3871:26:4;;;3839:6;160:25:6;;148:2;133:18;;14:177;3871:26:4;;;;;;;;-1:-1:-1;3915:4:4;;3322:604;-1:-1:-1;;;;3322:604:4:o;6589:380:3:-;5986:14;;5968:15;:32;5964:235;;;6080:14;;6062:32;;:15;:32;:::i;:::-;6047:11;;6028;;:16;;1108:5;;6028:16;:::i;:::-;:30;;;;:::i;:::-;:67;;;;:::i;:::-;6016:8;;:79;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:15:3;6109:14;:32;6667:18:::1;6674:10;6667:6;:18::i;:::-;6748:11;::::0;6695:9:::1;::::0;1160:7:::1;6707:20;1108:5;6707:15:::0;:20:::1;:::i;:::-;:38;;;;:::i;:::-;:52;;;;:::i;:::-;6791:10;6782:20;::::0;;;:8:::1;:20;::::0;;;;:35;6695:64;;-1:-1:-1;6778:39:3;::::1;6769:75;;;::::0;-1:-1:-1;;;6769:75:3;;15952:2:6;6769:75:3::1;::::0;::::1;15934:21:6::0;15991:2;15971:18;;;15964:30;-1:-1:-1;;;16010:18:6;;;16003:52;16072:18;;6769:75:3::1;;;;;;;;;6854:59;::::0;-1:-1:-1;;;6854:59:3;;6885:10:::1;6854:59;::::0;::::1;16275:51:6::0;16342:18;;;16335:34;;;6869:4:3::1;::::0;6854:30:::1;::::0;16248:18:6;;6854:59:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;6932:10:3::1;6961:1;6923:20:::0;;;:8:::1;:20;::::0;;;;:39;7189:87;:::o;5964:235::-;6667:18:::1;6674:10;6667:6;:18::i;:::-;6748:11;::::0;6695:9:::1;::::0;1160:7:::1;6707:20;1108:5;6707:15:::0;:20:::1;:::i;:::-;:38;;;;:::i;:::-;:52;;;;:::i;:::-;6791:10;6782:20;::::0;;;:8:::1;:20;::::0;;;;:35;6695:64;;-1:-1:-1;6778:39:3;::::1;6769:75;;;::::0;-1:-1:-1;;;6769:75:3;;15952:2:6;6769:75:3::1;::::0;::::1;15934:21:6::0;15991:2;15971:18;;;15964:30;-1:-1:-1;;;16010:18:6;;;16003:52;16072:18;;6769:75:3::1;15750:346:6::0;6979:204:3;5986:14;;5968:15;:32;5964:235;;;6080:14;;6062:32;;:15;:32;:::i;:::-;6047:11;;6028;;:16;;1108:5;;6028:16;:::i;:::-;:30;;;;:::i;:::-;:67;;;;:::i;:::-;6016:8;;:79;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:15:3;6109:14;:32;7118:11:::1;::::0;7068:10:::1;7080:20;::::0;;;:8:::1;:20;::::0;;;;:35;7052:4:::1;::::0;7037:30:::1;::::0;7068:10;1160:7:::1;::::0;7080:49:::1;::::0;::::1;:::i;:::-;:67;;;;:::i;:::-;7037:111;::::0;-1:-1:-1;;;;;;7037:111:3::1;::::0;;;;;;-1:-1:-1;;;;;16293:32:6;;;7037:111:3::1;::::0;::::1;16275:51:6::0;16342:18;;;16335:34;16248:18;;7037:111:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7158:18;7165:10;7158:6;:18::i;:::-;6979:204::o:0;5964:235::-;7118:11:::1;::::0;7068:10:::1;7080:20;::::0;;;:8:::1;:20;::::0;;;;:35;7052:4:::1;::::0;7037:30:::1;::::0;7068:10;1160:7:::1;::::0;7080:49:::1;::::0;::::1;:::i;5402:221:4:-:0;5459:7;5514:16;5497:13;:33;:119;;5592:24;:22;:24::i;:::-;5478:138;;5402:221;:::o;5497:119::-;-1:-1:-1;5549:24:4;;5402:221::o;3892:1035:3:-;1944:5;;3947:4;;-1:-1:-1;;;;;1944:5:3;1930:10;:19;1922:28;;;;;;3971:17:::1;::::0;;;::::1;;;:26;3963:35;;;::::0;::::1;;4008:17;:24:::0;;-1:-1:-1;;4008:24:3::1;::::0;::::1;::::0;;4069:6:::1;4042:33:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;4008:24;;4042:33;;4069:6;;4042:33;::::1;4069:6:::0;4042:33;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;4042:33:3::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;4085:28;4123:14:::0;4147:20:::1;4182:9:::0;4177:545:::1;4197:7;:14;4193:1;:18;4177:545;;;4245:9;:21;4255:7;4263:1;4255:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;4245:21:3;;::::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;4245:21:3;4298:17;;4351:15:::1;::::0;::::1;::::0;4387:10;;4245:21;;-1:-1:-1;4298:17:3;;4351:15:::1;::::0;4387:7;;4395:1;;4387:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;4380:67:::1;::::0;-1:-1:-1;;;4380:67:3;;-1:-1:-1;;;;;16920:15:6;;;4380:67:3::1;::::0;::::1;16902:34:6::0;4433:4:3::1;16952:18:6::0;;;16945:43;17004:18;;;16997:34;;;4380:31:3;;::::1;::::0;::::1;::::0;16837:18:6;;4380:67:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4555:16:3::1;::::0;::::1;::::0;4525:18:::1;::::0;4574:3:::1;::::0;4546:25:::1;::::0;-1:-1:-1;;;;;4555:16:3::1;4546:6:::0;:25:::1;:::i;:::-;:31;;;;:::i;:::-;4525:52:::0;-1:-1:-1;4591:26:3::1;4525:52:::0;4591:26;::::1;:::i;:::-;;;4681:30;4687:11;4700:10;4681:5;:30::i;:::-;4218:504;;;4213:3;;;;;:::i;:::-;;;;4177:545;;;-1:-1:-1::0;4731:14:3::1;:56:::0;;-1:-1:-1;;;;4731:56:3::1;-1:-1:-1::0;;;4771:15:3::1;4731:56;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;4814:53:::1;::::0;4847:20;;::::1;::::0;::::1;::::0;4814:30;;::::1;;:53;:::i;:::-;4797:70;;:14;:70:::0;4882:38:::1;::::0;4904:15:::1;160:25:6::0;;4882:38:3::1;::::0;148:2:6;133:18;4882:38:3::1;;;;;;;3953:974;;;;3892:1035:::0;:::o;3578:133::-;1944:5;;-1:-1:-1;;;;;1944:5:3;1930:10;:19;1922:28;;;;;;3651:17:::1;::::0;;;::::1;;;:26;3643:35;;;::::0;::::1;;3701:2;-1:-1:-1::0;;;;;3688:16:3::1;;616:23:::0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;616:23:3;;-1:-1:-1;616:23:3;:::o;1087:20:4:-;;;;;;;:::i;5399:470:3:-;5505:6;:13;5443;;5468:23;;5494:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5494:25:3;;5468:51;;5534:9;5529:308;5549:6;:13;5545:17;;5529:308;;;5583:19;5605:9;:20;5615:6;5622:1;5615:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5615:9:3;;;5605:20;;;;;;;;;;;;;;;:25;;;5671:6;:9;;5605:25;;;;;-1:-1:-1;5615:9:3;;5671:6;5678:1;;5671:9;;;;;;:::i;:::-;;;;;;;;;;;5664:55;;-1:-1:-1;;;5664:55:3;;-1:-1:-1;;;;;17505:15:6;;;5664:55:3;;;17487:34:6;5713:4:3;17537:18:6;;;17530:43;5671:9:3;;;;5664:27;;17422:18:6;;5664:55:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5644:75;;5733:13;5762:9;:20;5772:6;5779:1;5772:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5772:9:3;5762:20;;;;;;;;;;;;:27;5803:12;;5749:40;;;;;-1:-1:-1;5749:40:3;;5803:9;;5813:1;;5803:12;;;;;;:::i;:::-;;;;;;:23;;;;;;;;;;;5569:268;;;5564:3;;;;;:::i;:::-;;;;5529:308;;;-1:-1:-1;5853:9:3;5399:470;-1:-1:-1;5399:470:3:o;6225:358::-;5986:14;;5968:15;:32;5964:235;;;6080:14;;6062:32;;:15;:32;:::i;:::-;6047:11;;6028;;:16;;1108:5;;6028:16;:::i;:::-;:30;;;;:::i;:::-;:67;;;;:::i;:::-;6016:8;;:79;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:15:3;6109:14;:32;6400:106:::1;::::0;;::::1;::::0;::::1;::::0;;;6446:11:::1;::::0;6380:17:::1;::::0;6400:106;;;1160:7:::1;6409:16;1108:5;6409:11:::0;:16:::1;:::i;:::-;:34;;;;:::i;:::-;:48;;;;:::i;:::-;6400:106;;;;6459:8;;6400:106;;;;6469:15;6400:106;;;;6486:19;:17;:19::i;:::-;6400:106:::0;;6525:10:::1;6516:20;::::0;;;:8:::1;:20;::::0;;;;;;;:24;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;6550:11:::1;:26:::0;;6380:126;;-1:-1:-1;6565:11:3;;6550;;6516:20;6550:26:::1;::::0;6565:11;;6550:26:::1;:::i;:::-;::::0;;;-1:-1:-1;5964:235:3;;-1:-1:-1;;5964:235:3;;6400:106:::1;::::0;;::::1;::::0;::::1;::::0;;;6446:11:::1;::::0;6380:17:::1;::::0;6400:106;;;1160:7:::1;6409:16;1108:5;6409:11:::0;:16:::1;:::i;:::-;:34;;;;:::i;:::-;:48;;;;:::i;:::-;6400:106;;;;6459:8;;6400:106;;;;6469:15;6400:106;;;;6486:19;:17;:19::i;:::-;6400:106:::0;;6525:10:::1;6516:20;::::0;;;:8:::1;:20;::::0;;;;;;;:24;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;6550:11:::1;:26:::0;;6380:126;;-1:-1:-1;6565:11:3;;6550;;6516:20;6550:26:::1;::::0;6565:11;;6550:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;;6225:358:3;:::o;2915:401:4:-;3039:10;3009:4;3029:21;;;:9;:21;;;;;:31;;3054:6;;3029:21;3009:4;;3029:31;;3054:6;;3029:31;:::i;:::-;;;;-1:-1:-1;;;;;;;3206:13:4;;;;;;:9;:13;;;;;;;:23;;;;;;3255:32;3264:10;;-1:-1:-1;;;;;;;;;;;3255:32:4;;;3223:6;160:25:6;;148:2;133:18;;14:177;5145:187:3;-1:-1:-1;;;;;;;;5203:7:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;5239:17:3;5259:6;5266:8;5259:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5259:16:3;;;5304:20;;;:9;:20;;;;;;;5285:40;;;;;;;;;;;5259:16;5285:40;;;-1:-1:-1;;;;;5285:40:3;;;;;;;;;;-1:-1:-1;;;5285:40:3;;;;;;;;;;;;;;;;;;;;;;5259:16;;5285:40;;-1:-1:-1;5145:187:3;-1:-1:-1;;;5145:187:3:o;4117:1279:4:-;4336:15;4324:8;:27;;4316:63;;;;-1:-1:-1;;;4316:63:4;;17975:2:6;4316:63:4;;;17957:21:6;18014:2;17994:18;;;17987:30;18053:25;18033:18;;;18026:53;18096:18;;4316:63:4;17773:347:6;4316:63:4;4544:14;4658:18;:16;:18::i;:::-;-1:-1:-1;;;;;4925:13:4;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4733:271;;1727:117;4733:271;;;18412:25:6;18491:18;;;18484:43;;;;18563:15;;;18543:18;;;18536:43;18595:18;;;18588:34;;;18638:19;;;18631:35;;;;18682:19;;;;18675:35;;;4733:271:4;;;;;;;;;;18384:19:6;;;4733:271:4;;;4698:328;;;;;;;;-1:-1:-1;;;4588:456:4;;;18979:27:6;19022:11;;;19015:27;;;;19058:12;;;19051:28;;;;19095:12;;4588:456:4;;;-1:-1:-1;;4588:456:4;;;;;;;;;4561:497;;4588:456;4561:497;;;;5073:24;5100:26;;;;;;;;;19345:25:6;;;19418:4;19406:17;;19386:18;;;19379:45;;;;19440:18;;;19433:34;;;19483:18;;;19476:34;;;4561:497:4;;-1:-1:-1;5073:24:4;5100:26;;19317:19:6;;5100:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:26:4;;-1:-1:-1;;5100:26:4;;;-1:-1:-1;;;;;;;5166:30:4;;;;;;:59;;;5220:5;-1:-1:-1;;;;;5200:25:4;:16;-1:-1:-1;;;;;5200:25:4;;5166:59;5141:132;;;;-1:-1:-1;;;5141:132:4;;19723:2:6;5141:132:4;;;19705:21:6;19762:2;19742:18;;;19735:30;-1:-1:-1;;;19781:18:6;;;19774:44;19835:18;;5141:132:4;19521:338:6;5141:132:4;-1:-1:-1;;;;;5288:27:4;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5358:31;160:25:6;;;5288:36:4;;-1:-1:-1;5358:31:4;;;;;;133:18:6;5358:31:4;;;;;;;4117:1279;;;;;;;:::o;3721:165:3:-;1944:5;;-1:-1:-1;;;;;1944:5:3;1930:10;:19;1922:28;;;;;;3790:5:::1;:17:::0;;-1:-1:-1;;;;;;3790:17:3::1;-1:-1:-1::0;;;;;3790:17:3;::::1;::::0;;::::1;::::0;;;3857:22:::1;::::0;8251:51:6;;;3857:22:3::1;::::0;8239:2:6;8224:18;3857:22:3::1;;;;;;;3721:165:::0;:::o;7282:900::-;7394:13;7410:28;7433:4;7410:22;:28::i;:::-;7394:44;;7448:24;7475:6;7448:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7448:33:3;;;;;;;;;;;;;;;;;;;;;;;7491:24;7532:7;:14;7518:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7518:29:3;-1:-1:-1;7491:56:3;-1:-1:-1;7561:9:3;;7557:619;;7622:8;;-1:-1:-1;;;;;7586:14:3;;;;;;:8;:14;;;;;:33;;:44;7692:19;:17;:19::i;:::-;-1:-1:-1;;;;;7644:14:3;;;;;;:8;:14;;;;;:45;;;:67;;;;7761:15;7725:33;;;:51;7790:38;;7823:5;;7644:14;;7790:38;;7823:5;;7790:38;:::i;:::-;;;;-1:-1:-1;;7862:11:3;;7842:32;;7848:4;;7854:19;;:5;:19;:::i;:::-;7842:5;:32::i;:::-;7893:9;7888:220;7912:7;:14;7908:1;:18;7888:220;;;7951:14;7968:29;7988:5;7995:1;7968:19;:29::i;:::-;7951:46;;8028:6;8015:7;8023:1;8015:10;;;;;;;;:::i;:::-;;;;;;:19;;;;;8059:7;8067:1;8059:10;;;;;;;;:::i;:::-;;;;;;;;;;;8052:41;;-1:-1:-1;;;8052:41:3;;-1:-1:-1;;;;;16293:32:6;;;8052:41:3;;;16275:51:6;16342:18;;;16335:34;;;8052:27:3;;;;;;16248:18:6;;8052:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7933:175;7928:3;;;;;:::i;:::-;;;;7888:220;;;;8126:39;8135:4;8141:5;8148:7;8157;8126:39;;;;;;;;;:::i;:::-;;;;;;;;7557:619;7321:861;;;7282:900;:::o;5629:492:4:-;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;22001:25:6;;;;22042:18;;22035:34;;;;5998:14:4;22085:18:6;;;22078:34;6034:13:4;22128:18:6;;;22121:34;6077:4:4;22171:19:6;;;22164:61;21973:19;;5759:341:4;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;6315:325::-;6400:6;6385:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6552:13:4;;;;;;:9;:13;;;;;;;;:23;;;;;;6601:32;160:25:6;;;-1:-1:-1;;;;;;;;;;;6601:32:4;133:18:6;6601:32:4;;;;;;;;6315:325;;:::o;9802:458:3:-;9891:14;:30;9853:7;;-1:-1:-1;;;9891:30:3;;;;;9931:28;;9958:1;9951:8;;;9802:458;:::o;9931:28::-;9990:14;:26;;;9969:18;10046:35;10072:9;10053:15;10046:35;:::i;:::-;10026:55;;10110:10;10095:25;;:11;:25;;;10091:40;;-1:-1:-1;1108:5:3;;9802:458;-1:-1:-1;;;9802:458:3:o;10091:40::-;10159:14;:20;;;;;;;;10145:34;;;;10141:48;;10188:1;10181:8;;;;;9802:458;:::o;10141:48::-;10233:20;;;;;10206:24;;1108:5;;10206:19;;:24;:::i;:::-;:47;;;;:::i;:::-;10199:54;;;;;9802:458;:::o;8830:914::-;-1:-1:-1;;;;;8957:14:3;;8898:7;8957:14;;;:8;:14;;;;;:33;;;8898:7;;8939:51;;:15;:51;:::i;:::-;-1:-1:-1;;;;;9057:14:3;;9000:32;9057:14;;;:8;:14;;;;;:45;;;8917:73;;-1:-1:-1;9000:32:3;9035:19;:17;:19::i;:::-;:67;;;;:::i;:::-;-1:-1:-1;;;;;9166:14:3;;9133:19;9166:14;;;:8;:14;;;;;:33;;;9155:8;;9000:102;;-1:-1:-1;9133:19:3;;9155:44;;9166:33;9155:44;:::i;:::-;9133:66;-1:-1:-1;9209:27:3;9239:25;9253:11;9133:66;9239:25;:::i;:::-;-1:-1:-1;;;;;9366:14:3;;9338:25;9366:14;;;:8;:14;;;;;:29;9209:55;;-1:-1:-1;9338:25:3;9209:55;;9366:34;;1108:5;;9366:34;:::i;:::-;:56;;;;:::i;:::-;9338:84;-1:-1:-1;9471:23:3;1108:5;9497:44;9338:84;9497:24;:44;:::i;:::-;:49;;;;:::i;:::-;9471:75;;9576:13;;9561:11;:28;9557:164;;9612:15;8830:914;-1:-1:-1;;;;;;;8830:914:3:o;9557:164::-;9697:13;;9665:29;9683:11;9665:15;:29;:::i;:::-;:45;;;;:::i;:::-;9658:52;8830:914;-1:-1:-1;;;;;;;;8830:914:3:o;6646:328:4:-;-1:-1:-1;;;;;6718:15:4;;;;;;:9;:15;;;;;:25;;6737:6;;6718:15;:25;;6737:6;;6718:25;:::i;:::-;;;;-1:-1:-1;;6886:11:4;:21;;;;;;;6933:34;;160:25:6;;;-1:-1:-1;;;;;;;6933:34:4;;;-1:-1:-1;;;;;;;;;;;6933:34:4;148:2:6;133:18;6933:34:4;14:177:6;8188:182:3;8271:7;8341:21;1160:7;1108:5;8341:21;:::i;:::-;8296:67;;8332:5;8296:9;:26;8306:6;8313:7;8306:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;8306:15:3;8296:26;;;;;;;;;;;;:33;:41;;;;:::i;:::-;:67;;;;:::i;:::-;8289:74;8188:182;-1:-1:-1;;;8188:182:3:o;196:597:6:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;634:6;631:1;628:13;625:91;;;704:1;699:2;690:6;679:9;675:22;671:31;664:42;625:91;-1:-1:-1;777:2:6;756:15;-1:-1:-1;;752:29:6;737:45;;;;784:2;733:54;;196:597;-1:-1:-1;;;196:597:6:o;798:131::-;-1:-1:-1;;;;;873:31:6;;863:42;;853:70;;919:1;916;909:12;934:315;1002:6;1010;1063:2;1051:9;1042:7;1038:23;1034:32;1031:52;;;1079:1;1076;1069:12;1031:52;1118:9;1105:23;1137:31;1162:5;1137:31;:::i;:::-;1187:5;1239:2;1224:18;;;;1211:32;;-1:-1:-1;;;934:315:6:o;1446:127::-;1507:10;1502:3;1498:20;1495:1;1488:31;1538:4;1535:1;1528:15;1562:4;1559:1;1552:15;1578:253;1650:2;1644:9;1692:4;1680:17;;1727:18;1712:34;;1748:22;;;1709:62;1706:88;;;1774:18;;:::i;:::-;1810:2;1803:22;1578:253;:::o;1836:275::-;1907:2;1901:9;1972:2;1953:13;;-1:-1:-1;;1949:27:6;1937:40;;2007:18;1992:34;;2028:22;;;1989:62;1986:88;;;2054:18;;:::i;:::-;2090:2;2083:22;1836:275;;-1:-1:-1;1836:275:6:o;2116:163::-;2183:20;;2243:10;2232:22;;2222:33;;2212:61;;2269:1;2266;2259:12;2212:61;2116:163;;;:::o;2284:183::-;2344:4;2377:18;2369:6;2366:30;2363:56;;;2399:18;;:::i;:::-;-1:-1:-1;2444:1:6;2440:14;2456:4;2436:25;;2284:183::o;2472:737::-;2526:5;2579:3;2572:4;2564:6;2560:17;2556:27;2546:55;;2597:1;2594;2587:12;2546:55;2633:6;2620:20;2659:4;2683:60;2699:43;2739:2;2699:43;:::i;:::-;2683:60;:::i;:::-;2777:15;;;2863:1;2859:10;;;;2847:23;;2843:32;;;2808:12;;;;2887:15;;;2884:35;;;2915:1;2912;2905:12;2884:35;2951:2;2943:6;2939:15;2963:217;2979:6;2974:3;2971:15;2963:217;;;3059:3;3046:17;3076:31;3101:5;3076:31;:::i;:::-;3120:18;;3158:12;;;;2996;;2963:217;;;-1:-1:-1;3198:5:6;2472:737;-1:-1:-1;;;;;;2472:737:6:o;3214:861::-;3268:5;3321:3;3314:4;3306:6;3302:17;3298:27;3288:55;;3339:1;3336;3329:12;3288:55;3375:6;3362:20;3401:4;3425:60;3441:43;3481:2;3441:43;:::i;3425:60::-;3519:15;;;3605:1;3601:10;;;;3589:23;;3585:32;;;3550:12;;;;3629:15;;;3626:35;;;3657:1;3654;3647:12;3626:35;3693:2;3685:6;3681:15;3705:341;3721:6;3716:3;3713:15;3705:341;;;3801:3;3788:17;-1:-1:-1;;;;;3842:5:6;3838:46;3831:5;3828:57;3818:155;;3927:1;3956:2;3952;3945:14;3818:155;3986:18;;4024:12;;;;3738;;3705:341;;4080:662;4134:5;4187:3;4180:4;4172:6;4168:17;4164:27;4154:55;;4205:1;4202;4195:12;4154:55;4241:6;4228:20;4267:4;4291:60;4307:43;4347:2;4307:43;:::i;4291:60::-;4385:15;;;4471:1;4467:10;;;;4455:23;;4451:32;;;4416:12;;;;4495:15;;;4492:35;;;4523:1;4520;4513:12;4492:35;4559:2;4551:6;4547:15;4571:142;4587:6;4582:3;4579:15;4571:142;;;4653:17;;4641:30;;4691:12;;;;4604;;4571:142;;4747:1428;4968:6;4976;4984;4992;5000;5044:9;5035:7;5031:23;5074:3;5070:2;5066:12;5063:32;;;5091:1;5088;5081:12;5063:32;5115:4;5111:2;5107:13;5104:33;;;5133:1;5130;5123:12;5104:33;;5159:22;;:::i;:::-;5204:28;5222:9;5204:28;:::i;:::-;5197:5;5190:43;5265:37;5298:2;5287:9;5283:18;5265:37;:::i;:::-;5260:2;5253:5;5249:14;5242:61;5335:37;5368:2;5357:9;5353:18;5335:37;:::i;:::-;5330:2;5319:14;;5312:61;5323:5;-1:-1:-1;5448:4:6;5433:20;;5420:34;5473:18;5503:14;;;5500:34;;;5530:1;5527;5520:12;5500:34;5553:61;5606:7;5597:6;5586:9;5582:22;5553:61;:::i;:::-;5543:71;;5667:3;5656:9;5652:19;5639:33;5623:49;;5697:2;5687:8;5684:16;5681:36;;;5713:1;5710;5703:12;5681:36;5736:63;5791:7;5780:8;5769:9;5765:24;5736:63;:::i;:::-;5726:73;;5852:3;5841:9;5837:19;5824:33;5808:49;;5882:2;5872:8;5869:16;5866:36;;;5898:1;5895;5888:12;5866:36;5921:63;5976:7;5965:8;5954:9;5950:24;5921:63;:::i;:::-;5911:73;;6037:3;6026:9;6022:19;6009:33;5993:49;;6067:2;6057:8;6054:16;6051:36;;;6083:1;6080;6073:12;6051:36;;6106:63;6161:7;6150:8;6139:9;6135:24;6106:63;:::i;:::-;6096:73;;;4747:1428;;;;;;;;:::o;6180:247::-;6239:6;6292:2;6280:9;6271:7;6267:23;6263:32;6260:52;;;6308:1;6305;6298:12;6260:52;6347:9;6334:23;6366:31;6391:5;6366:31;:::i;6828:456::-;6905:6;6913;6921;6974:2;6962:9;6953:7;6949:23;6945:32;6942:52;;;6990:1;6987;6980:12;6942:52;7029:9;7016:23;7048:31;7073:5;7048:31;:::i;:::-;7098:5;-1:-1:-1;7155:2:6;7140:18;;7127:32;7168:33;7127:32;7168:33;:::i;:::-;6828:456;;7220:7;;-1:-1:-1;;;7274:2:6;7259:18;;;;7246:32;;6828:456::o;7289:180::-;7348:6;7401:2;7389:9;7380:7;7376:23;7372:32;7369:52;;;7417:1;7414;7407:12;7369:52;-1:-1:-1;7440:23:6;;7289:180;-1:-1:-1;7289:180:6:o;8609:642::-;8774:2;8826:21;;;8896:13;;8799:18;;;8918:22;;;8745:4;;8774:2;8997:15;;;;8971:2;8956:18;;;8745:4;9040:185;9054:6;9051:1;9048:13;9040:185;;;9129:13;;9122:21;9115:29;9103:42;;9200:15;;;;9165:12;;;;9076:1;9069:9;9040:185;;;-1:-1:-1;9242:3:6;;8609:642;-1:-1:-1;;;;;;8609:642:6:o;9913:829::-;10024:6;10032;10040;10048;10056;10064;10072;10125:3;10113:9;10104:7;10100:23;10096:33;10093:53;;;10142:1;10139;10132:12;10093:53;10181:9;10168:23;10200:31;10225:5;10200:31;:::i;:::-;10250:5;-1:-1:-1;10307:2:6;10292:18;;10279:32;10320:33;10279:32;10320:33;:::i;:::-;10372:7;-1:-1:-1;10426:2:6;10411:18;;10398:32;;-1:-1:-1;10477:2:6;10462:18;;10449:32;;-1:-1:-1;10533:3:6;10518:19;;10505:33;10582:4;10569:18;;10557:31;;10547:59;;10602:1;10599;10592:12;10547:59;9913:829;;;;-1:-1:-1;9913:829:6;;;;10625:7;10679:3;10664:19;;10651:33;;-1:-1:-1;10731:3:6;10716:19;;;10703:33;;9913:829;-1:-1:-1;;9913:829:6:o;10747:388::-;10815:6;10823;10876:2;10864:9;10855:7;10851:23;10847:32;10844:52;;;10892:1;10889;10882:12;10844:52;10931:9;10918:23;10950:31;10975:5;10950:31;:::i;:::-;11000:5;-1:-1:-1;11057:2:6;11042:18;;11029:32;11070:33;11029:32;11070:33;:::i;:::-;11122:7;11112:17;;;10747:388;;;;;:::o;12007:380::-;12086:1;12082:12;;;;12129;;;12150:61;;12204:4;12196:6;12192:17;12182:27;;12150:61;12257:2;12249:6;12246:14;12226:18;12223:38;12220:161;;;12303:10;12298:3;12294:20;12291:1;12284:31;12338:4;12335:1;12328:15;12366:4;12363:1;12356:15;12392:127;12453:10;12448:3;12444:20;12441:1;12434:31;12484:4;12481:1;12474:15;12508:4;12505:1;12498:15;12524:127;12585:10;12580:3;12576:20;12573:1;12566:31;12616:4;12613:1;12606:15;12640:4;12637:1;12630:15;12656:135;12695:3;-1:-1:-1;;12716:17:6;;12713:43;;;12736:18;;:::i;:::-;-1:-1:-1;12783:1:6;12772:13;;12656:135::o;12796:461::-;12849:3;12887:5;12881:12;12914:6;12909:3;12902:19;12940:4;12969:2;12964:3;12960:12;12953:19;;13006:2;12999:5;12995:14;13027:1;13037:195;13051:6;13048:1;13045:13;13037:195;;;13116:13;;-1:-1:-1;;;;;13112:39:6;13100:52;;13172:12;;;;13207:15;;;;13148:1;13066:9;13037:195;;;-1:-1:-1;13248:3:6;;12796:461;-1:-1:-1;;;;;12796:461:6:o;13262:435::-;13315:3;13353:5;13347:12;13380:6;13375:3;13368:19;13406:4;13435:2;13430:3;13426:12;13419:19;;13472:2;13465:5;13461:14;13493:1;13503:169;13517:6;13514:1;13511:13;13503:169;;;13578:13;;13566:26;;13612:12;;;;13647:15;;;;13539:1;13532:9;13503:169;;13702:1385;14167:3;14156:9;14149:22;14130:4;14194:57;14246:3;14235:9;14231:19;14223:6;14194:57;:::i;:::-;14308:22;;;14270:2;14288:18;;;14281:50;;;;14380:13;;14402:22;;;14478:15;;;;14440;;;14511:1;14521:210;14535:6;14532:1;14529:13;14521:210;;;14600:13;;-1:-1:-1;;;;;14596:54:6;14584:67;;14706:15;;;;14671:12;;;;14557:1;14550:9;14521:210;;;14525:3;;14776:9;14771:3;14767:19;14762:2;14751:9;14747:18;14740:47;14810:41;14847:3;14839:6;14810:41;:::i;:::-;14796:55;;;;14899:9;14891:6;14887:22;14882:2;14871:9;14867:18;14860:50;14927:44;14964:6;14956;14927:44;:::i;:::-;14919:52;;;14980:46;15021:3;15010:9;15006:19;14998:6;8389:10;8378:22;8366:35;;8313:94;14980:46;8389:10;8378:22;;15076:3;15061:19;;8366:35;15035:46;13702:1385;;;;;;;;;:::o;15092:125::-;15132:4;15160:1;15157;15154:8;15151:34;;;15165:18;;:::i;:::-;-1:-1:-1;15202:9:6;;15092:125::o;15222:168::-;15262:7;15328:1;15324;15320:6;15316:14;15313:1;15310:21;15305:1;15298:9;15291:17;15287:45;15284:71;;;15335:18;;:::i;:::-;-1:-1:-1;15375:9:6;;15222:168::o;15395:217::-;15435:1;15461;15451:132;;15505:10;15500:3;15496:20;15493:1;15486:31;15540:4;15537:1;15530:15;15568:4;15565:1;15558:15;15451:132;-1:-1:-1;15597:9:6;;15395:217::o;15617:128::-;15657:3;15688:1;15684:6;15681:1;15678:13;15675:39;;;15694:18;;:::i;:::-;-1:-1:-1;15730:9:6;;15617:128::o;16380:277::-;16447:6;16500:2;16488:9;16479:7;16475:23;16471:32;16468:52;;;16516:1;16513;16506:12;16468:52;16548:9;16542:16;16601:5;16594:13;16587:21;16580:5;16577:32;16567:60;;16623:1;16620;16613:12;17042:228;17081:3;17109:10;17146:2;17143:1;17139:10;17176:2;17173:1;17169:10;17207:3;17203:2;17199:12;17194:3;17191:21;17188:47;;;17215:18;;:::i;:::-;17251:13;;17042:228;-1:-1:-1;;;;17042:228:6:o;17584:184::-;17654:6;17707:2;17695:9;17686:7;17682:23;17678:32;17675:52;;;17723:1;17720;17713:12;17675:52;-1:-1:-1;17746:16:6;;17584:184;-1:-1:-1;17584:184:6:o;19864:635::-;20206:1;20202;20197:3;20193:11;20189:19;20181:6;20177:32;20166:9;20159:51;20246:6;20241:2;20230:9;20226:18;20219:34;20289:3;20284:2;20273:9;20269:18;20262:31;20140:4;20316:57;20368:3;20357:9;20353:19;20345:6;20316:57;:::i;:::-;20421:9;20413:6;20409:22;20404:2;20393:9;20389:18;20382:50;20449:44;20486:6;20478;20449:44;:::i;20633:1104::-;20763:3;20792:1;20825:6;20819:13;20855:3;20877:1;20905:9;20901:2;20897:18;20887:28;;20965:2;20954:9;20950:18;20987;20977:61;;21031:4;21023:6;21019:17;21009:27;;20977:61;21057:2;21105;21097:6;21094:14;21074:18;21071:38;21068:165;;;-1:-1:-1;;;21132:33:6;;21188:4;21185:1;21178:15;21218:4;21139:3;21206:17;21068:165;21249:18;21276:104;;;;21394:1;21389:323;;;;21242:470;;21276:104;-1:-1:-1;;21309:24:6;;21297:37;;21354:16;;;;-1:-1:-1;21276:104:6;;21389:323;20580:1;20573:14;;;20617:4;20604:18;;21487:1;21501:165;21515:6;21512:1;21509:13;21501:165;;;21593:14;;21580:11;;;21573:35;21636:16;;;;21530:10;;21501:165;;;21505:3;;21695:6;21690:3;21686:16;21679:23;;21242:470;-1:-1:-1;21728:3:6;;20633:1104;-1:-1:-1;;;;;;;;20633:1104:6:o;22236:221::-;22275:4;22304:10;22364;;;;22334;;22386:12;;;22383:38;;;22401:18;;:::i;:::-;22438:13;;22236:221;-1:-1:-1;;;22236:221:6:o;22462:426::-;22551:1;22594:5;22551:1;22608:274;22629:7;22619:8;22616:21;22608:274;;;22692:4;22680:10;22676:21;22670:4;22667:31;22664:57;;;22701:18;;:::i;:::-;22751:7;22741:8;22737:22;22734:55;;;22771:16;;;;22734:55;22850:22;;;;22810:15;;;;22608:274;;;22612:3;22462:426;;;;;:::o;22893:930::-;22942:5;22972:8;22962:80;;-1:-1:-1;23013:1:6;23027:5;;22962:80;23061:4;23051:76;;-1:-1:-1;23098:1:6;23112:5;;23051:76;23143:4;23161:1;23156:59;;;;23229:1;23224:190;;;;23136:278;;23156:59;23186:1;23177:10;;23200:5;;;23224:190;23261:3;23251:8;23248:17;23245:43;;;23268:18;;:::i;:::-;23324:1;23314:8;23310:16;23301:25;;23352:10;23345:5;23342:21;23339:47;;;23366:18;;:::i;:::-;23399:5;;;23136:278;;23498:2;23488:8;23485:16;23479:3;23473:4;23470:13;23466:36;23460:2;23450:8;23447:16;23442:2;23436:4;23433:12;23429:35;23426:77;23423:219;;;-1:-1:-1;23535:19:6;;;23580:10;23570:21;;23567:47;;;23594:18;;:::i;:::-;23627:5;;23423:219;23674:34;23699:8;23693:4;23674:34;:::i;:::-;23748:6;23736:10;23732:23;23723:7;23720:36;23717:62;;;23759:18;;:::i;:::-;23797:20;;22893:930;-1:-1:-1;;;22893:930:6:o;23828:176::-;23886:5;23916:10;23944:54;23994:2;23984:8;23980:17;23975:2;23969:4;23965:13;23944:54;:::i;:::-;23935:63;23828:176;-1:-1:-1;;;;23828:176:6:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    349,
    10262
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA9320688 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xE0C9802F EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xE2F273BD EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xF5DAB711 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9320688 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xD32E81A5 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xD77A1D3A EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x9CFDBD5E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xA4C8B46B EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x7D9FCE4D EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E17DE78 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x4AE99D30 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x4C33FE94 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x5DA69CB6 EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x35322F37 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x9D0E30C EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x25A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x983 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x21E9 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x21F PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x364 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x27D PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x21F PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x25A PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x21F PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x400 PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x423 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x400 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x25A PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP3 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND DUP3 DUP5 ADD MSTORE SWAP2 DUP4 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x21F PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x21F PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x566 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH5 0x100000000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x5ED PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x3B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x646 SWAP1 PUSH2 0x2339 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x672 SWAP1 PUSH2 0x2339 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x694 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x722 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 DUP2 AND SWAP3 DUP3 AND PUSH5 0x100000000 MUL PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP6 AND OR SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x927 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CB JUMPI PUSH2 0x7CB PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7EA JUMPI PUSH2 0x7EA PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x822 JUMPI PUSH2 0x822 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x84F JUMPI PUSH2 0x84F PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD SWAP2 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP7 MLOAD PUSH1 0x7 SWAP1 DUP9 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x8D9 JUMPI PUSH2 0x8D9 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP DUP1 PUSH2 0x91F DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A4 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x416073E33674C1F05095C354D2B4B414CA3AE45D0ECBA40599C89F1EE63C4B35 SWAP2 PUSH2 0x973 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP9 SWAP2 PUSH4 0xFFFFFFFF PUSH5 0x100000000 DUP4 DIV DUP2 AND SWAP3 AND SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0x9E7 JUMPI PUSH1 0xD SLOAD PUSH2 0x99A SWAP1 TIMESTAMP PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF SLOAD PUSH2 0x9AD SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xD SSTORE PUSH2 0x9E4 DUP2 PUSH2 0x186C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E4 DUP2 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA4C JUMPI PUSH2 0xA27 DUP4 DUP3 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xA74 SWAP1 DUP5 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xABD SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC38 JUMPI PUSH1 0xD SLOAD PUSH2 0xAE7 SWAP1 TIMESTAMP PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF SLOAD PUSH2 0xAFA SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xD SSTORE PUSH2 0xB31 CALLER PUSH2 0x186C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH4 0x5F5E100 PUSH2 0xB48 PUSH2 0x2710 DUP6 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x554E5354414B4520414D4F554E5420544F4F20424947 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH2 0xC41 CALLER PUSH2 0x186C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH4 0x5F5E100 PUSH2 0xC58 PUSH2 0x2710 DUP6 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x554E5354414B4520414D4F554E5420544F4F20424947 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0xDCE JUMPI PUSH1 0xD SLOAD PUSH2 0xCDD SWAP1 TIMESTAMP PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF SLOAD PUSH2 0xCF0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xD SSTORE PUSH1 0xA SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0xD49 SWAP2 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST POP PUSH2 0xDCC CALLER PUSH2 0x186C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ADDRESS SWAP3 PUSH4 0xA9059CBB SWAP3 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0xD49 SWAP2 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xE2F JUMPI PUSH2 0xE2A PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xECE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1040 JUMPI PUSH1 0x8 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD DUP9 MLOAD SWAP3 SWAP8 POP SWAP1 SWAP3 AND SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xF61 JUMPI PUSH2 0xF61 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE6 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST POP PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x0 SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0x1008 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP PUSH2 0x101E DUP2 DUP7 PUSH2 0x252B JUMP JUMPDEST SWAP5 POP PUSH2 0x102A DUP3 DUP3 PUSH2 0x1B5F JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x1038 SWAP1 PUSH2 0x239A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEFA JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH2 0x107F SWAP3 PUSH5 0x100000000 DUP2 DIV DUP4 AND SWAP3 SWAP2 SWAP1 DIV AND PUSH2 0x2565 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0xD SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x646 SWAP1 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1153 JUMPI PUSH2 0x1153 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x117C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP4 POP SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x11EF JUMPI PUSH2 0x11EF PUSH2 0x236E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP6 MLOAD SWAP1 DUP4 LT ISZERO SWAP2 POP DUP2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x12C8 JUMPI PUSH2 0x12C8 PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x12E8 SWAP1 PUSH2 0x239A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1182 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD TIMESTAMP GT ISZERO PUSH2 0x13F9 JUMPI PUSH1 0xD SLOAD PUSH2 0x130D SWAP1 TIMESTAMP PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xF SLOAD PUSH2 0x1320 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1345 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0xD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP2 SWAP1 PUSH4 0x5F5E100 PUSH2 0x1373 PUSH2 0x2710 DUP8 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A2 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xF DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x13ED SWAP1 DUP5 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x9E4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP2 SWAP1 PUSH4 0x5F5E100 PUSH2 0x141E PUSH2 0x2710 DUP8 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1428 SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xE SLOAD DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x144D PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0xF DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1498 SWAP1 DUP5 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x14C2 SWAP1 DUP5 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x722 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x236E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SWAP5 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160A PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1759 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24A72B20A624A22FA9A4A3A722A9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE MLOAD DUP10 DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1877 DUP3 PUSH2 0x1C5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18B3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F4 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x191D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 ISZERO PUSH2 0x1ABF JUMPI PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH2 0x194D PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x1984 SWAP1 DUP5 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x19A1 SWAP1 DUP6 SWAP1 PUSH2 0x199C SWAP1 DUP7 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A80 JUMPI PUSH1 0x0 PUSH2 0x19B9 DUP6 DUP4 PUSH2 0x1DDF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19CE JUMPI PUSH2 0x19CE PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19EC JUMPI PUSH2 0x19EC PUSH2 0x236E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A6B SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1A78 SWAP1 PUSH2 0x239A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19A4 JUMP JUMPDEST POP PUSH32 0x39799AE7423F24077D39DA7D23F675B0A56D381A884D5714932B9DC762BDB52 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1AB6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1AF7 SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1BD9 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 PUSH2 0x1BEE DUP4 TIMESTAMP PUSH2 0x267B JUMP JUMPDEST SWAP1 POP DUP1 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1C0E JUMPI POP PUSH2 0x2710 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP3 AND GT PUSH2 0x1C33 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x1C4B SWAP1 PUSH2 0x2710 SWAP1 DUP5 AND PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1C55 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 SWAP1 PUSH2 0x1C85 SWAP1 TIMESTAMP PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1CAD PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1CB7 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xE SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x1CE5 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CF3 DUP5 DUP4 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH2 0x1D1F SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1D29 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x1D3A DUP4 DUP8 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1D44 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 SLOAD DUP7 LT PUSH2 0x1D5A JUMPI SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x1D67 DUP8 DUP4 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1DA5 SWAP1 DUP5 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27CF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF1 PUSH4 0x5F5E100 PUSH2 0x2710 PUSH2 0x27B1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1E0F JUMPI PUSH2 0x1E0F PUSH2 0x236E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x1E3E SWAP2 SWAP1 PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1E48 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E7C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1E60 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1ED7 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F1E JUMPI PUSH2 0x1F1E PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F4D JUMPI PUSH2 0x1F4D PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x1EE5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1FB8 PUSH2 0x1FB3 DUP4 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1FD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FFB JUMPI DUP1 CALLDATALOAD PUSH2 0x1FEE DUP2 PUSH2 0x1EA4 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1FDB JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2027 PUSH2 0x1FB3 DUP4 PUSH2 0x1F6E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FFB JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x206A JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x204A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2098 PUSH2 0x1FB3 DUP4 PUSH2 0x1F6E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x20B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1FFB JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH1 0xE0 DUP2 SLT ISZERO PUSH2 0x20EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 SLT ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2102 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x210B DUP8 PUSH2 0x1F55 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2119 PUSH1 0x20 DUP9 ADD PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x212A PUSH1 0x40 DUP9 ADD PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP5 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x214C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2158 DUP10 DUP4 DUP11 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x216E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217A DUP10 DUP4 DUP11 ADD PUSH2 0x2006 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219C DUP10 DUP4 DUP11 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21BF DUP9 DUP3 DUP10 ADD PUSH2 0x2077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E48 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2209 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2219 DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x223C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x227D JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x225F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x22AF DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x22BF DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x22E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x231E DUP2 PUSH2 0x1EA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x232E DUP2 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x234D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x23AE JUMPI PUSH2 0x23AE PUSH2 0x2384 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23EE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x23C9 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23EE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x240D JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x243C PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x23B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 MLOAD DUP1 DUP4 MSTORE DUP10 DUP3 ADD SWAP3 DUP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x247C JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2457 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2490 DUP2 DUP11 PUSH2 0x23B5 JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x24A6 DUP2 DUP8 PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x24BB PUSH1 0x80 DUP4 ADD DUP6 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24E5 JUMPI PUSH2 0x24E5 PUSH2 0x2384 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2504 JUMPI PUSH2 0x2504 PUSH2 0x2384 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2526 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x253E JUMPI PUSH2 0x253E PUSH2 0x2384 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2584 PUSH2 0x2384 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x259F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x25CD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x23B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x24C8 DUP2 DUP6 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x25FB JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x261B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x262F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2640 JUMPI PUSH2 0x266D JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x266D JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2665 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x264C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2698 JUMPI PUSH2 0x2698 PUSH2 0x2384 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x26DD JUMPI DUP2 PUSH4 0xFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x26C3 JUMPI PUSH2 0x26C3 PUSH2 0x2384 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x26D0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x26A5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x26F4 JUMPI POP PUSH1 0x1 PUSH2 0x72E JUMP JUMPDEST DUP2 PUSH2 0x2701 JUMPI POP PUSH1 0x0 PUSH2 0x72E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2717 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2721 JUMPI PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x72E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2732 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x1 DUP5 SHL SWAP2 POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x274C JUMPI PUSH2 0x274C PUSH2 0x2384 JUMP JUMPDEST POP PUSH2 0x72E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2789 JUMPI POP DUP2 DUP2 EXP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x2784 JUMPI PUSH2 0x2784 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x2793 DUP4 DUP4 PUSH2 0x26A0 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A9 PUSH2 0x2384 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x27C6 DUP2 DUP6 AND DUP3 DUP6 AND PUSH2 0x26E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xEF MULMOD DUP5 PUSH23 0x3CEE00817E64C3A7276C4E48DB2F5131CA1409718576EA 0xE3 0xE8 CHAINID 0xAC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9320688"
    },
    "49": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x514"
    },
    "75": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE0C9802F"
    },
    "82": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53F"
    },
    "86": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE2F273BD"
    },
    "93": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58D"
    },
    "97": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF5DAB711"
    },
    "104": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A0"
    },
    "108": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF851A440"
    },
    "115": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x626"
    },
    "119": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9320688"
    },
    "131": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48A"
    },
    "135": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD32E81A5"
    },
    "142": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EF"
    },
    "146": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD505ACCF"
    },
    "153": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "157": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD77A1D3A"
    },
    "164": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50B"
    },
    "168": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "191": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43E"
    },
    "195": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9CFDBD5E"
    },
    "202": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x446"
    },
    "206": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA4C8B46B"
    },
    "213": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44F"
    },
    "217": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA694FC3A"
    },
    "224": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "225": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "228": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "235": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "236": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x477"
    },
    "239": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "240": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "243": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "244": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "251": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D5"
    },
    "255": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7D9FCE4D"
    },
    "262": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5"
    },
    "266": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7ECEBE00"
    },
    "273": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "274": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x415"
    },
    "277": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "278": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x817B1CD2"
    },
    "284": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "285": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x435"
    },
    "288": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "289": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "292": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "293": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2E17DE78"
    },
    "300": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3644E515"
    },
    "311": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3644E515"
    },
    "322": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37E"
    },
    "326": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "328": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4AE99D30"
    },
    "333": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "334": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x386"
    },
    "337": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "338": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "339": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4C33FE94"
    },
    "344": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "345": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E"
    },
    "348": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "349": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4F64B2BE"
    },
    "355": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "356": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A1"
    },
    "359": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "360": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5DA69CB6"
    },
    "366": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "367": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC"
    },
    "370": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "371": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "374": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "375": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "377": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2E17DE78"
    },
    "382": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "383": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x303"
    },
    "386": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "387": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "388": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x30ADF81F"
    },
    "393": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "394": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x316"
    },
    "397": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "398": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "404": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "405": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33D"
    },
    "408": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "409": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "410": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x35322F37"
    },
    "415": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "416": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x376"
    },
    "419": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "420": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "423": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "424": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "425": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "426": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "431": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "GT",
      "path": "3"
    },
    "432": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "436": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "437": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "442": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "443": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "446": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "447": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "448": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1959A002"
    },
    "453": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "454": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x288"
    },
    "457": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "458": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E83409A"
    },
    "464": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "465": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DD"
    },
    "468": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "469": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "470": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "475": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "476": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F0"
    },
    "479": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "480": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "483": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "484": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "485": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "486": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E1D114"
    },
    "491": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "497": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "502": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "503": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x232"
    },
    "506": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "507": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "513": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "514": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247"
    },
    "517": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "518": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "519": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9D0E30C"
    },
    "524": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "EQ",
      "path": "3"
    },
    "525": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26A"
    },
    "528": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "529": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        349,
        10262
      ],
      "op": "REVERT",
      "path": "3"
    },
    "534": {
      "offset": [
        850,
        876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "535": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F"
    },
    "538": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "540": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "541": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "DUP2",
      "path": "3"
    },
    "542": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "543": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "544": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "546": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "547": {
      "op": "SWAP1"
    },
    "548": {
      "op": "DUP2"
    },
    "549": {
      "op": "MSTORE"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "offset": [
        850,
        876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "554": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "556": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "557": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "DUP1",
      "path": "3"
    },
    "558": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "559": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "SUB",
      "path": "3"
    },
    "560": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "561": {
      "fn": null,
      "offset": [
        850,
        876
      ],
      "op": "RETURN",
      "path": "3"
    },
    "562": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "563": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A"
    },
    "566": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x639"
    },
    "569": {
      "fn": null,
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "570": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "571": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "573": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "574": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "577": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "578": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "579": {
      "fn": null,
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4F"
    },
    "582": {
      "fn": null,
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "584": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25A"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "590": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "591": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EB9"
    },
    "596": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6C7"
    },
    "601": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "605": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "606": {
      "op": "SWAP1"
    },
    "607": {
      "op": "ISZERO"
    },
    "608": {
      "op": "ISZERO"
    },
    "609": {
      "op": "DUP2"
    },
    "610": {
      "op": "MSTORE"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "613": {
      "op": "ADD"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "617": {
      "op": "JUMP"
    },
    "618": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "619": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "622": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x278"
    },
    "625": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "626": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "628": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20D2"
    },
    "631": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "632": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "633": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x734"
    },
    "636": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "637": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "638": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "STOP",
      "path": "3"
    },
    "639": {
      "offset": [
        1336,
        1362
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "640": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "643": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1336,
        1362
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "645": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1336,
        1362
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "646": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1336,
        1362
      ],
      "op": "DUP2",
      "path": "4"
    },
    "647": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1336,
        1362
      ],
      "op": "JUMP",
      "path": "4"
    },
    "648": {
      "offset": [
        1173,
        1217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "649": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BD"
    },
    "652": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x296"
    },
    "655": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "656": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "658": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "661": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        1173,
        1217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "662": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "663": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "665": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "667": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "668": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "670": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "671": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "672": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "673": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "675": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "676": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "677": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "678": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "679": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "681": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP3",
      "path": "3"
    },
    "682": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "ADD",
      "path": "3"
    },
    "683": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "684": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "686": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP4",
      "path": "3"
    },
    "687": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "ADD",
      "path": "3"
    },
    "688": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "689": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "691": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "692": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "693": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "ADD",
      "path": "3"
    },
    "694": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "695": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "696": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "697": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "698": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "699": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP5",
      "path": "3"
    },
    "700": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "701": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "702": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "704": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "705": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1173,
        1217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "706": {
      "op": "SWAP5"
    },
    "707": {
      "op": "DUP6"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "op": "DUP6"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "SWAP4"
    },
    "714": {
      "op": "SWAP1"
    },
    "715": {
      "op": "SWAP4"
    },
    "716": {
      "op": "MSTORE"
    },
    "717": {
      "op": "SWAP2"
    },
    "718": {
      "op": "DUP4"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "MSTORE"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "723": {
      "op": "DUP3"
    },
    "724": {
      "op": "ADD"
    },
    "725": {
      "op": "MSTORE"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "offset": [
        1173,
        1217
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "732": {
      "op": "JUMP"
    },
    "733": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "734": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "737": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EB"
    },
    "740": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "741": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "743": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "746": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "747": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "748": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x983"
    },
    "751": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25A"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FE"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21E9"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F0"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "771": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "772": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "775": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x311"
    },
    "778": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "779": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "781": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222A"
    },
    "784": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6589,
        6969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "785": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "786": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD0"
    },
    "789": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6589,
        6969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "790": {
      "offset": [
        1677,
        1844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "791": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "794": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "827": {
      "offset": [
        1677,
        1844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "828": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1677,
        1844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "829": {
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "830": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x364"
    },
    "833": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "866": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "867": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMP",
      "path": "4"
    },
    "868": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "869": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "871": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1114,
        1145
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "874": {
      "op": "SWAP1"
    },
    "875": {
      "op": "SWAP2"
    },
    "876": {
      "op": "AND"
    },
    "877": {
      "op": "DUP2"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "offset": [
        1114,
        1145
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "885": {
      "op": "JUMP"
    },
    "886": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6979,
        7183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "887": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6979,
        7183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "890": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6979,
        7183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC6"
    },
    "893": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6979,
        7183
      ],
      "op": "JUMP",
      "path": "3"
    },
    "894": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "895": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "898": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF9"
    },
    "901": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "902": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3892,
        4927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "903": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3892,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "906": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3892,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE54"
    },
    "909": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        3892,
        4927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "910": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "911": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "914": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39C"
    },
    "917": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "918": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "920": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "923": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        3578,
        3711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "924": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "925": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C2"
    },
    "928": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        3578,
        3711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "929": {
      "offset": [
        616,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "930": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B4"
    },
    "933": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AF"
    },
    "936": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "937": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "939": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222A"
    },
    "942": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        616,
        639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "943": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "944": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10FB"
    },
    "947": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        616,
        639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "948": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "949": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "951": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "op": "SWAP1"
    },
    "961": {
      "op": "SWAP2"
    },
    "962": {
      "op": "AND"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "971": {
      "op": "JUMP"
    },
    "972": {
      "offset": [
        1452,
        1492
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "973": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1452,
        1492
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F"
    },
    "976": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1452,
        1492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "978": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1452,
        1492
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "979": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1452,
        1492
      ],
      "op": "DUP2",
      "path": "3"
    },
    "980": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1452,
        1492
      ],
      "op": "JUMP",
      "path": "3"
    },
    "981": {
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "982": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "985": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E3"
    },
    "988": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "989": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "991": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21CC"
    },
    "994": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "4"
    },
    "995": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "996": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "998": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1000": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1001": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1003": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1004": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1005": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1006": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1008": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1009": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1010": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1011": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1012": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1369,
        1413
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1013": {
      "offset": [
        1119,
        1167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1014": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1119,
        1167
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1017": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "1022": {
      "offset": [
        1119,
        1167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1023": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1119,
        1167
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1024": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1119,
        1167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1025": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1119,
        1167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1027": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1119,
        1167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1028": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1033": {
      "op": "SWAP1"
    },
    "1034": {
      "op": "SWAP2"
    },
    "1035": {
      "op": "AND"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "offset": [
        1119,
        1167
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "1044": {
      "op": "JUMP"
    },
    "1045": {
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1046": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "1049": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x423"
    },
    "1052": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1053": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1055": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21CC"
    },
    "1058": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1059": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1060": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1062": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1064": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1067": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1068": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1069": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1070": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1072": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1073": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1074": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1075": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1076": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1959,
        2000
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1077": {
      "offset": [
        1420,
        1446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1078": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1420,
        1446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F"
    },
    "1081": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1420,
        1446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1083": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1420,
        1446
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1084": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1420,
        1446
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1085": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1420,
        1446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1086": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1087": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23A"
    },
    "1090": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1125"
    },
    "1093": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1094": {
      "offset": [
        1079,
        1113
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1095": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1079,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1098": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "1101": {
      "offset": [
        1079,
        1113
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1102": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1079,
        1113
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1103": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1104": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x457"
    },
    "1107": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1132"
    },
    "1110": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1111": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1112": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1114": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1115": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "1118": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1119": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1120": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2243"
    },
    "1123": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1124": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1125": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1128": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x472"
    },
    "1131": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1132": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1134": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222A"
    },
    "1137": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1138": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1139": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F6"
    },
    "1142": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1143": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1144": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25A"
    },
    "1147": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x485"
    },
    "1150": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1151": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1153": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EB9"
    },
    "1156": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1157": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1158": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14A1"
    },
    "1161": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1162": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1163": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49D"
    },
    "1166": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x498"
    },
    "1169": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1170": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1172": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222A"
    },
    "1175": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1176": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1177": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1507"
    },
    "1180": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1181": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1182": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1184": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1185": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1192": {
      "op": "SHL"
    },
    "1193": {
      "op": "SUB"
    },
    "1194": {
      "op": "SWAP4"
    },
    "1195": {
      "op": "DUP5"
    },
    "1196": {
      "op": "AND"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "DUP3"
    },
    "1200": {
      "op": "MLOAD"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1203": {
      "op": "DUP1"
    },
    "1204": {
      "op": "DUP4"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "SWAP2"
    },
    "1207": {
      "op": "SWAP1"
    },
    "1208": {
      "op": "SWAP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "DUP4"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MLOAD"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "SWAP1"
    },
    "1222": {
      "op": "DUP2"
    },
    "1223": {
      "op": "AND"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "DUP5"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "SWAP2"
    },
    "1229": {
      "op": "DUP4"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "MLOAD"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "SWAP2"
    },
    "1234": {
      "op": "AND"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1237": {
      "op": "DUP1"
    },
    "1238": {
      "op": "DUP4"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "SWAP2"
    },
    "1241": {
      "op": "SWAP1"
    },
    "1242": {
      "op": "SWAP2"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "SWAP2"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "op": "MLOAD"
    },
    "1248": {
      "op": "SWAP1"
    },
    "1249": {
      "op": "SWAP2"
    },
    "1250": {
      "op": "AND"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "1262": {
      "op": "JUMP"
    },
    "1263": {
      "offset": [
        1240,
        1269
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1264": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1240,
        1269
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F"
    },
    "1267": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1240,
        1269
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "1269": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1240,
        1269
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1270": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1240,
        1269
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1271": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        1240,
        1269
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1273": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27D"
    },
    "1276": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x506"
    },
    "1279": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1280": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1282": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2289"
    },
    "1285": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1286": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1287": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B0"
    },
    "1290": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1291": {
      "offset": [
        1354,
        1377
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1292": {
      "fn": "ERC20.permit",
      "offset": [
        1354,
        1377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21F"
    },
    "1295": {
      "fn": "ERC20.permit",
      "offset": [
        1354,
        1377
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "1297": {
      "fn": "ERC20.permit",
      "offset": [
        1354,
        1377
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1298": {
      "fn": "ERC20.permit",
      "offset": [
        1354,
        1377
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1299": {
      "fn": "ERC20.permit",
      "offset": [
        1354,
        1377
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1300": {
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1301": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21F"
    },
    "1304": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x522"
    },
    "1307": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1308": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1310": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2300"
    },
    "1313": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1314": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1315": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1317": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1319": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1320": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1321": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1322": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1324": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1326": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1327": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1329": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1330": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1331": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1332": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1333": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1334": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1335": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1336": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1337": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1338": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1339": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1340": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1341": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1342": {
      "fn": "ERC20.permit",
      "offset": [
        1420,
        1484
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1343": {
      "offset": [
        967,
        999
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1344": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1346": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1347": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x566"
    },
    "1350": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1351": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1356": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1357": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1358": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "AND",
      "path": "3"
    },
    "1359": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1360": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "1366": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1367": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DIV",
      "path": "3"
    },
    "1368": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1369": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "AND",
      "path": "3"
    },
    "1370": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "offset": [
        967,
        999
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1377": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1378": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DIV",
      "path": "3"
    },
    "1379": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "AND",
      "path": "3"
    },
    "1380": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1381": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1382": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1383": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1385": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1386": {
      "fn": "ERC20.permit",
      "offset": [
        967,
        999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1387": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1392": {
      "op": "SWAP5"
    },
    "1393": {
      "op": "DUP6"
    },
    "1394": {
      "op": "AND"
    },
    "1395": {
      "op": "DUP2"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "SWAP3"
    },
    "1398": {
      "op": "DUP5"
    },
    "1399": {
      "op": "AND"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1402": {
      "op": "DUP5"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "SWAP3"
    },
    "1406": {
      "op": "AND"
    },
    "1407": {
      "op": "SWAP2"
    },
    "1408": {
      "op": "DUP2"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "SWAP2"
    },
    "1411": {
      "op": "SWAP1"
    },
    "1412": {
      "op": "SWAP2"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "offset": [
        967,
        999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "1420": {
      "op": "JUMP"
    },
    "1421": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1422": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1425": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59B"
    },
    "1428": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1429": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1431": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "1434": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1435": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1436": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1801"
    },
    "1439": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1440": {
      "offset": [
        646,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1441": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5ED"
    },
    "1444": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5AE"
    },
    "1447": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1448": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1450": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21CC"
    },
    "1453": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        646,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1454": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1455": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1457": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1459": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1460": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1462": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1463": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1464": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1465": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1467": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1468": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1469": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1470": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1471": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1473": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1474": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "ADD",
      "path": "3"
    },
    "1475": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1476": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1478": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1479": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1480": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "ADD",
      "path": "3"
    },
    "1481": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1482": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1483": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "offset": [
        646,
        692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1493": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1494": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "AND",
      "path": "3"
    },
    "1495": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1502": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1503": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DIV",
      "path": "3"
    },
    "1504": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "AND",
      "path": "3"
    },
    "1505": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "offset": [
        646,
        692
      ],
      "op": "AND",
      "path": "3"
    },
    "1515": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1516": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1517": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1518": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1520": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1521": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "1524": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1525": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1526": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1527": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1528": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        646,
        692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1529": {
      "op": "SWAP4"
    },
    "1530": {
      "op": "DUP5"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "SUB"
    },
    "1540": {
      "op": "SWAP3"
    },
    "1541": {
      "op": "DUP4"
    },
    "1542": {
      "op": "AND"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "DUP6"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "MSTORE"
    },
    "1548": {
      "op": "SWAP2"
    },
    "1549": {
      "op": "AND"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1552": {
      "op": "DUP4"
    },
    "1553": {
      "op": "ADD"
    },
    "1554": {
      "op": "MSTORE"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "op": "AND"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1566": {
      "op": "DUP3"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "SWAP1"
    },
    "1573": {
      "op": "JUMP"
    },
    "1574": {
      "offset": [
        699,
        719
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1575": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1577": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1578": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B4"
    },
    "1581": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1588": {
      "op": "SHL"
    },
    "1589": {
      "op": "SUB"
    },
    "1590": {
      "offset": [
        699,
        719
      ],
      "op": "AND",
      "path": "3"
    },
    "1591": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1592": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        699,
        719
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1593": {
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1594": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1596": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1597": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1598": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x646"
    },
    "1601": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1602": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2339"
    },
    "1605": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1606": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1607": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1608": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1610": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1611": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1613": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1614": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1615": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "4"
    },
    "1616": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "4"
    },
    "1617": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1619": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1620": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1622": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1623": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1624": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1625": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1626": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1628": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1629": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1630": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1631": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1632": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1633": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1634": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1635": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1636": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1638": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1639": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1640": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1641": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1642": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x672"
    },
    "1645": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1646": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2339"
    },
    "1649": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "i",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1650": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1651": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1652": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1653": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BF"
    },
    "1656": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1657": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1658": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1660": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "LT",
      "path": "4"
    },
    "1661": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x694"
    },
    "1664": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1665": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1668": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1669": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1670": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1671": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DIV",
      "path": "4"
    },
    "1672": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MUL",
      "path": "4"
    },
    "1673": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1674": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1675": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1676": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1678": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1679": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1680": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BF"
    },
    "1683": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1684": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1685": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1686": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1687": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1688": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1689": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1691": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1692": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1694": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1696": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1697": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1698": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1699": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1700": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1701": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1702": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1703": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1704": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1706": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1707": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1708": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1710": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1711": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1712": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1713": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "GT",
      "path": "4"
    },
    "1714": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A2"
    },
    "1717": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1718": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1719": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1720": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SUB",
      "path": "4"
    },
    "1721": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1723": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "1724": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1725": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1726": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1727": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1728": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "1729": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "1730": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "1731": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "1732": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "POP",
      "path": "4"
    },
    "1733": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1062,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1734": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "o",
      "offset": [
        1062,
        1080
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1735": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1736": {
      "fn": "ERC20.approve",
      "offset": [
        2798,
        2808
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 0
    },
    "1737": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1739": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1740": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1741": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1742": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2797
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1744": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1746": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1747": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1748": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1749": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1752": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1753": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2809
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1763": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "AND",
      "path": "4"
    },
    "1764": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1765": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1766": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1767": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1768": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1769": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1770": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1771": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1772": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1773": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1774": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2827
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1775": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 1
    },
    "1776": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1777": {
      "fn": "ERC20.approve",
      "offset": [
        2768,
        2772
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1778": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1779": {
      "fn": "ERC20.approve",
      "offset": [
        2788,
        2818
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1780": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1813": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1814": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x722"
    },
    "1817": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1818": {
      "fn": "ERC20.approve",
      "offset": [
        2821,
        2827
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1819": {
      "op": "DUP2"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1823": {
      "op": "ADD"
    },
    "1824": {
      "op": "SWAP1"
    },
    "1825": {
      "op": "JUMP"
    },
    "1826": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1827": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1829": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1830": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1831": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1832": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SUB",
      "path": "4"
    },
    "1833": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1834": {
      "fn": "ERC20.approve",
      "offset": [
        2843,
        2880
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "fn": "ERC20.approve",
      "offset": [
        2898,
        2902
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "1838": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1839": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1840": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1841": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "4"
    },
    "1842": {
      "fn": "ERC20.approve",
      "offset": [
        2670,
        2909
      ],
      "op": "POP",
      "path": "4"
    },
    "1843": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2670,
        2909
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1844": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1845": {
      "offset": [
        1944,
        1949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1847": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1944,
        1949
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "offset": [
        1944,
        1949
      ],
      "op": "AND",
      "path": "3"
    },
    "1857": {
      "offset": [
        1930,
        1940
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1858": {
      "offset": [
        1930,
        1949
      ],
      "op": "EQ",
      "path": "3"
    },
    "1859": {
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74B"
    },
    "1862": {
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1863": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1865": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1922,
        1950
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1866": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1922,
        1950
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1867": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1868": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 3
    },
    "1869": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1870": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2824
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "1872": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1873": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1874": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1876": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1877": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "ADD",
      "path": "3"
    },
    "1878": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1879": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1881": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1882": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "ADD",
      "path": "3"
    },
    "1883": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1884": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1889": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1890": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1891": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "AND",
      "path": "3"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "MUL",
      "path": "3"
    },
    "1898": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "NOT"
    },
    "1907": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "1908": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1909": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "AND",
      "path": "3"
    },
    "1910": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1911": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1912": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "AND",
      "path": "3"
    },
    "1913": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "1919": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "MUL",
      "path": "3"
    },
    "1920": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1929": {
      "op": "NOT"
    },
    "1930": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1931": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1932": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "AND",
      "path": "3"
    },
    "1933": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1934": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1935": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1936": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "AND",
      "path": "3"
    },
    "1937": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "OR",
      "path": "3"
    },
    "1938": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1939": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1940": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1941": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "OR",
      "path": "3"
    },
    "1942": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1943": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1944": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1945": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "AND",
      "path": "3"
    },
    "1946": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1947": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1948": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1949": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "OR",
      "path": "3"
    },
    "1950": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1951": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2852,
        2886
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1952": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2918,
        2932
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1953": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2918,
        2932
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1954": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2810,
        2842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1956": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1957": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2966,
        2977
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1958": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2962,
        2963
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1959": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2962,
        2977
      ],
      "op": "LT",
      "path": "3"
    },
    "1960": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1961": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x927"
    },
    "1964": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1965": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2998,
        3016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1967": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1969": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1970": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1971": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1973": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "1974": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1976": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1977": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1978": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3054
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1979": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3055,
        3056
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1980": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1981": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1982": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1983": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "LT",
      "path": "3"
    },
    "1984": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CB"
    },
    "1987": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1988": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CB"
    },
    "1991": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "1994": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3046,
        3057
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1995": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1996": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1998": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "MUL",
      "path": "3"
    },
    "1999": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2001": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "ADD",
      "path": "3"
    },
    "2002": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "ADD",
      "path": "3"
    },
    "2003": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3046,
        3057
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2004": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2005": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2006": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2008": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "2009": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3082
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2010": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3083,
        3084
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2011": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2012": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2013": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2014": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "LT",
      "path": "3"
    },
    "2015": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7EA"
    },
    "2018": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2019": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7EA"
    },
    "2022": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "2025": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3075,
        3085
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2026": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2027": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2029": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "MUL",
      "path": "3"
    },
    "2030": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2032": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "ADD",
      "path": "3"
    },
    "2033": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "ADD",
      "path": "3"
    },
    "2034": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3075,
        3085
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "AND",
      "path": "3"
    },
    "2044": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2045": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2046": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2048": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "2049": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3103,
        3104
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "AND",
      "path": "3"
    },
    "2060": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2061": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2062": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2064": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "ADD",
      "path": "3"
    },
    "2065": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3128
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2066": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3129,
        3130
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2067": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2068": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2069": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2070": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "LT",
      "path": "3"
    },
    "2071": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x822"
    },
    "2074": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2075": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x822"
    },
    "2078": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "2081": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3122,
        3131
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2082": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2083": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2085": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "MUL",
      "path": "3"
    },
    "2086": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2088": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "ADD",
      "path": "3"
    },
    "2089": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "ADD",
      "path": "3"
    },
    "2090": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3122,
        3131
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "op": "SUB"
    },
    "2099": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "AND",
      "path": "3"
    },
    "2100": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2101": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2102": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3019,
        3141
      ],
      "op": "POP",
      "path": "3"
    },
    "2103": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2998,
        3141
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2104": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2998,
        3141
      ],
      "op": "POP",
      "path": "3"
    },
    "2105": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3179,
        3180
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 5
    },
    "2106": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3164
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "2108": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2110": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3172
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2111": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3173,
        3174
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2112": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2113": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2114": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2115": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "LT",
      "path": "3"
    },
    "2116": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x84F"
    },
    "2119": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2120": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x84F"
    },
    "2123": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "2126": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3165,
        3175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2127": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2128": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2130": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2131": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2132": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "MUL",
      "path": "3"
    },
    "2133": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2134": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2135": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2136": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "ADD",
      "path": "3"
    },
    "2137": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2138": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "ADD",
      "path": "3"
    },
    "2139": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3165,
        3175
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "op": "SUB"
    },
    "2148": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2149": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2150": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "AND",
      "path": "3"
    },
    "2151": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2152": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2153": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2154": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2155": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "ADD",
      "path": "3"
    },
    "2156": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2157": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2158": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2159": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2160": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2162": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2163": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2164": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "ADD",
      "path": "3"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2167": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3176
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2168": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2169": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2170": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2171": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2172": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2173": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2174": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2175": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2176": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2177": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2178": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2179": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2189": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2190": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "AND",
      "path": "3"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "MUL",
      "path": "3"
    },
    "2197": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2198": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "AND",
      "path": "3"
    },
    "2199": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2200": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2201": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2202": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "OR",
      "path": "3"
    },
    "2203": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2205": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2206": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2207": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2208": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2210": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2211": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2212": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2213": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2214": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2216": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2217": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2218": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "ADD",
      "path": "3"
    },
    "2219": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2220": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2221": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2222": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2223": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2224": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "AND",
      "path": "3"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "op": "NOT"
    },
    "2234": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2235": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2236": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "AND",
      "path": "3"
    },
    "2237": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2238": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2239": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2240": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "OR",
      "path": "3"
    },
    "2241": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2242": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3155,
        3180
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2243": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 6
    },
    "2244": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2245": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "2247": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3200
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2248": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3213
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2249": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3213
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2250": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3214,
        3215
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2251": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3214,
        3215
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2252": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2253": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "LT",
      "path": "3"
    },
    "2254": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D9"
    },
    "2257": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2258": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D9"
    },
    "2261": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "2264": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3206,
        3216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2265": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2266": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2268": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2269": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2270": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "MUL",
      "path": "3"
    },
    "2271": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2272": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2273": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2274": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "ADD",
      "path": "3"
    },
    "2275": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2276": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "ADD",
      "path": "3"
    },
    "2277": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3206,
        3216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2278": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2279": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2280": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2282": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2283": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "ADD",
      "path": "3"
    },
    "2284": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2285": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2288": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2289": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2290": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2291": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2292": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2293": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2294": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2295": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "ADD",
      "path": "3"
    },
    "2296": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2297": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "op": "NOT"
    },
    "2307": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "AND",
      "path": "3"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "SUB"
    },
    "2316": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2317": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2318": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "AND",
      "path": "3"
    },
    "2319": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2320": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2321": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2322": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "OR",
      "path": "3"
    },
    "2323": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2324": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3194,
        3217
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2325": {
      "op": "POP"
    },
    "2326": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "2327": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91F"
    },
    "2330": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2331": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239A"
    },
    "2334": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        2979,
        2982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2335": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2336": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2337": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "POP",
      "path": "3"
    },
    "2338": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2979,
        2982
      ],
      "op": "POP",
      "path": "3"
    },
    "2339": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A4"
    },
    "2342": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2343": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2942,
        3228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3320
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0xB"
    },
    "2347": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2348": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2350": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2351": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x416073E33674C1F05095C354D2B4B414CA3AE45D0ECBA40599C89F1EE63C4B35"
    },
    "2384": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2385": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x973"
    },
    "2388": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2389": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3270,
        3277
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2390": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3270,
        3277
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2391": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3279,
        3286
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2392": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3279,
        3286
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2393": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3288,
        3294
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2394": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3288,
        3294
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2395": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3296,
        3304
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2396": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3296,
        3304
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2397": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2402": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "2408": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2409": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "DIV",
      "path": "3"
    },
    "2410": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2411": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "AND",
      "path": "3"
    },
    "2412": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3306,
        3326
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2413": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3328,
        3354
      ],
      "op": "AND",
      "path": "3"
    },
    "2414": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3328,
        3354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2415": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2429"
    },
    "2418": {
      "fn": "BuidlCollective.initialize",
      "jump": "i",
      "offset": [
        3242,
        3355
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2419": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2420": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2422": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2423": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2424": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2425": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "SUB",
      "path": "3"
    },
    "2426": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2427": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        3242,
        3355
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2428": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2399,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2429": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2430": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2431": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2432": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2433": {
      "fn": "BuidlCollective.initialize",
      "offset": [
        2221,
        3519
      ],
      "op": "POP",
      "path": "3"
    },
    "2434": {
      "fn": "BuidlCollective.initialize",
      "jump": "o",
      "offset": [
        2221,
        3519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2435": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2436": {
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2438": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5986,
        6000
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2439": {
      "offset": [
        5968,
        5983
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2440": {
      "offset": [
        5968,
        6000
      ],
      "op": "GT",
      "path": "3"
    },
    "2441": {
      "offset": [
        5964,
        6199
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2442": {
      "fn": "BuidlCollective.claim",
      "offset": [
        5964,
        6199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E7"
    },
    "2445": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2446": {
      "offset": [
        6080,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2448": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6080,
        6094
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2449": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99A"
    },
    "2452": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6062,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2453": {
      "offset": [
        6062,
        6077
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2454": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "2457": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2458": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2459": {
      "offset": [
        6047,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2461": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6047,
        6058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2462": {
      "offset": [
        6028,
        6039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2464": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2465": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9AD"
    },
    "2468": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6044
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2469": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2472": {
      "fn": "BuidlCollective.claim",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2473": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2476": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2477": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2478": {
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "2481": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2482": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2483": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "2486": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2487": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2488": {
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C1"
    },
    "2491": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2492": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2493": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2496": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2497": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2498": {
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2500": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2502": {
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2503": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2504": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2505": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D2"
    },
    "2508": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2509": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2510": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "2513": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2514": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2515": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2516": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2517": {
      "fn": "BuidlCollective.claim",
      "offset": [
        6016,
        6095
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "offset": [
        6126,
        6141
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2521": {
      "offset": [
        6109,
        6123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2523": {
      "offset": [
        6109,
        6141
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2524": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7254,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x9E4"
    },
    "2527": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7261,
        7265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2528": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7254,
        7260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "2531": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        7254,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2532": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7254,
        7266
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2533": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "POP",
      "path": "3"
    },
    "2534": {
      "fn": "BuidlCollective.claim",
      "jump": "o",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2535": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2536": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7254,
        7266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E4"
    },
    "2539": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7261,
        7265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2540": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7254,
        7260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "2543": {
      "fn": "BuidlCollective.claim",
      "jump": "i",
      "offset": [
        7254,
        7266
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2551": {
      "op": "SHL"
    },
    "2552": {
      "op": "SUB"
    },
    "2553": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "AND",
      "path": "4"
    },
    "2555": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3440,
        3444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2557": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2558": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2559": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2560": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2562": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2564": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2565": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2567": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2569": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2570": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2571": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3489
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2572": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3490,
        3500
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2574": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2575": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2578": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2579": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2580": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3474,
        3501
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2583": {
      "op": "NOT"
    },
    "2584": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2585": {
      "branch": 78,
      "fn": "ERC20.transferFrom",
      "offset": [
        3552,
        3580
      ],
      "op": "EQ",
      "path": "4"
    },
    "2586": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA4C"
    },
    "2589": {
      "branch": 78,
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0xA27"
    },
    "2593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3634,
        3640
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2594": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3631
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D3"
    },
    "2598": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3624,
        3640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "AND",
      "path": "4"
    },
    "2610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2614": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3603
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3609
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3610,
        3620
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3621
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3594,
        3640
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3548,
        3640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2643": {
      "op": "SHL"
    },
    "2644": {
      "op": "SUB"
    },
    "2645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 11
    },
    "2646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "AND",
      "path": "4"
    },
    "2647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3660
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3666
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA74"
    },
    "2669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3670,
        3676
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D3"
    },
    "2675": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3651,
        3676
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 12
    },
    "2691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "AND",
      "path": "4"
    },
    "2693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2709": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2710": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "ADD",
      "path": "4"
    },
    "2713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3845
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 13
    },
    "2716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3822,
        3835
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "AND",
      "path": "4"
    },
    "2720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2723": {
      "op": "DUP1"
    },
    "2724": {
      "op": "MLOAD"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2727": {
      "op": "PUSH2",
      "value": "0x27CF"
    },
    "2730": {
      "op": "DUP4"
    },
    "2731": {
      "op": "CODECOPY"
    },
    "2732": {
      "op": "DUP2"
    },
    "2733": {
      "op": "MLOAD"
    },
    "2734": {
      "op": "SWAP2"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xABD"
    },
    "2740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3839,
        3845
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "SWAP1"
    },
    "2748": {
      "op": "JUMP"
    },
    "2749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2754": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SUB",
      "path": "4"
    },
    "2756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "LOG3",
      "path": "4"
    },
    "2758": {
      "op": "POP"
    },
    "2759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x1"
    },
    "2761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3915,
        3919
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3322,
        3926
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "POP"
    },
    "2767": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3322,
        3926
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2768": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6589,
        6969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2769": {
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2771": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5986,
        6000
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2772": {
      "offset": [
        5968,
        5983
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2773": {
      "offset": [
        5968,
        6000
      ],
      "op": "GT",
      "path": "3"
    },
    "2774": {
      "offset": [
        5964,
        6199
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2775": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        5964,
        6199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC38"
    },
    "2778": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2779": {
      "offset": [
        6080,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2781": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6080,
        6094
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2782": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE7"
    },
    "2785": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6062,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2786": {
      "offset": [
        6062,
        6077
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2787": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "2790": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2791": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2792": {
      "offset": [
        6047,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2794": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6047,
        6058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2795": {
      "offset": [
        6028,
        6039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2797": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2798": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFA"
    },
    "2801": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6044
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2802": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2805": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2809": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2810": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2811": {
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB04"
    },
    "2814": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2815": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2816": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "2819": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2820": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2821": {
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0E"
    },
    "2824": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2825": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2826": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2829": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2830": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2831": {
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "2833": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2835": {
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2836": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2837": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2838": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1F"
    },
    "2841": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2842": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2843": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "2846": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2847": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2848": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2849": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2850": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6016,
        6095
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "offset": [
        6126,
        6141
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "2854": {
      "offset": [
        6109,
        6123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "2856": {
      "offset": [
        6109,
        6141
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2857": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6685
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0xB31"
    },
    "2860": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6674,
        6684
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2861": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "2864": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6667,
        6685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2865": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2866": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6748,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2868": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6748,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2869": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2871": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2872": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "2877": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB48"
    },
    "2880": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "2883": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6722
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2884": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2887": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2888": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2889": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB52"
    },
    "2892": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2893": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2894": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "2897": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2898": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2899": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5C"
    },
    "2902": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2903": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2904": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "2907": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2908": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2909": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6791,
        6801
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 16
    },
    "2910": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2912": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2913": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2914": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2915": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6790
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2917": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2919": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2920": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2922": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2923": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2924": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6817
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2925": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2926": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6778,
        6817
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2929": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6778,
        6817
      ],
      "op": "LT",
      "path": "3"
    },
    "2930": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBBB"
    },
    "2933": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2934": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2936": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2945": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2948": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2950": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2951": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "ADD",
      "path": "3"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2957": {
      "op": "DUP3"
    },
    "2958": {
      "op": "ADD"
    },
    "2959": {
      "op": "MSTORE"
    },
    "2960": {
      "op": "PUSH22",
      "value": "0x554E5354414B4520414D4F554E5420544F4F20424947"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2988": {
      "op": "DUP3"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "op": "MSTORE"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2995": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2997": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2998": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2999": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3000": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "SUB",
      "path": "3"
    },
    "3001": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3002": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "3003": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3004": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x40"
    },
    "3006": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3007": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3016": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3017": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6885,
        6895
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3018": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3020": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3021": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ADD",
      "path": "3"
    },
    "3022": {
      "op": "MSTORE"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3025": {
      "op": "DUP2"
    },
    "3026": {
      "op": "ADD"
    },
    "3027": {
      "op": "DUP4"
    },
    "3028": {
      "op": "SWAP1"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6869,
        6873
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3031": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6869,
        6873
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3032": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6884
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "3037": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6884
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3040": {
      "op": "ADD"
    },
    "3041": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3043": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3045": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3046": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3047": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3048": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "SUB",
      "path": "3"
    },
    "3049": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3050": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3052": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3053": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "GAS",
      "path": "3"
    },
    "3054": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "CALL",
      "path": "3"
    },
    "3055": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3056": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3057": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3058": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBFF"
    },
    "3061": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3062": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3063": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3065": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3066": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3067": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3068": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3070": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3071": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3072": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "POP",
      "path": "3"
    },
    "3073": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "POP",
      "path": "3"
    },
    "3074": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "POP",
      "path": "3"
    },
    "3075": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "POP",
      "path": "3"
    },
    "3076": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3078": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3079": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3080": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3082": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "NOT",
      "path": "3"
    },
    "3083": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3085": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3086": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ADD",
      "path": "3"
    },
    "3087": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "AND",
      "path": "3"
    },
    "3088": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3089": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ADD",
      "path": "3"
    },
    "3090": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3091": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3093": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3094": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "POP",
      "path": "3"
    },
    "3095": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3096": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "ADD",
      "path": "3"
    },
    "3097": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3098": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC23"
    },
    "3101": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3102": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3103": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2543"
    },
    "3106": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6854,
        6913
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3107": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6854,
        6913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3108": {
      "op": "POP"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6932,
        6942
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 18
    },
    "3111": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6961,
        6962
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3113": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3114": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3115": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3116": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3118": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3120": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3121": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3123": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3124": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6943
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3125": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6923,
        6962
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3126": {
      "fn": "BuidlCollective.claim",
      "offset": [
        7189,
        7276
      ],
      "op": "POP",
      "path": "3"
    },
    "3127": {
      "fn": "BuidlCollective.claim",
      "jump": "o",
      "offset": [
        7189,
        7276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3128": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3129": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6685
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC41"
    },
    "3132": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6674,
        6684
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3133": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "3136": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6667,
        6685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3137": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6667,
        6685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3138": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6748,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3140": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6748,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3141": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3143": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3144": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "3149": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC58"
    },
    "3152": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "3155": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6722
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3156": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3159": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3160": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3161": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC62"
    },
    "3164": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3165": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3166": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3169": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3170": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6745
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3171": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC6C"
    },
    "3174": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3175": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3176": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "3179": {
      "fn": "BuidlCollective.unstake",
      "jump": "i",
      "offset": [
        6707,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3180": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6707,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3181": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6791,
        6801
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3182": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3184": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3185": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3186": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3187": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6790
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3189": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3191": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3192": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3194": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3195": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6802
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3196": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6782,
        6817
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3197": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3198": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6695,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6778,
        6817
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3201": {
      "branch": 71,
      "fn": "BuidlCollective.unstake",
      "offset": [
        6778,
        6817
      ],
      "op": "LT",
      "path": "3"
    },
    "3202": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBBB"
    },
    "3205": {
      "branch": 71,
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3206": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3208": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3217": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3220": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3222": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3223": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "ADD",
      "path": "3"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH22",
      "value": "0x554E5354414B4520414D4F554E5420544F4F20424947"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "fn": "BuidlCollective.unstake",
      "offset": [
        6769,
        6844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB2"
    },
    "3269": {
      "op": "JUMP"
    },
    "3270": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6979,
        7183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3271": {
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "3273": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5986,
        6000
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3274": {
      "offset": [
        5968,
        5983
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3275": {
      "offset": [
        5968,
        6000
      ],
      "op": "GT",
      "path": "3"
    },
    "3276": {
      "offset": [
        5964,
        6199
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3277": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        5964,
        6199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDCE"
    },
    "3280": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3281": {
      "offset": [
        6080,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "3283": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6080,
        6094
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3284": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCDD"
    },
    "3287": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6062,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3288": {
      "offset": [
        6062,
        6077
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3289": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "3292": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3293": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3294": {
      "offset": [
        6047,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3296": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6047,
        6058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3297": {
      "offset": [
        6028,
        6039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3299": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3300": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF0"
    },
    "3303": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6044
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3304": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "3307": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3308": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3311": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3312": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3313": {
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFA"
    },
    "3316": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3317": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3318": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "3321": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3322": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3323": {
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD04"
    },
    "3326": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3327": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3328": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3331": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3332": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3333": {
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "3335": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3337": {
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3338": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3339": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3340": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD15"
    },
    "3343": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3344": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3345": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "3348": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3349": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3350": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3351": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3352": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        6016,
        6095
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "offset": [
        6126,
        6141
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "3356": {
      "offset": [
        6109,
        6123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "3358": {
      "offset": [
        6109,
        6141
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3359": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7118,
        7129
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0xA"
    },
    "3361": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7118,
        7129
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3362": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7068,
        7078
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3363": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3365": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3366": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3367": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3368": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7088
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3370": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3372": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3373": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3375": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3376": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3377": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3378": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7052,
        7056
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3379": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7052,
        7056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3380": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7067
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "3385": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7067
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3386": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7068,
        7078
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3387": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "3392": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        1160,
        1167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3393": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD49"
    },
    "3396": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3397": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3400": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3401": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3402": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7147
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD53"
    },
    "3405": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7147
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3406": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7147
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3407": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7147
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "3410": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        7080,
        7147
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3411": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7147
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3412": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3414": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3421": {
      "op": "SHL"
    },
    "3422": {
      "op": "SUB"
    },
    "3423": {
      "op": "NOT"
    },
    "3424": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3426": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3427": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3428": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SHL",
      "path": "3"
    },
    "3429": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "AND",
      "path": "3"
    },
    "3430": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3431": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "op": "SUB"
    },
    "3440": {
      "op": "SWAP1"
    },
    "3441": {
      "op": "SWAP3"
    },
    "3442": {
      "op": "AND"
    },
    "3443": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3445": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3446": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ADD",
      "path": "3"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3450": {
      "op": "DUP3"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3458": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3460": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3461": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3462": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3463": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SUB",
      "path": "3"
    },
    "3464": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3465": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3467": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3468": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "GAS",
      "path": "3"
    },
    "3469": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "CALL",
      "path": "3"
    },
    "3470": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3471": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3472": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3473": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9E"
    },
    "3476": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3477": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3478": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3480": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3481": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3482": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3483": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3485": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3486": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3487": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3488": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3489": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3490": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3491": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3493": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3494": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3495": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3497": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "NOT",
      "path": "3"
    },
    "3498": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3500": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3501": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ADD",
      "path": "3"
    },
    "3502": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "AND",
      "path": "3"
    },
    "3503": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3504": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ADD",
      "path": "3"
    },
    "3505": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3506": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3508": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3509": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3510": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3511": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "ADD",
      "path": "3"
    },
    "3512": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3513": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC2"
    },
    "3516": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3517": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3518": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2543"
    },
    "3521": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        7037,
        7148
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3522": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3523": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7148
      ],
      "op": "POP",
      "path": "3"
    },
    "3524": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7158,
        7176
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0xDCC"
    },
    "3527": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7165,
        7175
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3528": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7158,
        7164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "3531": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        7158,
        7176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3532": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7158,
        7176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3533": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "o",
      "offset": [
        6979,
        7183
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3534": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3535": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7118,
        7129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3537": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7118,
        7129
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3538": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7068,
        7078
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3539": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3541": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3542": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3543": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3544": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7088
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "3546": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3548": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3549": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3551": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3552": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7100
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3553": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7115
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3554": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7052,
        7056
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3555": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7052,
        7056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3556": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7067
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "3561": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7037,
        7067
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3562": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7068,
        7078
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3563": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "3568": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        1160,
        1167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3569": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD49"
    },
    "3572": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3573": {
      "fn": "BuidlCollective.unstakeAll",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "3576": {
      "fn": "BuidlCollective.unstakeAll",
      "jump": "i",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3577": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3578": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5459,
        5466
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3580": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5514,
        5530
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 21,
      "value": "0x0"
    },
    "3613": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5510
      ],
      "op": "CHAINID",
      "path": "4"
    },
    "3614": {
      "branch": 79,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5530
      ],
      "op": "EQ",
      "path": "4"
    },
    "3615": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE2F"
    },
    "3618": {
      "branch": 79,
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3619": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE2A"
    },
    "3622": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5614
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AC5"
    },
    "3625": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "i",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3626": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5592,
        5616
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3627": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3628": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5478,
        5616
      ],
      "op": "POP",
      "path": "4"
    },
    "3629": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5402,
        5623
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3630": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3631": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5497,
        5616
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "3666": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "offset": [
        5549,
        5573
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3667": {
      "fn": "ERC20.DOMAIN_SEPARATOR",
      "jump": "o",
      "offset": [
        5402,
        5623
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3668": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3892,
        4927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3669": {
      "offset": [
        1944,
        1949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3671": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1944,
        1949
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3672": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3947,
        3951
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3674": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3947,
        3951
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "offset": [
        1944,
        1949
      ],
      "op": "AND",
      "path": "3"
    },
    "3684": {
      "offset": [
        1930,
        1940
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3685": {
      "offset": [
        1930,
        1949
      ],
      "op": "EQ",
      "path": "3"
    },
    "3686": {
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6E"
    },
    "3689": {
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3690": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3692": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1922,
        1950
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3693": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1922,
        1950
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3694": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3695": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x6"
    },
    "3697": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3698": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x10000"
    },
    "3702": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3703": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "DIV",
      "path": "3"
    },
    "3704": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "3706": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3988
      ],
      "op": "AND",
      "path": "3"
    },
    "3707": {
      "branch": 72,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3971,
        3997
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3708": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE84"
    },
    "3711": {
      "branch": 72,
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3712": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3714": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3715": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3716": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3963,
        3998
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3717": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4025
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x6"
    },
    "3719": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3720": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3721": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "3725": {
      "op": "NOT"
    },
    "3726": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "AND",
      "path": "3"
    },
    "3727": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x10000"
    },
    "3731": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "OR",
      "path": "3"
    },
    "3732": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3733": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3734": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4069,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "3736": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3737": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3738": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3740": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3741": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3742": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3744": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3745": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3746": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MUL",
      "path": "3"
    },
    "3747": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3748": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3749": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3750": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3751": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3752": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3753": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3754": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3755": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3756": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3757": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3759": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4008,
        4032
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3760": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3761": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3762": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4069,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3763": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4069,
        4075
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3764": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3765": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3766": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4069,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3767": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3768": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3769": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3770": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEEC"
    },
    "3773": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3774": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3776": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MUL",
      "path": "3"
    },
    "3777": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3778": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3779": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3780": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3781": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3783": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3784": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3786": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3788": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3789": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3790": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3791": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3792": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "op": "SUB"
    },
    "3801": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "AND",
      "path": "3"
    },
    "3802": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3803": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3804": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3806": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3807": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3808": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3809": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3810": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3812": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3813": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3814": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3815": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "GT",
      "path": "3"
    },
    "3816": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xECE"
    },
    "3819": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3820": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3821": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3822": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3823": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3824": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3825": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3826": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3827": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4042,
        4075
      ],
      "op": "POP",
      "path": "3"
    },
    "3828": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4085,
        4113
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3830": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4123,
        4137
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3831": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4147,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3833": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4182,
        4191
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3834": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3835": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4197,
        4204
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3836": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4197,
        4211
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3837": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4193,
        4194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3838": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4193,
        4211
      ],
      "op": "LT",
      "path": "3"
    },
    "3839": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3840": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1040"
    },
    "3843": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3844": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4254
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x8"
    },
    "3846": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3848": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4262
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3849": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4263,
        4264
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3850": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3851": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3852": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3853": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "LT",
      "path": "3"
    },
    "3854": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF19"
    },
    "3857": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3858": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF19"
    },
    "3861": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "3864": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4255,
        4265
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3865": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3866": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3868": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3869": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3870": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "MUL",
      "path": "3"
    },
    "3871": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3872": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3873": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3874": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "ADD",
      "path": "3"
    },
    "3875": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3876": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "ADD",
      "path": "3"
    },
    "3877": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4255,
        4265
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3887": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3888": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "AND",
      "path": "3"
    },
    "3889": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3890": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3891": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3892": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3893": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "ADD",
      "path": "3"
    },
    "3894": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3895": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3896": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3897": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3898": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3900": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "ADD",
      "path": "3"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3904": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4298,
        4315
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3905": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4298,
        4315
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3906": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3908": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3909": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "ADD",
      "path": "3"
    },
    "3910": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3911": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "DUP9",
      "path": "3",
      "statement": 25
    },
    "3912": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3913": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3914": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4245,
        4266
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4298,
        4315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3917": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4298,
        4315
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3918": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "AND",
      "path": "3"
    },
    "3919": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4351,
        4366
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3920": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4394
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3921": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3922": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4395,
        4396
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3923": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4395,
        4396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3924": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3925": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "LT",
      "path": "3"
    },
    "3926": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF61"
    },
    "3929": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3930": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF61"
    },
    "3933": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "3936": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4387,
        4397
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3937": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3938": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3940": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3941": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3942": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "MUL",
      "path": "3"
    },
    "3943": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3944": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3945": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3946": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "ADD",
      "path": "3"
    },
    "3947": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "ADD",
      "path": "3"
    },
    "3948": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4387,
        4397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3949": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3951": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3952": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3959": {
      "op": "SHL"
    },
    "3960": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3961": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3968": {
      "op": "SHL"
    },
    "3969": {
      "op": "SUB"
    },
    "3970": {
      "op": "DUP4"
    },
    "3971": {
      "op": "DUP2"
    },
    "3972": {
      "op": "AND"
    },
    "3973": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3975": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3976": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ADD",
      "path": "3"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4433,
        4437
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3981": {
      "op": "DUP4"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "MSTORE"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3986": {
      "op": "DUP3"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "DUP6"
    },
    "3989": {
      "op": "SWAP1"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3992": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3993": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "AND",
      "path": "3"
    },
    "3994": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3995": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "4000": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4411
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4006": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4008": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4009": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4010": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4011": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "SUB",
      "path": "3"
    },
    "4012": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4013": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4015": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4016": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "GAS",
      "path": "3"
    },
    "4017": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "CALL",
      "path": "3"
    },
    "4018": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4019": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4020": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4021": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC2"
    },
    "4024": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4025": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4026": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4028": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4029": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4030": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4031": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4033": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4034": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4035": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "POP",
      "path": "3"
    },
    "4036": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "POP",
      "path": "3"
    },
    "4037": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "POP",
      "path": "3"
    },
    "4038": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "POP",
      "path": "3"
    },
    "4039": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4041": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4042": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4043": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4045": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "NOT",
      "path": "3"
    },
    "4046": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4048": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4049": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ADD",
      "path": "3"
    },
    "4050": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "AND",
      "path": "3"
    },
    "4051": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4052": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ADD",
      "path": "3"
    },
    "4053": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4054": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4056": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4057": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "POP",
      "path": "3"
    },
    "4058": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4059": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "ADD",
      "path": "3"
    },
    "4060": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4061": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE6"
    },
    "4064": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4065": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4066": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2543"
    },
    "4069": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4380,
        4447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4070": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4380,
        4447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4555,
        4571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4074": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4555,
        4571
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4075": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4555,
        4571
      ],
      "op": "ADD",
      "path": "3"
    },
    "4076": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4555,
        4571
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4077": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4525,
        4543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4079": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4525,
        4543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4080": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4577
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "4085": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4574,
        4577
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4086": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1008"
    },
    "4089": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4555,
        4571
      ],
      "op": "AND",
      "path": "3"
    },
    "4099": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4552
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4100": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "4103": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4546,
        4571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4104": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4105": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4577
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1012"
    },
    "4108": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4577
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4109": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4577
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4110": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4577
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "4113": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4546,
        4577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4114": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4546,
        4577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4115": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4525,
        4577
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4116": {
      "op": "POP"
    },
    "4117": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x101E"
    },
    "4120": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4525,
        4577
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4121": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4122": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "4125": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4591,
        4617
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4126": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4127": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4128": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4591,
        4617
      ],
      "op": "POP",
      "path": "3"
    },
    "4129": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4681,
        4711
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0x102A"
    },
    "4132": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4687,
        4698
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4133": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4700,
        4710
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4134": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4681,
        4686
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B5F"
    },
    "4137": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4681,
        4711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4138": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4681,
        4711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4139": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4218,
        4722
      ],
      "op": "POP",
      "path": "3"
    },
    "4140": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4218,
        4722
      ],
      "op": "POP",
      "path": "3"
    },
    "4141": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4218,
        4722
      ],
      "op": "POP",
      "path": "3"
    },
    "4142": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 28
    },
    "4143": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4144": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1038"
    },
    "4147": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4148": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239A"
    },
    "4151": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4213,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4152": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4153": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4154": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "POP",
      "path": "3"
    },
    "4155": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4213,
        4216
      ],
      "op": "POP",
      "path": "3"
    },
    "4156": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEFA"
    },
    "4159": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4160": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4177,
        4722
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4161": {
      "op": "POP"
    },
    "4162": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0xB"
    },
    "4164": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4165": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4166": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "op": "NOT"
    },
    "4175": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "AND",
      "path": "3"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4180": {
      "op": "SHL"
    },
    "4181": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4771,
        4786
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4182": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4187": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4188": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4189": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "AND",
      "path": "3"
    },
    "4190": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4191": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "MUL",
      "path": "3"
    },
    "4192": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4193": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4194": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4195": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "OR",
      "path": "3"
    },
    "4196": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4197": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4198": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4199": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4731,
        4787
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4200": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4867
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0x107F"
    },
    "4203": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4867
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4204": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "4210": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4211": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "DIV",
      "path": "3"
    },
    "4212": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4213": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "AND",
      "path": "3"
    },
    "4214": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4847,
        4867
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4215": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4844
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4216": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4844
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4217": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4844
      ],
      "op": "DIV",
      "path": "3"
    },
    "4218": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4844
      ],
      "op": "AND",
      "path": "3"
    },
    "4219": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2565"
    },
    "4222": {
      "fn": "BuidlCollective.startCollective",
      "jump": "i",
      "offset": [
        4814,
        4867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4223": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4814,
        4867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4224": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4797,
        4867
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4229": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4797,
        4867
      ],
      "op": "AND",
      "path": "3"
    },
    "4230": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4797,
        4811
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4232": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4797,
        4867
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4233": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x40"
    },
    "4235": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4236": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4904,
        4919
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4237": {
      "op": "DUP2"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x83AAEE11563F280EAC61EBD060F088CE7577D5E823EFA6C78DE1CFEC8167605D"
    },
    "4272": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4278": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4279": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4280": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4281": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "SUB",
      "path": "3"
    },
    "4282": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4283": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        4882,
        4920
      ],
      "op": "LOG1",
      "path": "3"
    },
    "4284": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "4285": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "4286": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "4287": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3953,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "4288": {
      "fn": "BuidlCollective.startCollective",
      "offset": [
        3892,
        4927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4289": {
      "fn": "BuidlCollective.startCollective",
      "jump": "o",
      "offset": [
        3892,
        4927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4290": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3578,
        3711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4291": {
      "offset": [
        1944,
        1949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4293": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1944,
        1949
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "offset": [
        1944,
        1949
      ],
      "op": "AND",
      "path": "3"
    },
    "4303": {
      "offset": [
        1930,
        1940
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4304": {
      "offset": [
        1930,
        1949
      ],
      "op": "EQ",
      "path": "3"
    },
    "4305": {
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D9"
    },
    "4308": {
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4309": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4311": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1922,
        1950
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4312": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1922,
        1950
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4313": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4314": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x6"
    },
    "4316": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4317": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x10000"
    },
    "4321": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4322": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "DIV",
      "path": "3"
    },
    "4323": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "4325": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3668
      ],
      "op": "AND",
      "path": "3"
    },
    "4326": {
      "branch": 73,
      "fn": "BuidlCollective.cancel",
      "offset": [
        3651,
        3677
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4327": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10EF"
    },
    "4330": {
      "branch": 73,
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4331": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4333": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4334": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4335": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3643,
        3678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4336": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3701,
        3703
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 33
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3688,
        3704
      ],
      "op": "AND",
      "path": "3"
    },
    "4346": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        3688,
        3704
      ],
      "op": "SELFDESTRUCT",
      "path": "3"
    },
    "4347": {
      "offset": [
        616,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4348": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4350": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4351": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4352": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4353": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4354": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "LT",
      "path": "3"
    },
    "4355": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x110B"
    },
    "4358": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4359": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4361": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4362": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4363": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4364": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4366": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4367": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4368": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4369": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4371": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4372": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4373": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4374": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "4375": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "offset": [
        616,
        639
      ],
      "op": "AND",
      "path": "3"
    },
    "4385": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        616,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "offset": [
        616,
        639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4388": {
      "fn": "BuidlCollective.cancel",
      "jump": "o",
      "offset": [
        616,
        639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4389": {
      "offset": [
        1087,
        1107
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4390": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4392": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4393": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4394": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x646"
    },
    "4397": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4398": {
      "fn": "BuidlCollective.cancel",
      "offset": [
        1087,
        1107
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2339"
    },
    "4401": {
      "fn": "BuidlCollective.cancel",
      "jump": "i",
      "offset": [
        1087,
        1107
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4402": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4403": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5505,
        5511
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4405": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5505,
        5518
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4406": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5443,
        5456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4408": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5443,
        5456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4409": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5468,
        5491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4411": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5468,
        5491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4412": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4421": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4422": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "GT",
      "path": "3"
    },
    "4423": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4424": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1153"
    },
    "4427": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4428": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1153"
    },
    "4431": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE5"
    },
    "4434": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5494,
        5519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4435": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4436": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4438": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4439": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4440": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4441": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4442": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4443": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4444": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4446": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "MUL",
      "path": "3"
    },
    "4447": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4449": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ADD",
      "path": "3"
    },
    "4450": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4451": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ADD",
      "path": "3"
    },
    "4452": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4454": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4455": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4456": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4457": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x117C"
    },
    "4460": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4461": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4462": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4464": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ADD",
      "path": "3"
    },
    "4465": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4467": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4468": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "MUL",
      "path": "3"
    },
    "4469": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4470": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "4471": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4472": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "4473": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "ADD",
      "path": "3"
    },
    "4474": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4475": {
      "op": "POP"
    },
    "4476": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4477": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5494,
        5519
      ],
      "op": "POP",
      "path": "3"
    },
    "4478": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5468,
        5519
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4479": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5468,
        5519
      ],
      "op": "POP",
      "path": "3"
    },
    "4480": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5534,
        5543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4482": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4483": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5549,
        5555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4485": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5549,
        5562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4486": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5545,
        5562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4487": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5545,
        5562
      ],
      "op": "LT",
      "path": "3"
    },
    "4488": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4489": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F0"
    },
    "4492": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4493": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5583,
        5602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4495": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5614
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4497": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4499": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4501": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5622,
        5623
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4502": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4503": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4504": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4505": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "LT",
      "path": "3"
    },
    "4506": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A5"
    },
    "4509": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4510": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A5"
    },
    "4513": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "4516": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5615,
        5624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4517": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4518": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4520": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4521": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4522": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4523": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4525": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4526": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4527": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4528": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4529": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4530": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "ADD",
      "path": "3"
    },
    "4531": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "SUB"
    },
    "4540": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4541": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4542": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "AND",
      "path": "3"
    },
    "4543": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4544": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4545": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4546": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4547": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "ADD",
      "path": "3"
    },
    "4548": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4549": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4550": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4551": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4552": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4554": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4555": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4556": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "ADD",
      "path": "3"
    },
    "4557": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4558": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5625
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4559": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4561": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "ADD",
      "path": "3"
    },
    "4562": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4563": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5677
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4565": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4566": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4567": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4568": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4569": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4570": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "AND",
      "path": "3"
    },
    "4571": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5605,
        5630
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4574": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4575": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5677
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4576": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4577": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5678,
        5679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4578": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4579": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "LT",
      "path": "3"
    },
    "4580": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EF"
    },
    "4583": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4584": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EF"
    },
    "4587": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "4590": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5671,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4591": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4592": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4594": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4595": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4596": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4597": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4599": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4600": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4601": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4602": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "ADD",
      "path": "3"
    },
    "4603": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4604": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4606": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4607": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4614": {
      "op": "SHL"
    },
    "4615": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4616": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "op": "SUB"
    },
    "4625": {
      "op": "DUP5"
    },
    "4626": {
      "op": "DUP2"
    },
    "4627": {
      "op": "AND"
    },
    "4628": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4630": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4631": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ADD",
      "path": "3"
    },
    "4632": {
      "op": "MSTORE"
    },
    "4633": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5713,
        5717
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4636": {
      "op": "DUP4"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4640": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4641": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "AND",
      "path": "3"
    },
    "4642": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5671,
        5680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4643": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5691
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "4648": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5691
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4654": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4656": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4657": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4658": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4659": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "SUB",
      "path": "3"
    },
    "4660": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4661": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4662": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "GAS",
      "path": "3"
    },
    "4663": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4664": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4665": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4666": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4667": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1248"
    },
    "4670": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4671": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4672": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4674": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4675": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4676": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4677": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4679": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4680": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4681": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4682": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4683": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4684": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4685": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4687": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4688": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4689": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4691": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "NOT",
      "path": "3"
    },
    "4692": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4694": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4695": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ADD",
      "path": "3"
    },
    "4696": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "AND",
      "path": "3"
    },
    "4697": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4698": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ADD",
      "path": "3"
    },
    "4699": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4700": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4702": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4703": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4704": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4705": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "ADD",
      "path": "3"
    },
    "4706": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4707": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126C"
    },
    "4710": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4711": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4712": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258D"
    },
    "4715": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5664,
        5719
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4716": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5664,
        5719
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4717": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5644,
        5719
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4718": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5644,
        5719
      ],
      "op": "POP",
      "path": "3"
    },
    "4719": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5733,
        5746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4721": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5771
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4723": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4725": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5778
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4727": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5779,
        5780
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4728": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4729": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4730": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4731": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "LT",
      "path": "3"
    },
    "4732": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1287"
    },
    "4735": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4736": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1287"
    },
    "4739": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "4742": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5772,
        5781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4743": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4744": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4746": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4747": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4748": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4749": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4751": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4752": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4753": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4754": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4755": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4756": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "ADD",
      "path": "3"
    },
    "4757": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4764": {
      "op": "SHL"
    },
    "4765": {
      "op": "SUB"
    },
    "4766": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5772,
        5781
      ],
      "op": "AND",
      "path": "3"
    },
    "4767": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4768": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4769": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4770": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "ADD",
      "path": "3"
    },
    "4771": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4772": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4773": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4774": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4775": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4777": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "ADD",
      "path": "3"
    },
    "4778": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4779": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5782
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4780": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5762,
        5789
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4781": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 34
    },
    "4782": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4783": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4784": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4785": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "LT",
      "path": "3"
    },
    "4786": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4787": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4788": {
      "op": "POP"
    },
    "4789": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4790": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5749,
        5789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4791": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5812
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4792": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5812
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4793": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5813,
        5814
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4794": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5813,
        5814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4795": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4796": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "LT",
      "path": "3"
    },
    "4797": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C8"
    },
    "4800": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4801": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C8"
    },
    "4804": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "4807": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5803,
        5815
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4808": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4809": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4811": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "MUL",
      "path": "3"
    },
    "4812": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4814": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "ADD",
      "path": "3"
    },
    "4815": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5815
      ],
      "op": "ADD",
      "path": "3"
    },
    "4816": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4817": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4818": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4819": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4820": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4821": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4822": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4823": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4824": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4825": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "POP",
      "path": "3"
    },
    "4826": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5803,
        5826
      ],
      "op": "POP",
      "path": "3"
    },
    "4827": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5569,
        5837
      ],
      "op": "POP",
      "path": "3"
    },
    "4828": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5569,
        5837
      ],
      "op": "POP",
      "path": "3"
    },
    "4829": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5569,
        5837
      ],
      "op": "POP",
      "path": "3"
    },
    "4830": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 35
    },
    "4831": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4832": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E8"
    },
    "4835": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4836": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239A"
    },
    "4839": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "i",
      "offset": [
        5564,
        5567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4840": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4841": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4842": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "POP",
      "path": "3"
    },
    "4843": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5564,
        5567
      ],
      "op": "POP",
      "path": "3"
    },
    "4844": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1182"
    },
    "4847": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4848": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5529,
        5837
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5853,
        5862
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 36
    },
    "4851": {
      "fn": "BuidlCollective.pokeApproval",
      "offset": [
        5399,
        5869
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "fn": "BuidlCollective.pokeApproval",
      "jump": "o",
      "offset": [
        5399,
        5869
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4854": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4855": {
      "offset": [
        5986,
        6000
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4857": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5986,
        6000
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4858": {
      "offset": [
        5968,
        5983
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4859": {
      "offset": [
        5968,
        6000
      ],
      "op": "GT",
      "path": "3"
    },
    "4860": {
      "offset": [
        5964,
        6199
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4861": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5964,
        6199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F9"
    },
    "4864": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4865": {
      "offset": [
        6080,
        6094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4867": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6080,
        6094
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4868": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x130D"
    },
    "4871": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6062,
        6094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4872": {
      "offset": [
        6062,
        6077
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4873": {
      "offset": [
        6062,
        6094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "4876": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4877": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6062,
        6094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4878": {
      "offset": [
        6047,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4880": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6047,
        6058
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4881": {
      "offset": [
        6028,
        6039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4883": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4884": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1320"
    },
    "4887": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6044
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4888": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "4891": {
      "fn": "BuidlCollective.stake",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4892": {
      "offset": [
        6028,
        6044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "4895": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4896": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4897": {
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x132A"
    },
    "4900": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4901": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4902": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6058
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "4905": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4906": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6058
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4907": {
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1334"
    },
    "4910": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4911": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4912": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "4915": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4916": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6028,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4917": {
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "4919": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4921": {
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4922": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4923": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4924": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1345"
    },
    "4927": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4928": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4929": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "4932": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4933": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4934": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4935": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4936": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6016,
        6095
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4937": {
      "op": "POP"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "offset": [
        6126,
        6141
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4940": {
      "offset": [
        6109,
        6123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "4942": {
      "offset": [
        6109,
        6141
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4943": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4945": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4946": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4947": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "4949": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4950": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "4951": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4952": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4953": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4954": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6446,
        6457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4956": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6446,
        6457
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4957": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4959": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4960": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4961": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4962": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4963": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "4968": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1373"
    },
    "4971": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "4974": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6420
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4975": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "4978": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4979": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4980": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x137D"
    },
    "4983": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4984": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4985": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "4988": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4989": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4990": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "4993": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4994": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4995": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "4998": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6457
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4999": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5000": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5001": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5002": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5004": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5005": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6459,
        6467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "5007": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6459,
        6467
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5008": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5009": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5010": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5012": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5013": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6469,
        6484
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5014": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5015": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5016": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5018": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5019": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A2"
    },
    "5022": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB9"
    },
    "5025": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6486,
        6505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5026": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5027": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5028": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5029": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6525,
        6535
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 37
    },
    "5030": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5032": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5033": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5034": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5035": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "5037": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5039": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5040": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5041": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5042": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5044": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5045": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5046": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5047": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5048": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5049": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5050": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5051": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5052": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5053": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5054": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5055": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5057": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5058": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5059": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5060": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5061": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5062": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5063": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5065": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5066": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5067": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5068": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5070": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5071": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5072": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5073": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5075": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5076": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5077": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5078": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5079": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 38,
      "value": "0xF"
    },
    "5081": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5082": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5083": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6506
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5084": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6506
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5087": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5088": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5089": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5090": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5091": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13ED"
    },
    "5094": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5095": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5096": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5097": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "5100": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6550,
        6576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5101": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5102": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5103": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5104": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "offset": [
        5964,
        6199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E4"
    },
    "5109": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5964,
        6199
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5110": {
      "op": "POP"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "offset": [
        5964,
        6199
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5113": {
      "fn": "BuidlCollective.stake",
      "offset": [
        5964,
        6199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5114": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5116": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5117": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5118": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "5120": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5121": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5122": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5123": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5124": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5125": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6446,
        6457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "5127": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6446,
        6457
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5128": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5130": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5131": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5132": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5133": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5134": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "5139": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141E"
    },
    "5142": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "5145": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6420
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5146": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "5149": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5150": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5151": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1428"
    },
    "5154": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5155": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5156": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "5159": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5160": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5161": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1432"
    },
    "5164": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5165": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5166": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "5169": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6409,
        6457
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5170": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6409,
        6457
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5171": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5172": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5173": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5175": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5176": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6459,
        6467
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "5178": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6459,
        6467
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5179": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5180": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5181": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5183": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5184": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6469,
        6484
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5185": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5186": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5187": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5189": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "ADD",
      "path": "3"
    },
    "5190": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144D"
    },
    "5193": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB9"
    },
    "5196": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6486,
        6505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5197": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6486,
        6505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5198": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5199": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6400,
        6506
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5200": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6525,
        6535
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5201": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5203": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5204": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5205": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5206": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "5208": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5210": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5211": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5212": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5213": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5215": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5216": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5217": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5218": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5219": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5220": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5221": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5222": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5223": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5224": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5225": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5226": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5228": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5229": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5230": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5231": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5232": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5233": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5234": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5236": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5237": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5238": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5239": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5241": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5242": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5243": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5244": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5246": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5247": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5248": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "ADD",
      "path": "3"
    },
    "5249": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6540
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5250": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "5252": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5253": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5254": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6506
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5255": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6380,
        6506
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5256": {
      "op": "POP"
    },
    "5257": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5258": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5259": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5260": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6561
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5261": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6516,
        6536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5262": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1498"
    },
    "5265": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5266": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5267": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6565,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5268": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252B"
    },
    "5271": {
      "fn": "BuidlCollective.stake",
      "jump": "i",
      "offset": [
        6550,
        6576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5272": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5273": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5274": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5275": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6550,
        6576
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5276": {
      "op": "POP"
    },
    "5277": {
      "op": "POP"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "fn": "BuidlCollective.stake",
      "offset": [
        6225,
        6583
      ],
      "op": "POP",
      "path": "3"
    },
    "5280": {
      "fn": "BuidlCollective.stake",
      "jump": "o",
      "offset": [
        6225,
        6583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5281": {
      "fn": "ERC20.transfer",
      "offset": [
        2915,
        3316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5282": {
      "fn": "ERC20.transfer",
      "offset": [
        3039,
        3049
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 39
    },
    "5283": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5285": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5286": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5287": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5288": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3038
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5290": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5292": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5293": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5295": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5296": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5297": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5298": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5299": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5300": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5301": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3050
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5302": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5303": {
      "fn": "ERC20.transfer",
      "offset": [
        3009,
        3013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5304": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14C2"
    },
    "5307": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5308": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5309": {
      "fn": "ERC20.transfer",
      "offset": [
        3054,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5310": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D3"
    },
    "5313": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5314": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5315": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5316": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5317": {
      "fn": "ERC20.transfer",
      "offset": [
        3029,
        3060
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "op": "SUB"
    },
    "5328": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 40
    },
    "5329": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "AND",
      "path": "4"
    },
    "5330": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5332": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5333": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5334": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5335": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3215
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "5337": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5339": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5340": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5342": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5343": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5344": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5345": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3219
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5346": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5347": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5348": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5349": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "ADD",
      "path": "4"
    },
    "5350": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5351": {
      "fn": "ERC20.transfer",
      "offset": [
        3206,
        3229
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5352": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 41
    },
    "5353": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "CALLER",
      "path": "4"
    },
    "5354": {
      "fn": "ERC20.transfer",
      "offset": [
        3264,
        3274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5357": {
      "op": "DUP1"
    },
    "5358": {
      "op": "MLOAD"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5361": {
      "op": "PUSH2",
      "value": "0x27CF"
    },
    "5364": {
      "op": "DUP4"
    },
    "5365": {
      "op": "CODECOPY"
    },
    "5366": {
      "op": "DUP2"
    },
    "5367": {
      "op": "MLOAD"
    },
    "5368": {
      "op": "SWAP2"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5371": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x722"
    },
    "5374": {
      "fn": "ERC20.transfer",
      "offset": [
        3255,
        3287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5375": {
      "fn": "ERC20.transfer",
      "offset": [
        3223,
        3229
      ],
      "op": "DUP7",
      "path": "4"
    },
    "5376": {
      "op": "DUP2"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "op": "SWAP1"
    },
    "5382": {
      "op": "JUMP"
    },
    "5383": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5386": {
      "op": "DUP1"
    },
    "5387": {
      "op": "MLOAD"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5390": {
      "op": "DUP2"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "DUP3"
    },
    "5393": {
      "op": "MSTORE"
    },
    "5394": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5203,
        5210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5396": {
      "op": "DUP1"
    },
    "5397": {
      "op": "DUP3"
    },
    "5398": {
      "op": "MSTORE"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5401": {
      "op": "DUP3"
    },
    "5402": {
      "op": "ADD"
    },
    "5403": {
      "op": "DUP2"
    },
    "5404": {
      "op": "SWAP1"
    },
    "5405": {
      "op": "MSTORE"
    },
    "5406": {
      "op": "SWAP2"
    },
    "5407": {
      "op": "DUP2"
    },
    "5408": {
      "op": "ADD"
    },
    "5409": {
      "op": "DUP3"
    },
    "5410": {
      "op": "SWAP1"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5414": {
      "op": "DUP2"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "DUP3"
    },
    "5417": {
      "op": "SWAP1"
    },
    "5418": {
      "op": "MSTORE"
    },
    "5419": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5239,
        5256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5421": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5265
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "5423": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5266,
        5274
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5424": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5425": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5426": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5427": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "LT",
      "path": "3"
    },
    "5428": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153F"
    },
    "5431": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5432": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153F"
    },
    "5435": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "5438": {
      "fn": "BuidlCollective.readToken",
      "jump": "i",
      "offset": [
        5259,
        5275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5439": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5440": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5442": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5443": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5444": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5445": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5447": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5448": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5449": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5450": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5451": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5452": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "ADD",
      "path": "3"
    },
    "5453": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5460": {
      "op": "SHL"
    },
    "5461": {
      "op": "SUB"
    },
    "5462": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5463": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5464": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "AND",
      "path": "3"
    },
    "5465": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 42
    },
    "5466": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5467": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5468": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "5470": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5471": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5472": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5474": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5475": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5476": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5477": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5304,
        5324
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5478": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5479": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5480": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "5482": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5483": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5484": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5485": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5486": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5487": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5488": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5489": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5490": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5492": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5493": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5494": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5501": {
      "op": "SHL"
    },
    "5502": {
      "op": "SUB"
    },
    "5503": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5504": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5505": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "AND",
      "path": "3"
    },
    "5506": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5507": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5508": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5509": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5510": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5511": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "5512": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5517": {
      "op": "SHL"
    },
    "5518": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5519": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DIV",
      "path": "3"
    },
    "5520": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5521": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5522": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "AND",
      "path": "3"
    },
    "5523": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5524": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5525": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5526": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5527": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5528": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5529": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5530": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5532": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5533": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5534": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5535": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5536": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "AND",
      "path": "3"
    },
    "5537": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5539": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5540": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "ADD",
      "path": "3"
    },
    "5541": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5542": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5543": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5259,
        5275
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5544": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5545": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5285,
        5325
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "fn": "BuidlCollective.readToken",
      "offset": [
        5145,
        5332
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "fn": "BuidlCollective.readToken",
      "jump": "o",
      "offset": [
        5145,
        5332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5552": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5553": {
      "fn": "ERC20.permit",
      "offset": [
        4336,
        4351
      ],
      "op": "TIMESTAMP",
      "path": "4",
      "statement": 43
    },
    "5554": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4332
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5555": {
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "LT",
      "path": "4"
    },
    "5556": {
      "branch": 80,
      "fn": "ERC20.permit",
      "offset": [
        4324,
        4351
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5557": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1600"
    },
    "5560": {
      "branch": 80,
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5561": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5563": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5570": {
      "op": "SHL"
    },
    "5571": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5572": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5575": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5577": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5578": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "ADD",
      "path": "4"
    },
    "5579": {
      "op": "MSTORE"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5584": {
      "op": "DUP3"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "op": "MSTORE"
    },
    "5587": {
      "op": "PUSH32",
      "value": "0x5045524D49545F444541444C494E455F45585049524544000000000000000000"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBB2"
    },
    "5631": {
      "op": "JUMP"
    },
    "5632": {
      "fn": "ERC20.permit",
      "offset": [
        4316,
        4379
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5633": {
      "fn": "ERC20.permit",
      "offset": [
        4544,
        4558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5635": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160A"
    },
    "5638": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4674
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF9"
    },
    "5641": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5642": {
      "fn": "ERC20.permit",
      "offset": [
        4658,
        4676
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5649": {
      "op": "SHL"
    },
    "5650": {
      "op": "SUB"
    },
    "5651": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP10",
      "path": "4"
    },
    "5652": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5653": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "AND",
      "path": "4"
    },
    "5654": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5656": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5657": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5658": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5659": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4931
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "5661": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5663": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5664": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5665": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5666": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5668": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5669": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5670": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5671": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4938
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5672": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5673": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5674": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5676": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5677": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "ADD",
      "path": "4"
    },
    "5678": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5679": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5680": {
      "fn": "ERC20.permit",
      "offset": [
        4925,
        4940
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "5681": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5682": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5683": {
      "offset": [
        1727,
        1844
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "5716": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5717": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5718": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "4"
    },
    "5719": {
      "op": "MSTORE"
    },
    "5720": {
      "op": "DUP1"
    },
    "5721": {
      "op": "DUP5"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "SWAP5"
    },
    "5724": {
      "op": "SWAP1"
    },
    "5725": {
      "op": "SWAP5"
    },
    "5726": {
      "op": "MSTORE"
    },
    "5727": {
      "op": "SWAP4"
    },
    "5728": {
      "op": "DUP13"
    },
    "5729": {
      "op": "AND"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5732": {
      "op": "DUP5"
    },
    "5733": {
      "op": "ADD"
    },
    "5734": {
      "op": "MSTORE"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5737": {
      "op": "DUP4"
    },
    "5738": {
      "op": "ADD"
    },
    "5739": {
      "op": "DUP12"
    },
    "5740": {
      "op": "SWAP1"
    },
    "5741": {
      "op": "MSTORE"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5744": {
      "op": "DUP4"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "SWAP4"
    },
    "5747": {
      "op": "SWAP1"
    },
    "5748": {
      "op": "SWAP4"
    },
    "5749": {
      "op": "MSTORE"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5752": {
      "op": "DUP1"
    },
    "5753": {
      "op": "DUP4"
    },
    "5754": {
      "op": "ADD"
    },
    "5755": {
      "op": "DUP11"
    },
    "5756": {
      "op": "SWAP1"
    },
    "5757": {
      "op": "MSTORE"
    },
    "5758": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5759": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5760": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5761": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5762": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SUB",
      "path": "4"
    },
    "5763": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5764": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5765": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "ADD",
      "path": "4"
    },
    "5766": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5767": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5770": {
      "op": "DUP4"
    },
    "5771": {
      "op": "ADD"
    },
    "5772": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5773": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5774": {
      "fn": "ERC20.permit",
      "offset": [
        4733,
        5004
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5775": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5776": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5777": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5778": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "ADD",
      "path": "4"
    },
    "5779": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5780": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5781": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5782": {
      "fn": "ERC20.permit",
      "offset": [
        4698,
        5026
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5788": {
      "op": "SHL"
    },
    "5789": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "5792": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5793": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "4"
    },
    "5794": {
      "op": "MSTORE"
    },
    "5795": {
      "op": "PUSH2",
      "value": "0x102"
    },
    "5798": {
      "op": "DUP3"
    },
    "5799": {
      "op": "ADD"
    },
    "5800": {
      "op": "SWAP3"
    },
    "5801": {
      "op": "SWAP1"
    },
    "5802": {
      "op": "SWAP3"
    },
    "5803": {
      "op": "MSTORE"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "5807": {
      "op": "DUP2"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "SWAP2"
    },
    "5810": {
      "op": "SWAP1"
    },
    "5811": {
      "op": "SWAP2"
    },
    "5812": {
      "op": "MSTORE"
    },
    "5813": {
      "op": "PUSH2",
      "value": "0x142"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5819": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5820": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5823": {
      "op": "NOT"
    },
    "5824": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5825": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5826": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "SUB",
      "path": "4"
    },
    "5827": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "ADD",
      "path": "4"
    },
    "5828": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5829": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5830": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5831": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5832": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5833": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5834": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5835": {
      "fn": "ERC20.permit",
      "offset": [
        4588,
        5044
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5837": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5838": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5839": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "ADD",
      "path": "4"
    },
    "5840": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5841": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5843": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5844": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5845": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5846": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5847": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5848": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "4"
    },
    "5849": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5850": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5851": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5852": {
      "op": "DUP2"
    },
    "5853": {
      "op": "SWAP1"
    },
    "5854": {
      "op": "MSTORE"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5857": {
      "op": "DUP9"
    },
    "5858": {
      "op": "AND"
    },
    "5859": {
      "op": "SWAP3"
    },
    "5860": {
      "op": "DUP5"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "op": "SWAP3"
    },
    "5863": {
      "op": "SWAP1"
    },
    "5864": {
      "op": "SWAP3"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5868": {
      "op": "DUP4"
    },
    "5869": {
      "op": "ADD"
    },
    "5870": {
      "op": "DUP7"
    },
    "5871": {
      "op": "SWAP1"
    },
    "5872": {
      "op": "MSTORE"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5875": {
      "op": "DUP4"
    },
    "5876": {
      "op": "ADD"
    },
    "5877": {
      "op": "DUP6"
    },
    "5878": {
      "op": "SWAP1"
    },
    "5879": {
      "op": "MSTORE"
    },
    "5880": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5881": {
      "fn": "ERC20.permit",
      "offset": [
        4561,
        5058
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "fn": "ERC20.permit",
      "offset": [
        5073,
        5097
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5884": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5886": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5889": {
      "op": "ADD"
    },
    "5890": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5892": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5894": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5895": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5897": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5898": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "4"
    },
    "5899": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5900": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5901": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP5",
      "path": "4"
    },
    "5902": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SUB",
      "path": "4"
    },
    "5903": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5904": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP6",
      "path": "4"
    },
    "5905": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "GAS",
      "path": "4"
    },
    "5906": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "5907": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5908": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5909": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5910": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1723"
    },
    "5913": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5914": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5915": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5917": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5918": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "5919": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "5920": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5922": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5923": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5928": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5931": {
      "op": "NOT"
    },
    "5932": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "ADD",
      "path": "4"
    },
    "5933": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5934": {
      "fn": "ERC20.permit",
      "offset": [
        5100,
        5126
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "op": "POP"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "op": "SUB"
    },
    "5945": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 44
    },
    "5946": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "AND",
      "path": "4"
    },
    "5947": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5948": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5949": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5950": {
      "branch": 81,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5196
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5951": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1759"
    },
    "5954": {
      "branch": 81,
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5955": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "POP",
      "path": "4"
    },
    "5956": {
      "fn": "ERC20.permit",
      "offset": [
        5220,
        5225
      ],
      "op": "DUP9",
      "path": "4"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5963": {
      "op": "SHL"
    },
    "5964": {
      "op": "SUB"
    },
    "5965": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "4"
    },
    "5966": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5216
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5973": {
      "op": "SHL"
    },
    "5974": {
      "op": "SUB"
    },
    "5975": {
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "AND",
      "path": "4"
    },
    "5976": {
      "branch": 82,
      "fn": "ERC20.permit",
      "offset": [
        5200,
        5225
      ],
      "op": "EQ",
      "path": "4"
    },
    "5977": {
      "fn": "ERC20.permit",
      "offset": [
        5166,
        5225
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5978": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1796"
    },
    "5981": {
      "branch": 82,
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5982": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5984": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5993": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5996": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5998": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5999": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "ADD",
      "path": "4"
    },
    "6000": {
      "op": "MSTORE"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6005": {
      "op": "DUP3"
    },
    "6006": {
      "op": "ADD"
    },
    "6007": {
      "op": "MSTORE"
    },
    "6008": {
      "op": "PUSH14",
      "value": "0x24A72B20A624A22FA9A4A3A722A9"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6028": {
      "op": "DUP3"
    },
    "6029": {
      "op": "ADD"
    },
    "6030": {
      "op": "MSTORE"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6033": {
      "op": "ADD"
    },
    "6034": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBB2"
    },
    "6037": {
      "op": "JUMP"
    },
    "6038": {
      "fn": "ERC20.permit",
      "offset": [
        5141,
        5273
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "op": "SUB"
    },
    "6047": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 45
    },
    "6048": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6049": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "AND",
      "path": "4"
    },
    "6050": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6052": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6053": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6054": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6055": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6057": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6059": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6060": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6061": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6062": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6064": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6065": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6066": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5315
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6067": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP12",
      "path": "4"
    },
    "6068": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "4"
    },
    "6069": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "AND",
      "path": "4"
    },
    "6070": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6071": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP6",
      "path": "4"
    },
    "6072": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6073": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6074": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6075": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6076": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6077": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6078": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6079": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6080": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "DUP11",
      "path": "4"
    },
    "6081": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6082": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5332
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "6083": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 46
    },
    "6084": {
      "op": "DUP10"
    },
    "6085": {
      "op": "DUP2"
    },
    "6086": {
      "op": "MSTORE"
    },
    "6087": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6088": {
      "fn": "ERC20.permit",
      "offset": [
        5288,
        5324
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6089": {
      "op": "POP"
    },
    "6090": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6091": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP11",
      "path": "4"
    },
    "6092": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "AND",
      "path": "4"
    },
    "6093": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6094": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6127": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6131": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6132": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6133": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6134": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SUB",
      "path": "4"
    },
    "6135": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6136": {
      "fn": "ERC20.permit",
      "offset": [
        5358,
        5389
      ],
      "op": "LOG3",
      "path": "4"
    },
    "6137": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6138": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6139": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6140": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6141": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6142": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6143": {
      "fn": "ERC20.permit",
      "offset": [
        4117,
        5396
      ],
      "op": "POP",
      "path": "4"
    },
    "6144": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        4117,
        5396
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6145": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6146": {
      "offset": [
        1944,
        1949
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "6148": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1944,
        1949
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6155": {
      "op": "SHL"
    },
    "6156": {
      "op": "SUB"
    },
    "6157": {
      "offset": [
        1944,
        1949
      ],
      "op": "AND",
      "path": "3"
    },
    "6158": {
      "offset": [
        1930,
        1940
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6159": {
      "offset": [
        1930,
        1949
      ],
      "op": "EQ",
      "path": "3"
    },
    "6160": {
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1818"
    },
    "6163": {
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6164": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1922,
        1950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6166": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1922,
        1950
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6167": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1922,
        1950
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6168": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        1922,
        1950
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6169": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3795
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x9"
    },
    "6171": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6172": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6179": {
      "op": "SHL"
    },
    "6180": {
      "op": "SUB"
    },
    "6181": {
      "op": "NOT"
    },
    "6182": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "AND",
      "path": "3"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6189": {
      "op": "SHL"
    },
    "6190": {
      "op": "SUB"
    },
    "6191": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6192": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "AND",
      "path": "3"
    },
    "6193": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6194": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6195": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "OR",
      "path": "3"
    },
    "6196": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6197": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6198": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3790,
        3807
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6199": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0x40"
    },
    "6201": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6202": {
      "op": "SWAP1"
    },
    "6203": {
      "op": "DUP2"
    },
    "6204": {
      "op": "MSTORE"
    },
    "6205": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x39E7D4B9BA48F55A740A5192809DBC498FA12724C030B37DAB126A3F6774C0F3"
    },
    "6238": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6241": {
      "op": "ADD"
    },
    "6242": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6244": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6245": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6246": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6247": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "SUB",
      "path": "3"
    },
    "6248": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6249": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3857,
        3879
      ],
      "op": "LOG1",
      "path": "3"
    },
    "6250": {
      "fn": "BuidlCollective.updateAdmin",
      "offset": [
        3721,
        3886
      ],
      "op": "POP",
      "path": "3"
    },
    "6251": {
      "fn": "BuidlCollective.updateAdmin",
      "jump": "o",
      "offset": [
        3721,
        3886
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6252": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7282,
        8182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6253": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7394,
        7407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6255": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7410,
        7438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1877"
    },
    "6258": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7433,
        7437
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6259": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7410,
        7432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C5D"
    },
    "6262": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7410,
        7438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6263": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7410,
        7438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6264": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7394,
        7438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6265": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7394,
        7438
      ],
      "op": "POP",
      "path": "3"
    },
    "6266": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7472
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6268": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7475,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "6270": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6271": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6272": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6273": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6275": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MUL",
      "path": "3"
    },
    "6276": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6278": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6279": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6281": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6282": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6283": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6284": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6285": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6287": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6288": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6289": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6290": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6291": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6292": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6293": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6294": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6295": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6297": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6298": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6299": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6300": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6301": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6302": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6303": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D1"
    },
    "6306": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6307": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6309": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MUL",
      "path": "3"
    },
    "6310": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6311": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6312": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6313": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6314": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6316": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6317": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6319": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6321": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6322": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6323": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6324": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6325": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6332": {
      "op": "SHL"
    },
    "6333": {
      "op": "SUB"
    },
    "6334": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "AND",
      "path": "3"
    },
    "6335": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6336": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6337": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6339": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6340": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6341": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6342": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6343": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6345": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "ADD",
      "path": "3"
    },
    "6346": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6347": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6348": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "GT",
      "path": "3"
    },
    "6349": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B3"
    },
    "6352": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6353": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6354": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6355": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6356": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6357": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6358": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6359": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6360": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7448,
        7481
      ],
      "op": "POP",
      "path": "3"
    },
    "6361": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7491,
        7515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6363": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7532,
        7539
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6364": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7532,
        7546
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6365": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6374": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6375": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "GT",
      "path": "3"
    },
    "6376": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6377": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18F4"
    },
    "6380": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6381": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18F4"
    },
    "6384": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE5"
    },
    "6387": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7518,
        7547
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6388": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6389": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6391": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6392": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6393": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6394": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6395": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6396": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6397": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6399": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "MUL",
      "path": "3"
    },
    "6400": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6402": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ADD",
      "path": "3"
    },
    "6403": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6404": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ADD",
      "path": "3"
    },
    "6405": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6407": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6408": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6409": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6410": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x191D"
    },
    "6413": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6414": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6415": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6417": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ADD",
      "path": "3"
    },
    "6418": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6420": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6421": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "MUL",
      "path": "3"
    },
    "6422": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6423": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "6424": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6425": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "6426": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "ADD",
      "path": "3"
    },
    "6427": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6428": {
      "op": "POP"
    },
    "6429": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7518,
        7547
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6430": {
      "op": "POP"
    },
    "6431": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7491,
        7547
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6432": {
      "op": "POP"
    },
    "6433": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7561,
        7570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6434": {
      "branch": 74,
      "fn": "BuidlCollective._claim",
      "offset": [
        7561,
        7570
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6435": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7557,
        8176
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ABF"
    },
    "6438": {
      "branch": 74,
      "fn": "BuidlCollective._claim",
      "offset": [
        7557,
        8176
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6439": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7622,
        7630
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 49,
      "value": "0xE"
    },
    "6441": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7622,
        7630
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6448": {
      "op": "SHL"
    },
    "6449": {
      "op": "SUB"
    },
    "6450": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6451": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "AND",
      "path": "3"
    },
    "6452": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6454": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6455": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6456": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6457": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6459": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6461": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6462": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6464": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6465": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7600
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6466": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6468": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7619
      ],
      "op": "ADD",
      "path": "3"
    },
    "6469": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7586,
        7630
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6470": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7692,
        7711
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 50,
      "value": "0x194D"
    },
    "6473": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7692,
        7709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB9"
    },
    "6476": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7692,
        7711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6477": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7692,
        7711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6484": {
      "op": "SHL"
    },
    "6485": {
      "op": "SUB"
    },
    "6486": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6487": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "AND",
      "path": "3"
    },
    "6488": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6490": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6491": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6492": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6493": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "6495": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6497": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6498": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6500": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6501": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6502": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6504": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6505": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7689
      ],
      "op": "ADD",
      "path": "3"
    },
    "6506": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6507": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6508": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6509": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7711
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6510": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7761,
        7776
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 51
    },
    "6511": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7725,
        7758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6513": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7725,
        7758
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6514": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7725,
        7758
      ],
      "op": "ADD",
      "path": "3"
    },
    "6515": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7725,
        7776
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6516": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 52
    },
    "6517": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6518": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7823,
        7828
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6519": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7823,
        7828
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6520": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6521": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7644,
        7658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6522": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1984"
    },
    "6525": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6526": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7823,
        7828
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6527": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7823,
        7828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6528": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "6531": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7790,
        7828
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6532": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6533": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6534": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6535": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7790,
        7828
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6536": {
      "op": "POP"
    },
    "6537": {
      "op": "POP"
    },
    "6538": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7862,
        7873
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 53,
      "value": "0xA"
    },
    "6540": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7862,
        7873
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6541": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7842,
        7874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19A1"
    },
    "6544": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7842,
        7874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6545": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7848,
        7852
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6546": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7848,
        7852
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6547": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7854,
        7873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x199C"
    },
    "6550": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7854,
        7873
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6551": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7854,
        7859
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6552": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7854,
        7873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "6555": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7854,
        7873
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6556": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7854,
        7873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6557": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7842,
        7847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D7D"
    },
    "6560": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7842,
        7874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6561": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7842,
        7874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6562": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7893,
        7902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6564": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6565": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7912,
        7919
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6566": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7912,
        7926
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6567": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7908,
        7909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6568": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7908,
        7926
      ],
      "op": "LT",
      "path": "3"
    },
    "6569": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6570": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A80"
    },
    "6573": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6574": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7951,
        7965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6576": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7968,
        7997
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B9"
    },
    "6579": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7988,
        7993
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6580": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7995,
        7996
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6581": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7968,
        7987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DDF"
    },
    "6584": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7968,
        7997
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6585": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7968,
        7997
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6586": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7951,
        7997
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6587": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7951,
        7997
      ],
      "op": "POP",
      "path": "3"
    },
    "6588": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8028,
        8034
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 54
    },
    "6589": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8022
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6590": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8023,
        8024
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6591": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6592": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6593": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6594": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "LT",
      "path": "3"
    },
    "6595": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19CE"
    },
    "6598": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6599": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19CE"
    },
    "6602": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "6605": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8015,
        8025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6606": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6607": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6609": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "MUL",
      "path": "3"
    },
    "6610": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6612": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "ADD",
      "path": "3"
    },
    "6613": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8025
      ],
      "op": "ADD",
      "path": "3"
    },
    "6614": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8034
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6615": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8034
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6616": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8034
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6617": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8034
      ],
      "op": "POP",
      "path": "3"
    },
    "6618": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8015,
        8034
      ],
      "op": "POP",
      "path": "3"
    },
    "6619": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8066
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 55
    },
    "6620": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8067,
        8068
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6621": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6622": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6623": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6624": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "LT",
      "path": "3"
    },
    "6625": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19EC"
    },
    "6628": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6629": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19EC"
    },
    "6632": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "6635": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8059,
        8069
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6636": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6637": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6639": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6640": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6641": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "MUL",
      "path": "3"
    },
    "6642": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6643": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6644": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6645": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "ADD",
      "path": "3"
    },
    "6646": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "ADD",
      "path": "3"
    },
    "6647": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8059,
        8069
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6648": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6650": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6651": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6658": {
      "op": "SHL"
    },
    "6659": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6660": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "op": "SUB"
    },
    "6669": {
      "op": "DUP9"
    },
    "6670": {
      "op": "DUP2"
    },
    "6671": {
      "op": "AND"
    },
    "6672": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6674": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6675": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ADD",
      "path": "3"
    },
    "6676": {
      "op": "MSTORE"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6679": {
      "op": "DUP3"
    },
    "6680": {
      "op": "ADD"
    },
    "6681": {
      "op": "DUP5"
    },
    "6682": {
      "op": "SWAP1"
    },
    "6683": {
      "op": "MSTORE"
    },
    "6684": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6685": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6686": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "AND",
      "path": "3"
    },
    "6687": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6688": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "6693": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8079
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6699": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6701": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6702": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6703": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6704": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "SUB",
      "path": "3"
    },
    "6705": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6706": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6708": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6709": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "GAS",
      "path": "3"
    },
    "6710": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "CALL",
      "path": "3"
    },
    "6711": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6712": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6713": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6714": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A47"
    },
    "6717": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6718": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6719": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6721": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6722": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6723": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6724": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6726": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6727": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6728": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6729": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6730": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6731": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6732": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6734": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6735": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6736": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6738": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "NOT",
      "path": "3"
    },
    "6739": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6741": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6742": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ADD",
      "path": "3"
    },
    "6743": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "AND",
      "path": "3"
    },
    "6744": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6745": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ADD",
      "path": "3"
    },
    "6746": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6747": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6749": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6750": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6751": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6752": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "ADD",
      "path": "3"
    },
    "6753": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6754": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A6B"
    },
    "6757": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6758": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6759": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2543"
    },
    "6762": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8052,
        8093
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6763": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6764": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8052,
        8093
      ],
      "op": "POP",
      "path": "3"
    },
    "6765": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7933,
        8108
      ],
      "op": "POP",
      "path": "3"
    },
    "6766": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 56
    },
    "6767": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6768": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A78"
    },
    "6771": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6772": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x239A"
    },
    "6775": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        7928,
        7931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6776": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6777": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6778": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "POP",
      "path": "3"
    },
    "6779": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7928,
        7931
      ],
      "op": "POP",
      "path": "3"
    },
    "6780": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19A4"
    },
    "6783": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6784": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6785": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7888,
        8108
      ],
      "op": "POP",
      "path": "3"
    },
    "6786": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 57,
      "value": "0x39799AE7423F24077D39DA7D23F675B0A56D381A884D5714932B9DC762BDB52"
    },
    "6819": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8135,
        8139
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6820": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8141,
        8146
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6821": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8148,
        8155
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6822": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8157,
        8164
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6823": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6825": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6826": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB6"
    },
    "6829": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6830": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6831": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6832": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6833": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6834": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A6"
    },
    "6837": {
      "fn": "BuidlCollective._claim",
      "jump": "i",
      "offset": [
        8126,
        8165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6838": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6839": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6841": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6842": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6843": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6844": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SUB",
      "path": "3"
    },
    "6845": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6846": {
      "fn": "BuidlCollective._claim",
      "offset": [
        8126,
        8165
      ],
      "op": "LOG1",
      "path": "3"
    },
    "6847": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7557,
        8176
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6848": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7321,
        8182
      ],
      "op": "POP",
      "path": "3"
    },
    "6849": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7321,
        8182
      ],
      "op": "POP",
      "path": "3"
    },
    "6850": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7321,
        8182
      ],
      "op": "POP",
      "path": "3"
    },
    "6851": {
      "fn": "BuidlCollective._claim",
      "offset": [
        7282,
        8182
      ],
      "op": "POP",
      "path": "3"
    },
    "6852": {
      "fn": "BuidlCollective._claim",
      "jump": "o",
      "offset": [
        7282,
        8182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6853": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6854": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5694,
        5701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6856": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5791,
        5932
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 58,
      "value": "0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
    },
    "6889": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5970,
        5974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6891": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6893": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6894": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AF7"
    },
    "6897": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6898": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6899": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25DF"
    },
    "6902": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "i",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6903": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6904": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6906": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6907": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6908": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6909": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6910": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6911": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "SUB",
      "path": "4"
    },
    "6912": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6913": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5954,
        5976
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6914": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6916": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6917": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "ADD",
      "path": "4"
    },
    "6918": {
      "op": "SWAP4"
    },
    "6919": {
      "op": "SWAP1"
    },
    "6920": {
      "op": "SWAP4"
    },
    "6921": {
      "op": "MSTORE"
    },
    "6922": {
      "op": "DUP2"
    },
    "6923": {
      "op": "ADD"
    },
    "6924": {
      "op": "SWAP2"
    },
    "6925": {
      "op": "SWAP1"
    },
    "6926": {
      "op": "SWAP2"
    },
    "6927": {
      "op": "MSTORE"
    },
    "6928": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5998,
        6012
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6963": {
      "op": "DUP3"
    },
    "6964": {
      "op": "ADD"
    },
    "6965": {
      "op": "MSTORE"
    },
    "6966": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6034,
        6047
      ],
      "op": "CHAINID",
      "path": "4"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6969": {
      "op": "DUP3"
    },
    "6970": {
      "op": "ADD"
    },
    "6971": {
      "op": "MSTORE"
    },
    "6972": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        6077,
        6081
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6975": {
      "op": "DUP3"
    },
    "6976": {
      "op": "ADD"
    },
    "6977": {
      "op": "MSTORE"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6980": {
      "op": "ADD"
    },
    "6981": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6983": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6984": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6986": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6987": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6988": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "4"
    },
    "6989": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SUB",
      "path": "4"
    },
    "6990": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6991": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6992": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6993": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6995": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5759,
        6100
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6996": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6997": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6998": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6999": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7001": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "ADD",
      "path": "4"
    },
    "7002": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5732,
        6114
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7003": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7004": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5713,
        6114
      ],
      "op": "POP",
      "path": "4"
    },
    "7005": {
      "fn": "ERC20.computeDomainSeparator",
      "offset": [
        5629,
        6121
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7006": {
      "fn": "ERC20.computeDomainSeparator",
      "jump": "o",
      "offset": [
        5629,
        6121
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7007": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7008": {
      "fn": "ERC20._mint",
      "offset": [
        6400,
        6406
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 59
    },
    "7009": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7011": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7013": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7014": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7015": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7016": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B71"
    },
    "7019": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7020": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7021": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x252B"
    },
    "7024": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7025": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7026": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7027": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7028": {
      "fn": "ERC20._mint",
      "offset": [
        6385,
        6406
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7029": {
      "op": "POP"
    },
    "7030": {
      "op": "POP"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7037": {
      "op": "SHL"
    },
    "7038": {
      "op": "SUB"
    },
    "7039": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 60
    },
    "7040": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "AND",
      "path": "4"
    },
    "7041": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7043": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7044": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7045": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7046": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "7048": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7050": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7051": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7052": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7053": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7055": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7056": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7057": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6565
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7058": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7059": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7060": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "DUP7",
      "path": "4"
    },
    "7061": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "ADD",
      "path": "4"
    },
    "7062": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7063": {
      "fn": "ERC20._mint",
      "offset": [
        6552,
        6575
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7064": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "4",
      "statement": 61
    },
    "7065": {
      "op": "DUP5"
    },
    "7066": {
      "op": "DUP2"
    },
    "7067": {
      "op": "MSTORE"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7070": {
      "op": "DUP1"
    },
    "7071": {
      "op": "MLOAD"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7074": {
      "op": "PUSH2",
      "value": "0x27CF"
    },
    "7077": {
      "op": "DUP4"
    },
    "7078": {
      "op": "CODECOPY"
    },
    "7079": {
      "op": "DUP2"
    },
    "7080": {
      "op": "MLOAD"
    },
    "7081": {
      "op": "SWAP2"
    },
    "7082": {
      "op": "MSTORE"
    },
    "7083": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7086": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7088": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7089": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7090": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7091": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SUB",
      "path": "4"
    },
    "7092": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7093": {
      "fn": "ERC20._mint",
      "offset": [
        6601,
        6633
      ],
      "op": "LOG3",
      "path": "4"
    },
    "7094": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "4"
    },
    "7095": {
      "fn": "ERC20._mint",
      "offset": [
        6315,
        6640
      ],
      "op": "POP",
      "path": "4"
    },
    "7096": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        6315,
        6640
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7097": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9802,
        10260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7098": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7100": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7101": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9853,
        9860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7103": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9853,
        9860
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7108": {
      "op": "SHL"
    },
    "7109": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7110": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "DIV",
      "path": "3"
    },
    "7111": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7116": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "AND",
      "path": "3"
    },
    "7117": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9891,
        9921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7118": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9931,
        9959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD9"
    },
    "7121": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9931,
        9959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7122": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9958,
        9959
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 62,
      "value": "0x0"
    },
    "7124": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9951,
        9959
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7125": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9951,
        9959
      ],
      "op": "POP",
      "path": "3"
    },
    "7126": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9951,
        9959
      ],
      "op": "POP",
      "path": "3"
    },
    "7127": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9802,
        10260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7128": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        9802,
        10260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7129": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9931,
        9959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7130": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9990,
        10004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7132": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9990,
        10016
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7133": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9990,
        10016
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7138": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9990,
        10016
      ],
      "op": "AND",
      "path": "3"
    },
    "7139": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9969,
        9987
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7141": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10046,
        10081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BEE"
    },
    "7144": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10072,
        10081
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7145": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10053,
        10068
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7146": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10046,
        10081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267B"
    },
    "7149": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        10046,
        10081
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7150": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10046,
        10081
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7151": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10026,
        10081
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7152": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10026,
        10081
      ],
      "op": "POP",
      "path": "3"
    },
    "7153": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10110,
        10120
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7154": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10120
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7159": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10120
      ],
      "op": "AND",
      "path": "3"
    },
    "7160": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10106
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7161": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10120
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7166": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10120
      ],
      "op": "AND",
      "path": "3"
    },
    "7167": {
      "branch": 75,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10095,
        10120
      ],
      "op": "GT",
      "path": "3"
    },
    "7168": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10091,
        10131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C0E"
    },
    "7171": {
      "branch": 75,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10091,
        10131
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7172": {
      "op": "POP"
    },
    "7173": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7176": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7177": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9802,
        10260
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7178": {
      "op": "POP"
    },
    "7179": {
      "op": "POP"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        9802,
        10260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7182": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10091,
        10131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7183": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10173
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xB"
    },
    "7185": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7186": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7191": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0x100000000"
    },
    "7197": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7198": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7199": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "DIV",
      "path": "3"
    },
    "7200": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7201": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10159,
        10179
      ],
      "op": "AND",
      "path": "3"
    },
    "7202": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10145,
        10179
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7203": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10145,
        10179
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7204": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10145,
        10179
      ],
      "op": "AND",
      "path": "3"
    },
    "7205": {
      "branch": 76,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10145,
        10179
      ],
      "op": "GT",
      "path": "3"
    },
    "7206": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10141,
        10189
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C33"
    },
    "7209": {
      "branch": 76,
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10141,
        10189
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7210": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10188,
        10189
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x0"
    },
    "7212": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10181,
        10189
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7213": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10181,
        10189
      ],
      "op": "POP",
      "path": "3"
    },
    "7214": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10181,
        10189
      ],
      "op": "POP",
      "path": "3"
    },
    "7215": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10181,
        10189
      ],
      "op": "POP",
      "path": "3"
    },
    "7216": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10181,
        10189
      ],
      "op": "POP",
      "path": "3"
    },
    "7217": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9802,
        10260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7218": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        9802,
        10260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7219": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10141,
        10189
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7220": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10233,
        10253
      ],
      "op": "PUSH4",
      "path": "3",
      "statement": 64,
      "value": "0xFFFFFFFF"
    },
    "7225": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10233,
        10253
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7226": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10233,
        10253
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7227": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10233,
        10253
      ],
      "op": "AND",
      "path": "3"
    },
    "7228": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10233,
        10253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7229": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C4B"
    },
    "7232": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7233": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7236": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7237": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10225
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7238": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10225
      ],
      "op": "AND",
      "path": "3"
    },
    "7239": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "7242": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        10206,
        10230
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7243": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10230
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7244": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C55"
    },
    "7247": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10253
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7248": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7249": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7252": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "i",
      "offset": [
        10206,
        10253
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7253": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10206,
        10253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7254": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10199,
        10253
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7255": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10199,
        10253
      ],
      "op": "POP",
      "path": "3"
    },
    "7256": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10199,
        10253
      ],
      "op": "POP",
      "path": "3"
    },
    "7257": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10199,
        10253
      ],
      "op": "POP",
      "path": "3"
    },
    "7258": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        10199,
        10253
      ],
      "op": "POP",
      "path": "3"
    },
    "7259": {
      "fn": "BuidlCollective.getVestingPercent",
      "offset": [
        9802,
        10260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7260": {
      "fn": "BuidlCollective.getVestingPercent",
      "jump": "o",
      "offset": [
        9802,
        10260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7261": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8830,
        9744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7268": {
      "op": "SHL"
    },
    "7269": {
      "op": "SUB"
    },
    "7270": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7271": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "AND",
      "path": "3"
    },
    "7272": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8898,
        8905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7274": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7275": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7276": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7277": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "7279": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7281": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7282": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7284": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7285": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8971
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7286": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7288": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8990
      ],
      "op": "ADD",
      "path": "3"
    },
    "7289": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8957,
        8990
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7290": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8898,
        8905
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7291": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8898,
        8905
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7292": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8939,
        8990
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C85"
    },
    "7295": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8939,
        8990
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7296": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8939,
        8954
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "7297": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8939,
        8990
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "7300": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        8939,
        8990
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7301": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8939,
        8990
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7308": {
      "op": "SHL"
    },
    "7309": {
      "op": "SUB"
    },
    "7310": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7311": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "AND",
      "path": "3"
    },
    "7312": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9000,
        9032
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7314": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7315": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7316": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7317": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "7319": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7321": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7322": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7324": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7325": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9071
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7326": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7328": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9102
      ],
      "op": "ADD",
      "path": "3"
    },
    "7329": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9057,
        9102
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7330": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8917,
        8990
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7331": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8917,
        8990
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7332": {
      "op": "POP"
    },
    "7333": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9000,
        9032
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7334": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CAD"
    },
    "7337": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB9"
    },
    "7340": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9035,
        9054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7341": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7342": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB7"
    },
    "7345": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9102
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7346": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9102
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7347": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "7350": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9035,
        9102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7351": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9035,
        9102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7358": {
      "op": "SHL"
    },
    "7359": {
      "op": "SUB"
    },
    "7360": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7361": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "AND",
      "path": "3"
    },
    "7362": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9133,
        9152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7364": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7365": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7366": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7367": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "7369": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7371": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7372": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7374": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7375": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9180
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7376": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7378": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9199
      ],
      "op": "ADD",
      "path": "3"
    },
    "7379": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9199
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7380": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9163
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "7382": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9163
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7383": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9000,
        9102
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7384": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9000,
        9102
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7385": {
      "op": "POP"
    },
    "7386": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9133,
        9152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7387": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9133,
        9152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7388": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CE5"
    },
    "7391": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9199
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7392": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9166,
        9199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7393": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9199
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D3"
    },
    "7396": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9155,
        9199
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7397": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9155,
        9199
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7398": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9133,
        9199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9209,
        9236
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7402": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9239,
        9264
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF3"
    },
    "7405": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9253,
        9264
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7406": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9133,
        9199
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7407": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9239,
        9264
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7410": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9239,
        9264
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7411": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9239,
        9264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7418": {
      "op": "SHL"
    },
    "7419": {
      "op": "SUB"
    },
    "7420": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7421": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "AND",
      "path": "3"
    },
    "7422": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9338,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7424": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7425": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7426": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7427": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "7429": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7431": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7432": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7434": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7435": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9380
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7436": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9395
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7437": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9209,
        9264
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7438": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9209,
        9264
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7439": {
      "op": "POP"
    },
    "7440": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9338,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7441": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9209,
        9264
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7442": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9209,
        9264
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7443": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D1F"
    },
    "7446": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9400
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7447": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7450": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        1108,
        1113
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7451": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "7454": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9366,
        9400
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7455": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7456": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D29"
    },
    "7459": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9422
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7460": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7461": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9422
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7464": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9366,
        9422
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7465": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9366,
        9422
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7466": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9338,
        9422
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9471,
        9494
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7470": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7473": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3A"
    },
    "7476": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9338,
        9422
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7477": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9521
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7478": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "7481": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9497,
        9541
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7482": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9541
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7483": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D44"
    },
    "7486": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9546
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7487": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9546
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7488": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9546
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7491": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9497,
        9546
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7492": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9497,
        9546
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7493": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9471,
        9546
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7494": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9471,
        9546
      ],
      "op": "POP",
      "path": "3"
    },
    "7495": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9576,
        9589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "7497": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9576,
        9589
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7498": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9561,
        9572
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7499": {
      "branch": 77,
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9561,
        9589
      ],
      "op": "LT",
      "path": "3"
    },
    "7500": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9557,
        9721
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5A"
    },
    "7503": {
      "branch": 77,
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9557,
        9721
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7504": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9612,
        9627
      ],
      "op": "SWAP8",
      "path": "3",
      "statement": 65
    },
    "7505": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8830,
        9744
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "op": "POP"
    },
    "7508": {
      "op": "POP"
    },
    "7509": {
      "op": "POP"
    },
    "7510": {
      "op": "POP"
    },
    "7511": {
      "op": "POP"
    },
    "7512": {
      "op": "POP"
    },
    "7513": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "o",
      "offset": [
        8830,
        9744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7514": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9557,
        9721
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7515": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9697,
        9710
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 66,
      "value": "0x10"
    },
    "7517": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9697,
        9710
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7518": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D67"
    },
    "7521": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9683,
        9694
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7522": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9680
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7523": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "7526": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9665,
        9694
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7527": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7528": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D71"
    },
    "7531": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9710
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7532": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7533": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7536": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "i",
      "offset": [
        9665,
        9710
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7537": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9665,
        9710
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7538": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        9658,
        9710
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "7539": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "offset": [
        8830,
        9744
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "7540": {
      "op": "POP"
    },
    "7541": {
      "op": "POP"
    },
    "7542": {
      "op": "POP"
    },
    "7543": {
      "op": "POP"
    },
    "7544": {
      "op": "POP"
    },
    "7545": {
      "op": "POP"
    },
    "7546": {
      "op": "POP"
    },
    "7547": {
      "op": "POP"
    },
    "7548": {
      "fn": "BuidlCollective._calculateShareToClaim",
      "jump": "o",
      "offset": [
        8830,
        9744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7549": {
      "fn": "ERC20._burn",
      "offset": [
        6646,
        6974
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7556": {
      "op": "SHL"
    },
    "7557": {
      "op": "SUB"
    },
    "7558": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 67
    },
    "7559": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "AND",
      "path": "4"
    },
    "7560": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7562": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7563": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7564": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7565": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6727
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "7567": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7569": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7570": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7572": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7573": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7574": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7575": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7576": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7577": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7578": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6733
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7579": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DA5"
    },
    "7582": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7583": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7584": {
      "fn": "ERC20._burn",
      "offset": [
        6737,
        6743
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7585": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D3"
    },
    "7588": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7589": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7590": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7591": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7592": {
      "fn": "ERC20._burn",
      "offset": [
        6718,
        6743
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7593": {
      "op": "POP"
    },
    "7594": {
      "op": "POP"
    },
    "7595": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6897
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 68,
      "value": "0x2"
    },
    "7597": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7598": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7599": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7600": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7601": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SUB",
      "path": "4"
    },
    "7602": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7603": {
      "fn": "ERC20._burn",
      "offset": [
        6886,
        6907
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7604": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 69,
      "value": "0x40"
    },
    "7606": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7607": {
      "op": "DUP2"
    },
    "7608": {
      "op": "DUP2"
    },
    "7609": {
      "op": "MSTORE"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7612": {
      "op": "SWAP1"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7619": {
      "op": "SHL"
    },
    "7620": {
      "op": "SUB"
    },
    "7621": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7622": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "AND",
      "path": "4"
    },
    "7623": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7626": {
      "op": "DUP1"
    },
    "7627": {
      "op": "MLOAD"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7630": {
      "op": "PUSH2",
      "value": "0x27CF"
    },
    "7633": {
      "op": "DUP4"
    },
    "7634": {
      "op": "CODECOPY"
    },
    "7635": {
      "op": "DUP2"
    },
    "7636": {
      "op": "MLOAD"
    },
    "7637": {
      "op": "SWAP2"
    },
    "7638": {
      "op": "MSTORE"
    },
    "7639": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "fn": "ERC20._burn",
      "offset": [
        6933,
        6967
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BAD"
    },
    "7646": {
      "op": "JUMP"
    },
    "7647": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8188,
        8370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7648": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8271,
        8278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7650": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8341,
        8362
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 70,
      "value": "0x1DF1"
    },
    "7653": {
      "offset": [
        1160,
        1167
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5F5E100"
    },
    "7658": {
      "offset": [
        1108,
        1113
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "7661": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8341,
        8362
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27B1"
    },
    "7664": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        8341,
        8362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7665": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8341,
        8362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7666": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7671": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "AND",
      "path": "3"
    },
    "7672": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8332,
        8337
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7673": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "7675": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7677": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "7679": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8313,
        8320
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7680": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7681": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7682": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7683": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "LT",
      "path": "3"
    },
    "7684": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E0F"
    },
    "7687": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7688": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E0F"
    },
    "7691": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236E"
    },
    "7694": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        8306,
        8321
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7695": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7696": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7698": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7699": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7700": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7701": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7703": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7704": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7705": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7706": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7707": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7708": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "ADD",
      "path": "3"
    },
    "7709": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "op": "SUB"
    },
    "7718": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8306,
        8321
      ],
      "op": "AND",
      "path": "3"
    },
    "7719": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7720": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7721": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7722": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "ADD",
      "path": "3"
    },
    "7723": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7724": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7725": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7726": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7727": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7729": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "ADD",
      "path": "3"
    },
    "7730": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7731": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8322
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7732": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8329
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7733": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E3E"
    },
    "7736": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7737": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7738": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24EA"
    },
    "7741": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        8296,
        8337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7742": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7743": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E48"
    },
    "7746": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7747": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7748": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2509"
    },
    "7751": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "i",
      "offset": [
        8296,
        8363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7752": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8296,
        8363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7753": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8289,
        8363
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7754": {
      "fn": "BuidlCollective.convertShareToToken",
      "offset": [
        8188,
        8370
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7755": {
      "op": "POP"
    },
    "7756": {
      "op": "POP"
    },
    "7757": {
      "op": "POP"
    },
    "7758": {
      "fn": "BuidlCollective.convertShareToToken",
      "jump": "o",
      "offset": [
        8188,
        8370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7759": {
      "op": "JUMPDEST"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7764": {
      "op": "DUP1"
    },
    "7765": {
      "op": "DUP4"
    },
    "7766": {
      "op": "MSTORE"
    },
    "7767": {
      "op": "DUP4"
    },
    "7768": {
      "op": "MLOAD"
    },
    "7769": {
      "op": "DUP1"
    },
    "7770": {
      "op": "DUP3"
    },
    "7771": {
      "op": "DUP6"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "MSTORE"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7776": {
      "op": "JUMPDEST"
    },
    "7777": {
      "op": "DUP2"
    },
    "7778": {
      "op": "DUP2"
    },
    "7779": {
      "op": "LT"
    },
    "7780": {
      "op": "ISZERO"
    },
    "7781": {
      "op": "PUSH2",
      "value": "0x1E7C"
    },
    "7784": {
      "op": "JUMPI"
    },
    "7785": {
      "op": "DUP6"
    },
    "7786": {
      "op": "DUP2"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "DUP4"
    },
    "7789": {
      "op": "ADD"
    },
    "7790": {
      "op": "MLOAD"
    },
    "7791": {
      "op": "DUP6"
    },
    "7792": {
      "op": "DUP3"
    },
    "7793": {
      "op": "ADD"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7796": {
      "op": "ADD"
    },
    "7797": {
      "op": "MSTORE"
    },
    "7798": {
      "op": "DUP3"
    },
    "7799": {
      "op": "ADD"
    },
    "7800": {
      "op": "PUSH2",
      "value": "0x1E60"
    },
    "7803": {
      "op": "JUMP"
    },
    "7804": {
      "op": "JUMPDEST"
    },
    "7805": {
      "op": "DUP2"
    },
    "7806": {
      "op": "DUP2"
    },
    "7807": {
      "op": "GT"
    },
    "7808": {
      "op": "ISZERO"
    },
    "7809": {
      "op": "PUSH2",
      "value": "0x1E8E"
    },
    "7812": {
      "op": "JUMPI"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7817": {
      "op": "DUP4"
    },
    "7818": {
      "op": "DUP8"
    },
    "7819": {
      "op": "ADD"
    },
    "7820": {
      "op": "ADD"
    },
    "7821": {
      "op": "MSTORE"
    },
    "7822": {
      "op": "JUMPDEST"
    },
    "7823": {
      "op": "POP"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7826": {
      "op": "ADD"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7829": {
      "op": "NOT"
    },
    "7830": {
      "op": "AND"
    },
    "7831": {
      "op": "SWAP3"
    },
    "7832": {
      "op": "SWAP1"
    },
    "7833": {
      "op": "SWAP3"
    },
    "7834": {
      "op": "ADD"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7837": {
      "op": "ADD"
    },
    "7838": {
      "op": "SWAP4"
    },
    "7839": {
      "op": "SWAP3"
    },
    "7840": {
      "op": "POP"
    },
    "7841": {
      "op": "POP"
    },
    "7842": {
      "op": "POP"
    },
    "7843": {
      "jump": "o",
      "op": "JUMP"
    },
    "7844": {
      "op": "JUMPDEST"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7851": {
      "op": "SHL"
    },
    "7852": {
      "op": "SUB"
    },
    "7853": {
      "op": "DUP2"
    },
    "7854": {
      "op": "AND"
    },
    "7855": {
      "op": "DUP2"
    },
    "7856": {
      "op": "EQ"
    },
    "7857": {
      "op": "PUSH2",
      "value": "0x9E4"
    },
    "7860": {
      "op": "JUMPI"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7863": {
      "op": "DUP1"
    },
    "7864": {
      "op": "REVERT"
    },
    "7865": {
      "op": "JUMPDEST"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7868": {
      "op": "DUP1"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7871": {
      "op": "DUP4"
    },
    "7872": {
      "op": "DUP6"
    },
    "7873": {
      "op": "SUB"
    },
    "7874": {
      "op": "SLT"
    },
    "7875": {
      "op": "ISZERO"
    },
    "7876": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "7879": {
      "op": "JUMPI"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7882": {
      "op": "DUP1"
    },
    "7883": {
      "op": "REVERT"
    },
    "7884": {
      "op": "JUMPDEST"
    },
    "7885": {
      "op": "DUP3"
    },
    "7886": {
      "op": "CALLDATALOAD"
    },
    "7887": {
      "op": "PUSH2",
      "value": "0x1ED7"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "7894": {
      "jump": "i",
      "op": "JUMP"
    },
    "7895": {
      "op": "JUMPDEST"
    },
    "7896": {
      "op": "SWAP5"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7899": {
      "op": "SWAP4"
    },
    "7900": {
      "op": "SWAP1"
    },
    "7901": {
      "op": "SWAP4"
    },
    "7902": {
      "op": "ADD"
    },
    "7903": {
      "op": "CALLDATALOAD"
    },
    "7904": {
      "op": "SWAP4"
    },
    "7905": {
      "op": "POP"
    },
    "7906": {
      "op": "POP"
    },
    "7907": {
      "op": "POP"
    },
    "7908": {
      "jump": "o",
      "op": "JUMP"
    },
    "7909": {
      "op": "JUMPDEST"
    },
    "7910": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7917": {
      "op": "SHL"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7920": {
      "op": "MSTORE"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7925": {
      "op": "MSTORE"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7930": {
      "op": "REVERT"
    },
    "7931": {
      "op": "JUMPDEST"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7934": {
      "op": "MLOAD"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7937": {
      "op": "DUP2"
    },
    "7938": {
      "op": "ADD"
    },
    "7939": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7948": {
      "op": "DUP2"
    },
    "7949": {
      "op": "GT"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "DUP3"
    },
    "7952": {
      "op": "LT"
    },
    "7953": {
      "op": "OR"
    },
    "7954": {
      "op": "ISZERO"
    },
    "7955": {
      "op": "PUSH2",
      "value": "0x1F1E"
    },
    "7958": {
      "op": "JUMPI"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x1F1E"
    },
    "7962": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "7965": {
      "jump": "i",
      "op": "JUMP"
    },
    "7966": {
      "op": "JUMPDEST"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7969": {
      "op": "MSTORE"
    },
    "7970": {
      "op": "SWAP1"
    },
    "7971": {
      "jump": "o",
      "op": "JUMP"
    },
    "7972": {
      "op": "JUMPDEST"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7975": {
      "op": "MLOAD"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7978": {
      "op": "DUP3"
    },
    "7979": {
      "op": "ADD"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7982": {
      "op": "NOT"
    },
    "7983": {
      "op": "AND"
    },
    "7984": {
      "op": "DUP2"
    },
    "7985": {
      "op": "ADD"
    },
    "7986": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7995": {
      "op": "DUP2"
    },
    "7996": {
      "op": "GT"
    },
    "7997": {
      "op": "DUP3"
    },
    "7998": {
      "op": "DUP3"
    },
    "7999": {
      "op": "LT"
    },
    "8000": {
      "op": "OR"
    },
    "8001": {
      "op": "ISZERO"
    },
    "8002": {
      "op": "PUSH2",
      "value": "0x1F4D"
    },
    "8005": {
      "op": "JUMPI"
    },
    "8006": {
      "op": "PUSH2",
      "value": "0x1F4D"
    },
    "8009": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "8012": {
      "jump": "i",
      "op": "JUMP"
    },
    "8013": {
      "op": "JUMPDEST"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8016": {
      "op": "MSTORE"
    },
    "8017": {
      "op": "SWAP2"
    },
    "8018": {
      "op": "SWAP1"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "jump": "o",
      "op": "JUMP"
    },
    "8021": {
      "op": "JUMPDEST"
    },
    "8022": {
      "op": "DUP1"
    },
    "8023": {
      "op": "CALLDATALOAD"
    },
    "8024": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8029": {
      "op": "DUP2"
    },
    "8030": {
      "op": "AND"
    },
    "8031": {
      "op": "DUP2"
    },
    "8032": {
      "op": "EQ"
    },
    "8033": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "8036": {
      "op": "JUMPI"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8039": {
      "op": "DUP1"
    },
    "8040": {
      "op": "REVERT"
    },
    "8041": {
      "op": "JUMPDEST"
    },
    "8042": {
      "op": "SWAP2"
    },
    "8043": {
      "op": "SWAP1"
    },
    "8044": {
      "op": "POP"
    },
    "8045": {
      "jump": "o",
      "op": "JUMP"
    },
    "8046": {
      "op": "JUMPDEST"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8049": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8058": {
      "op": "DUP3"
    },
    "8059": {
      "op": "GT"
    },
    "8060": {
      "op": "ISZERO"
    },
    "8061": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8064": {
      "op": "JUMPI"
    },
    "8065": {
      "op": "PUSH2",
      "value": "0x1F88"
    },
    "8068": {
      "op": "PUSH2",
      "value": "0x1EE5"
    },
    "8071": {
      "jump": "i",
      "op": "JUMP"
    },
    "8072": {
      "op": "JUMPDEST"
    },
    "8073": {
      "op": "POP"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8076": {
      "op": "SHL"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8079": {
      "op": "ADD"
    },
    "8080": {
      "op": "SWAP1"
    },
    "8081": {
      "jump": "o",
      "op": "JUMP"
    },
    "8082": {
      "op": "JUMPDEST"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8085": {
      "op": "DUP3"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8088": {
      "op": "DUP4"
    },
    "8089": {
      "op": "ADD"
    },
    "8090": {
      "op": "SLT"
    },
    "8091": {
      "op": "PUSH2",
      "value": "0x1FA3"
    },
    "8094": {
      "op": "JUMPI"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8097": {
      "op": "DUP1"
    },
    "8098": {
      "op": "REVERT"
    },
    "8099": {
      "op": "JUMPDEST"
    },
    "8100": {
      "op": "DUP2"
    },
    "8101": {
      "op": "CALLDATALOAD"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8104": {
      "op": "PUSH2",
      "value": "0x1FB8"
    },
    "8107": {
      "op": "PUSH2",
      "value": "0x1FB3"
    },
    "8110": {
      "op": "DUP4"
    },
    "8111": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8114": {
      "jump": "i",
      "op": "JUMP"
    },
    "8115": {
      "op": "JUMPDEST"
    },
    "8116": {
      "op": "PUSH2",
      "value": "0x1F24"
    },
    "8119": {
      "jump": "i",
      "op": "JUMP"
    },
    "8120": {
      "op": "JUMPDEST"
    },
    "8121": {
      "op": "DUP3"
    },
    "8122": {
      "op": "DUP2"
    },
    "8123": {
      "op": "MSTORE"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8126": {
      "op": "SWAP3"
    },
    "8127": {
      "op": "SWAP1"
    },
    "8128": {
      "op": "SWAP3"
    },
    "8129": {
      "op": "SHL"
    },
    "8130": {
      "op": "DUP5"
    },
    "8131": {
      "op": "ADD"
    },
    "8132": {
      "op": "DUP2"
    },
    "8133": {
      "op": "ADD"
    },
    "8134": {
      "op": "SWAP2"
    },
    "8135": {
      "op": "DUP2"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "ADD"
    },
    "8138": {
      "op": "SWAP1"
    },
    "8139": {
      "op": "DUP7"
    },
    "8140": {
      "op": "DUP5"
    },
    "8141": {
      "op": "GT"
    },
    "8142": {
      "op": "ISZERO"
    },
    "8143": {
      "op": "PUSH2",
      "value": "0x1FD7"
    },
    "8146": {
      "op": "JUMPI"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8149": {
      "op": "DUP1"
    },
    "8150": {
      "op": "REVERT"
    },
    "8151": {
      "op": "JUMPDEST"
    },
    "8152": {
      "op": "DUP3"
    },
    "8153": {
      "op": "DUP7"
    },
    "8154": {
      "op": "ADD"
    },
    "8155": {
      "op": "JUMPDEST"
    },
    "8156": {
      "op": "DUP5"
    },
    "8157": {
      "op": "DUP2"
    },
    "8158": {
      "op": "LT"
    },
    "8159": {
      "op": "ISZERO"
    },
    "8160": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8163": {
      "op": "JUMPI"
    },
    "8164": {
      "op": "DUP1"
    },
    "8165": {
      "op": "CALLDATALOAD"
    },
    "8166": {
      "op": "PUSH2",
      "value": "0x1FEE"
    },
    "8169": {
      "op": "DUP2"
    },
    "8170": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8173": {
      "jump": "i",
      "op": "JUMP"
    },
    "8174": {
      "op": "JUMPDEST"
    },
    "8175": {
      "op": "DUP4"
    },
    "8176": {
      "op": "MSTORE"
    },
    "8177": {
      "op": "SWAP2"
    },
    "8178": {
      "op": "DUP4"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "SWAP2"
    },
    "8181": {
      "op": "DUP4"
    },
    "8182": {
      "op": "ADD"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x1FDB"
    },
    "8186": {
      "op": "JUMP"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "op": "SWAP7"
    },
    "8190": {
      "op": "SWAP6"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "POP"
    },
    "8193": {
      "op": "POP"
    },
    "8194": {
      "op": "POP"
    },
    "8195": {
      "op": "POP"
    },
    "8196": {
      "op": "POP"
    },
    "8197": {
      "jump": "o",
      "op": "JUMP"
    },
    "8198": {
      "op": "JUMPDEST"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8201": {
      "op": "DUP3"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8204": {
      "op": "DUP4"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "op": "SLT"
    },
    "8207": {
      "op": "PUSH2",
      "value": "0x2017"
    },
    "8210": {
      "op": "JUMPI"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8213": {
      "op": "DUP1"
    },
    "8214": {
      "op": "REVERT"
    },
    "8215": {
      "op": "JUMPDEST"
    },
    "8216": {
      "op": "DUP2"
    },
    "8217": {
      "op": "CALLDATALOAD"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8220": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8223": {
      "op": "PUSH2",
      "value": "0x1FB3"
    },
    "8226": {
      "op": "DUP4"
    },
    "8227": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8230": {
      "jump": "i",
      "op": "JUMP"
    },
    "8231": {
      "op": "JUMPDEST"
    },
    "8232": {
      "op": "DUP3"
    },
    "8233": {
      "op": "DUP2"
    },
    "8234": {
      "op": "MSTORE"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8237": {
      "op": "SWAP3"
    },
    "8238": {
      "op": "SWAP1"
    },
    "8239": {
      "op": "SWAP3"
    },
    "8240": {
      "op": "SHL"
    },
    "8241": {
      "op": "DUP5"
    },
    "8242": {
      "op": "ADD"
    },
    "8243": {
      "op": "DUP2"
    },
    "8244": {
      "op": "ADD"
    },
    "8245": {
      "op": "SWAP2"
    },
    "8246": {
      "op": "DUP2"
    },
    "8247": {
      "op": "DUP2"
    },
    "8248": {
      "op": "ADD"
    },
    "8249": {
      "op": "SWAP1"
    },
    "8250": {
      "op": "DUP7"
    },
    "8251": {
      "op": "DUP5"
    },
    "8252": {
      "op": "GT"
    },
    "8253": {
      "op": "ISZERO"
    },
    "8254": {
      "op": "PUSH2",
      "value": "0x2046"
    },
    "8257": {
      "op": "JUMPI"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8260": {
      "op": "DUP1"
    },
    "8261": {
      "op": "REVERT"
    },
    "8262": {
      "op": "JUMPDEST"
    },
    "8263": {
      "op": "DUP3"
    },
    "8264": {
      "op": "DUP7"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "JUMPDEST"
    },
    "8267": {
      "op": "DUP5"
    },
    "8268": {
      "op": "DUP2"
    },
    "8269": {
      "op": "LT"
    },
    "8270": {
      "op": "ISZERO"
    },
    "8271": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8274": {
      "op": "JUMPI"
    },
    "8275": {
      "op": "DUP1"
    },
    "8276": {
      "op": "CALLDATALOAD"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8283": {
      "op": "SHL"
    },
    "8284": {
      "op": "SUB"
    },
    "8285": {
      "op": "DUP2"
    },
    "8286": {
      "op": "AND"
    },
    "8287": {
      "op": "DUP2"
    },
    "8288": {
      "op": "EQ"
    },
    "8289": {
      "op": "PUSH2",
      "value": "0x206A"
    },
    "8292": {
      "op": "JUMPI"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8295": {
      "op": "DUP1"
    },
    "8296": {
      "op": "DUP2"
    },
    "8297": {
      "op": "REVERT"
    },
    "8298": {
      "op": "JUMPDEST"
    },
    "8299": {
      "op": "DUP4"
    },
    "8300": {
      "op": "MSTORE"
    },
    "8301": {
      "op": "SWAP2"
    },
    "8302": {
      "op": "DUP4"
    },
    "8303": {
      "op": "ADD"
    },
    "8304": {
      "op": "SWAP2"
    },
    "8305": {
      "op": "DUP4"
    },
    "8306": {
      "op": "ADD"
    },
    "8307": {
      "op": "PUSH2",
      "value": "0x204A"
    },
    "8310": {
      "op": "JUMP"
    },
    "8311": {
      "op": "JUMPDEST"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8314": {
      "op": "DUP3"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8317": {
      "op": "DUP4"
    },
    "8318": {
      "op": "ADD"
    },
    "8319": {
      "op": "SLT"
    },
    "8320": {
      "op": "PUSH2",
      "value": "0x2088"
    },
    "8323": {
      "op": "JUMPI"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8326": {
      "op": "DUP1"
    },
    "8327": {
      "op": "REVERT"
    },
    "8328": {
      "op": "JUMPDEST"
    },
    "8329": {
      "op": "DUP2"
    },
    "8330": {
      "op": "CALLDATALOAD"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x2098"
    },
    "8336": {
      "op": "PUSH2",
      "value": "0x1FB3"
    },
    "8339": {
      "op": "DUP4"
    },
    "8340": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8343": {
      "jump": "i",
      "op": "JUMP"
    },
    "8344": {
      "op": "JUMPDEST"
    },
    "8345": {
      "op": "DUP3"
    },
    "8346": {
      "op": "DUP2"
    },
    "8347": {
      "op": "MSTORE"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8350": {
      "op": "SWAP3"
    },
    "8351": {
      "op": "SWAP1"
    },
    "8352": {
      "op": "SWAP3"
    },
    "8353": {
      "op": "SHL"
    },
    "8354": {
      "op": "DUP5"
    },
    "8355": {
      "op": "ADD"
    },
    "8356": {
      "op": "DUP2"
    },
    "8357": {
      "op": "ADD"
    },
    "8358": {
      "op": "SWAP2"
    },
    "8359": {
      "op": "DUP2"
    },
    "8360": {
      "op": "DUP2"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "SWAP1"
    },
    "8363": {
      "op": "DUP7"
    },
    "8364": {
      "op": "DUP5"
    },
    "8365": {
      "op": "GT"
    },
    "8366": {
      "op": "ISZERO"
    },
    "8367": {
      "op": "PUSH2",
      "value": "0x20B7"
    },
    "8370": {
      "op": "JUMPI"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8373": {
      "op": "DUP1"
    },
    "8374": {
      "op": "REVERT"
    },
    "8375": {
      "op": "JUMPDEST"
    },
    "8376": {
      "op": "DUP3"
    },
    "8377": {
      "op": "DUP7"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "JUMPDEST"
    },
    "8380": {
      "op": "DUP5"
    },
    "8381": {
      "op": "DUP2"
    },
    "8382": {
      "op": "LT"
    },
    "8383": {
      "op": "ISZERO"
    },
    "8384": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8387": {
      "op": "JUMPI"
    },
    "8388": {
      "op": "DUP1"
    },
    "8389": {
      "op": "CALLDATALOAD"
    },
    "8390": {
      "op": "DUP4"
    },
    "8391": {
      "op": "MSTORE"
    },
    "8392": {
      "op": "SWAP2"
    },
    "8393": {
      "op": "DUP4"
    },
    "8394": {
      "op": "ADD"
    },
    "8395": {
      "op": "SWAP2"
    },
    "8396": {
      "op": "DUP4"
    },
    "8397": {
      "op": "ADD"
    },
    "8398": {
      "op": "PUSH2",
      "value": "0x20BB"
    },
    "8401": {
      "op": "JUMP"
    },
    "8402": {
      "op": "JUMPDEST"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8405": {
      "op": "DUP1"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8408": {
      "op": "DUP1"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8411": {
      "op": "DUP6"
    },
    "8412": {
      "op": "DUP8"
    },
    "8413": {
      "op": "SUB"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8416": {
      "op": "DUP2"
    },
    "8417": {
      "op": "SLT"
    },
    "8418": {
      "op": "ISZERO"
    },
    "8419": {
      "op": "PUSH2",
      "value": "0x20EB"
    },
    "8422": {
      "op": "JUMPI"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8425": {
      "op": "DUP1"
    },
    "8426": {
      "op": "REVERT"
    },
    "8427": {
      "op": "JUMPDEST"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8430": {
      "op": "DUP2"
    },
    "8431": {
      "op": "SLT"
    },
    "8432": {
      "op": "ISZERO"
    },
    "8433": {
      "op": "PUSH2",
      "value": "0x20F9"
    },
    "8436": {
      "op": "JUMPI"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8439": {
      "op": "DUP1"
    },
    "8440": {
      "op": "REVERT"
    },
    "8441": {
      "op": "JUMPDEST"
    },
    "8442": {
      "op": "POP"
    },
    "8443": {
      "op": "PUSH2",
      "value": "0x2102"
    },
    "8446": {
      "op": "PUSH2",
      "value": "0x1EFB"
    },
    "8449": {
      "jump": "i",
      "op": "JUMP"
    },
    "8450": {
      "op": "JUMPDEST"
    },
    "8451": {
      "op": "PUSH2",
      "value": "0x210B"
    },
    "8454": {
      "op": "DUP8"
    },
    "8455": {
      "op": "PUSH2",
      "value": "0x1F55"
    },
    "8458": {
      "jump": "i",
      "op": "JUMP"
    },
    "8459": {
      "op": "JUMPDEST"
    },
    "8460": {
      "op": "DUP2"
    },
    "8461": {
      "op": "MSTORE"
    },
    "8462": {
      "op": "PUSH2",
      "value": "0x2119"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8467": {
      "op": "DUP9"
    },
    "8468": {
      "op": "ADD"
    },
    "8469": {
      "op": "PUSH2",
      "value": "0x1F55"
    },
    "8472": {
      "jump": "i",
      "op": "JUMP"
    },
    "8473": {
      "op": "JUMPDEST"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8476": {
      "op": "DUP3"
    },
    "8477": {
      "op": "ADD"
    },
    "8478": {
      "op": "MSTORE"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x212A"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8484": {
      "op": "DUP9"
    },
    "8485": {
      "op": "ADD"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x1F55"
    },
    "8489": {
      "jump": "i",
      "op": "JUMP"
    },
    "8490": {
      "op": "JUMPDEST"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8493": {
      "op": "DUP3"
    },
    "8494": {
      "op": "ADD"
    },
    "8495": {
      "op": "MSTORE"
    },
    "8496": {
      "op": "SWAP5"
    },
    "8497": {
      "op": "POP"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8500": {
      "op": "DUP7"
    },
    "8501": {
      "op": "ADD"
    },
    "8502": {
      "op": "CALLDATALOAD"
    },
    "8503": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8512": {
      "op": "DUP1"
    },
    "8513": {
      "op": "DUP3"
    },
    "8514": {
      "op": "GT"
    },
    "8515": {
      "op": "ISZERO"
    },
    "8516": {
      "op": "PUSH2",
      "value": "0x214C"
    },
    "8519": {
      "op": "JUMPI"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8522": {
      "op": "DUP1"
    },
    "8523": {
      "op": "REVERT"
    },
    "8524": {
      "op": "JUMPDEST"
    },
    "8525": {
      "op": "PUSH2",
      "value": "0x2158"
    },
    "8528": {
      "op": "DUP10"
    },
    "8529": {
      "op": "DUP4"
    },
    "8530": {
      "op": "DUP11"
    },
    "8531": {
      "op": "ADD"
    },
    "8532": {
      "op": "PUSH2",
      "value": "0x1F92"
    },
    "8535": {
      "jump": "i",
      "op": "JUMP"
    },
    "8536": {
      "op": "JUMPDEST"
    },
    "8537": {
      "op": "SWAP6"
    },
    "8538": {
      "op": "POP"
    },
    "8539": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8541": {
      "op": "DUP9"
    },
    "8542": {
      "op": "ADD"
    },
    "8543": {
      "op": "CALLDATALOAD"
    },
    "8544": {
      "op": "SWAP2"
    },
    "8545": {
      "op": "POP"
    },
    "8546": {
      "op": "DUP1"
    },
    "8547": {
      "op": "DUP3"
    },
    "8548": {
      "op": "GT"
    },
    "8549": {
      "op": "ISZERO"
    },
    "8550": {
      "op": "PUSH2",
      "value": "0x216E"
    },
    "8553": {
      "op": "JUMPI"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8556": {
      "op": "DUP1"
    },
    "8557": {
      "op": "REVERT"
    },
    "8558": {
      "op": "JUMPDEST"
    },
    "8559": {
      "op": "PUSH2",
      "value": "0x217A"
    },
    "8562": {
      "op": "DUP10"
    },
    "8563": {
      "op": "DUP4"
    },
    "8564": {
      "op": "DUP11"
    },
    "8565": {
      "op": "ADD"
    },
    "8566": {
      "op": "PUSH2",
      "value": "0x2006"
    },
    "8569": {
      "jump": "i",
      "op": "JUMP"
    },
    "8570": {
      "op": "JUMPDEST"
    },
    "8571": {
      "op": "SWAP5"
    },
    "8572": {
      "op": "POP"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8575": {
      "op": "DUP9"
    },
    "8576": {
      "op": "ADD"
    },
    "8577": {
      "op": "CALLDATALOAD"
    },
    "8578": {
      "op": "SWAP2"
    },
    "8579": {
      "op": "POP"
    },
    "8580": {
      "op": "DUP1"
    },
    "8581": {
      "op": "DUP3"
    },
    "8582": {
      "op": "GT"
    },
    "8583": {
      "op": "ISZERO"
    },
    "8584": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8587": {
      "op": "JUMPI"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8590": {
      "op": "DUP1"
    },
    "8591": {
      "op": "REVERT"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "PUSH2",
      "value": "0x219C"
    },
    "8596": {
      "op": "DUP10"
    },
    "8597": {
      "op": "DUP4"
    },
    "8598": {
      "op": "DUP11"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "op": "PUSH2",
      "value": "0x1F92"
    },
    "8603": {
      "jump": "i",
      "op": "JUMP"
    },
    "8604": {
      "op": "JUMPDEST"
    },
    "8605": {
      "op": "SWAP4"
    },
    "8606": {
      "op": "POP"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8609": {
      "op": "DUP9"
    },
    "8610": {
      "op": "ADD"
    },
    "8611": {
      "op": "CALLDATALOAD"
    },
    "8612": {
      "op": "SWAP2"
    },
    "8613": {
      "op": "POP"
    },
    "8614": {
      "op": "DUP1"
    },
    "8615": {
      "op": "DUP3"
    },
    "8616": {
      "op": "GT"
    },
    "8617": {
      "op": "ISZERO"
    },
    "8618": {
      "op": "PUSH2",
      "value": "0x21B2"
    },
    "8621": {
      "op": "JUMPI"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8624": {
      "op": "DUP1"
    },
    "8625": {
      "op": "REVERT"
    },
    "8626": {
      "op": "JUMPDEST"
    },
    "8627": {
      "op": "POP"
    },
    "8628": {
      "op": "PUSH2",
      "value": "0x21BF"
    },
    "8631": {
      "op": "DUP9"
    },
    "8632": {
      "op": "DUP3"
    },
    "8633": {
      "op": "DUP10"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "op": "PUSH2",
      "value": "0x2077"
    },
    "8638": {
      "jump": "i",
      "op": "JUMP"
    },
    "8639": {
      "op": "JUMPDEST"
    },
    "8640": {
      "op": "SWAP2"
    },
    "8641": {
      "op": "POP"
    },
    "8642": {
      "op": "POP"
    },
    "8643": {
      "op": "SWAP3"
    },
    "8644": {
      "op": "SWAP6"
    },
    "8645": {
      "op": "POP"
    },
    "8646": {
      "op": "SWAP3"
    },
    "8647": {
      "op": "SWAP6"
    },
    "8648": {
      "op": "SWAP1"
    },
    "8649": {
      "op": "SWAP4"
    },
    "8650": {
      "op": "POP"
    },
    "8651": {
      "jump": "o",
      "op": "JUMP"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8657": {
      "op": "DUP3"
    },
    "8658": {
      "op": "DUP5"
    },
    "8659": {
      "op": "SUB"
    },
    "8660": {
      "op": "SLT"
    },
    "8661": {
      "op": "ISZERO"
    },
    "8662": {
      "op": "PUSH2",
      "value": "0x21DE"
    },
    "8665": {
      "op": "JUMPI"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8668": {
      "op": "DUP1"
    },
    "8669": {
      "op": "REVERT"
    },
    "8670": {
      "op": "JUMPDEST"
    },
    "8671": {
      "op": "DUP2"
    },
    "8672": {
      "op": "CALLDATALOAD"
    },
    "8673": {
      "op": "PUSH2",
      "value": "0x1E48"
    },
    "8676": {
      "op": "DUP2"
    },
    "8677": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8680": {
      "jump": "i",
      "op": "JUMP"
    },
    "8681": {
      "op": "JUMPDEST"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8684": {
      "op": "DUP1"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8689": {
      "op": "DUP5"
    },
    "8690": {
      "op": "DUP7"
    },
    "8691": {
      "op": "SUB"
    },
    "8692": {
      "op": "SLT"
    },
    "8693": {
      "op": "ISZERO"
    },
    "8694": {
      "op": "PUSH2",
      "value": "0x21FE"
    },
    "8697": {
      "op": "JUMPI"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8700": {
      "op": "DUP1"
    },
    "8701": {
      "op": "REVERT"
    },
    "8702": {
      "op": "JUMPDEST"
    },
    "8703": {
      "op": "DUP4"
    },
    "8704": {
      "op": "CALLDATALOAD"
    },
    "8705": {
      "op": "PUSH2",
      "value": "0x2209"
    },
    "8708": {
      "op": "DUP2"
    },
    "8709": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8712": {
      "jump": "i",
      "op": "JUMP"
    },
    "8713": {
      "op": "JUMPDEST"
    },
    "8714": {
      "op": "SWAP3"
    },
    "8715": {
      "op": "POP"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8718": {
      "op": "DUP5"
    },
    "8719": {
      "op": "ADD"
    },
    "8720": {
      "op": "CALLDATALOAD"
    },
    "8721": {
      "op": "PUSH2",
      "value": "0x2219"
    },
    "8724": {
      "op": "DUP2"
    },
    "8725": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8728": {
      "jump": "i",
      "op": "JUMP"
    },
    "8729": {
      "op": "JUMPDEST"
    },
    "8730": {
      "op": "SWAP3"
    },
    "8731": {
      "op": "SWAP6"
    },
    "8732": {
      "op": "SWAP3"
    },
    "8733": {
      "op": "SWAP5"
    },
    "8734": {
      "op": "POP"
    },
    "8735": {
      "op": "POP"
    },
    "8736": {
      "op": "POP"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8739": {
      "op": "SWAP2"
    },
    "8740": {
      "op": "SWAP1"
    },
    "8741": {
      "op": "SWAP2"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "CALLDATALOAD"
    },
    "8744": {
      "op": "SWAP1"
    },
    "8745": {
      "jump": "o",
      "op": "JUMP"
    },
    "8746": {
      "op": "JUMPDEST"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8751": {
      "op": "DUP3"
    },
    "8752": {
      "op": "DUP5"
    },
    "8753": {
      "op": "SUB"
    },
    "8754": {
      "op": "SLT"
    },
    "8755": {
      "op": "ISZERO"
    },
    "8756": {
      "op": "PUSH2",
      "value": "0x223C"
    },
    "8759": {
      "op": "JUMPI"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8762": {
      "op": "DUP1"
    },
    "8763": {
      "op": "REVERT"
    },
    "8764": {
      "op": "JUMPDEST"
    },
    "8765": {
      "op": "POP"
    },
    "8766": {
      "op": "CALLDATALOAD"
    },
    "8767": {
      "op": "SWAP2"
    },
    "8768": {
      "op": "SWAP1"
    },
    "8769": {
      "op": "POP"
    },
    "8770": {
      "jump": "o",
      "op": "JUMP"
    },
    "8771": {
      "op": "JUMPDEST"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8774": {
      "op": "DUP1"
    },
    "8775": {
      "op": "DUP3"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "DUP3"
    },
    "8778": {
      "op": "MLOAD"
    },
    "8779": {
      "op": "DUP3"
    },
    "8780": {
      "op": "DUP3"
    },
    "8781": {
      "op": "ADD"
    },
    "8782": {
      "op": "DUP2"
    },
    "8783": {
      "op": "SWAP1"
    },
    "8784": {
      "op": "MSTORE"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8787": {
      "op": "SWAP2"
    },
    "8788": {
      "op": "SWAP1"
    },
    "8789": {
      "op": "DUP5"
    },
    "8790": {
      "op": "DUP3"
    },
    "8791": {
      "op": "ADD"
    },
    "8792": {
      "op": "SWAP1"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8795": {
      "op": "DUP6"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "op": "SWAP1"
    },
    "8798": {
      "op": "DUP5"
    },
    "8799": {
      "op": "JUMPDEST"
    },
    "8800": {
      "op": "DUP2"
    },
    "8801": {
      "op": "DUP2"
    },
    "8802": {
      "op": "LT"
    },
    "8803": {
      "op": "ISZERO"
    },
    "8804": {
      "op": "PUSH2",
      "value": "0x227D"
    },
    "8807": {
      "op": "JUMPI"
    },
    "8808": {
      "op": "DUP4"
    },
    "8809": {
      "op": "MLOAD"
    },
    "8810": {
      "op": "ISZERO"
    },
    "8811": {
      "op": "ISZERO"
    },
    "8812": {
      "op": "DUP4"
    },
    "8813": {
      "op": "MSTORE"
    },
    "8814": {
      "op": "SWAP3"
    },
    "8815": {
      "op": "DUP5"
    },
    "8816": {
      "op": "ADD"
    },
    "8817": {
      "op": "SWAP3"
    },
    "8818": {
      "op": "SWAP2"
    },
    "8819": {
      "op": "DUP5"
    },
    "8820": {
      "op": "ADD"
    },
    "8821": {
      "op": "SWAP2"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8824": {
      "op": "ADD"
    },
    "8825": {
      "op": "PUSH2",
      "value": "0x225F"
    },
    "8828": {
      "op": "JUMP"
    },
    "8829": {
      "op": "JUMPDEST"
    },
    "8830": {
      "op": "POP"
    },
    "8831": {
      "op": "SWAP1"
    },
    "8832": {
      "op": "SWAP7"
    },
    "8833": {
      "op": "SWAP6"
    },
    "8834": {
      "op": "POP"
    },
    "8835": {
      "op": "POP"
    },
    "8836": {
      "op": "POP"
    },
    "8837": {
      "op": "POP"
    },
    "8838": {
      "op": "POP"
    },
    "8839": {
      "op": "POP"
    },
    "8840": {
      "jump": "o",
      "op": "JUMP"
    },
    "8841": {
      "op": "JUMPDEST"
    },
    "8842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8844": {
      "op": "DUP1"
    },
    "8845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8847": {
      "op": "DUP1"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8850": {
      "op": "DUP1"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8855": {
      "op": "DUP9"
    },
    "8856": {
      "op": "DUP11"
    },
    "8857": {
      "op": "SUB"
    },
    "8858": {
      "op": "SLT"
    },
    "8859": {
      "op": "ISZERO"
    },
    "8860": {
      "op": "PUSH2",
      "value": "0x22A4"
    },
    "8863": {
      "op": "JUMPI"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8866": {
      "op": "DUP1"
    },
    "8867": {
      "op": "REVERT"
    },
    "8868": {
      "op": "JUMPDEST"
    },
    "8869": {
      "op": "DUP8"
    },
    "8870": {
      "op": "CALLDATALOAD"
    },
    "8871": {
      "op": "PUSH2",
      "value": "0x22AF"
    },
    "8874": {
      "op": "DUP2"
    },
    "8875": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8878": {
      "jump": "i",
      "op": "JUMP"
    },
    "8879": {
      "op": "JUMPDEST"
    },
    "8880": {
      "op": "SWAP7"
    },
    "8881": {
      "op": "POP"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8884": {
      "op": "DUP9"
    },
    "8885": {
      "op": "ADD"
    },
    "8886": {
      "op": "CALLDATALOAD"
    },
    "8887": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8890": {
      "op": "DUP2"
    },
    "8891": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8894": {
      "jump": "i",
      "op": "JUMP"
    },
    "8895": {
      "op": "JUMPDEST"
    },
    "8896": {
      "op": "SWAP6"
    },
    "8897": {
      "op": "POP"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8900": {
      "op": "DUP9"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "CALLDATALOAD"
    },
    "8903": {
      "op": "SWAP5"
    },
    "8904": {
      "op": "POP"
    },
    "8905": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8907": {
      "op": "DUP9"
    },
    "8908": {
      "op": "ADD"
    },
    "8909": {
      "op": "CALLDATALOAD"
    },
    "8910": {
      "op": "SWAP4"
    },
    "8911": {
      "op": "POP"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8914": {
      "op": "DUP9"
    },
    "8915": {
      "op": "ADD"
    },
    "8916": {
      "op": "CALLDATALOAD"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8919": {
      "op": "DUP2"
    },
    "8920": {
      "op": "AND"
    },
    "8921": {
      "op": "DUP2"
    },
    "8922": {
      "op": "EQ"
    },
    "8923": {
      "op": "PUSH2",
      "value": "0x22E3"
    },
    "8926": {
      "op": "JUMPI"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8929": {
      "op": "DUP1"
    },
    "8930": {
      "op": "REVERT"
    },
    "8931": {
      "op": "JUMPDEST"
    },
    "8932": {
      "op": "SWAP7"
    },
    "8933": {
      "op": "SWAP10"
    },
    "8934": {
      "op": "SWAP6"
    },
    "8935": {
      "op": "SWAP9"
    },
    "8936": {
      "op": "POP"
    },
    "8937": {
      "op": "SWAP4"
    },
    "8938": {
      "op": "SWAP7"
    },
    "8939": {
      "op": "SWAP3"
    },
    "8940": {
      "op": "SWAP6"
    },
    "8941": {
      "op": "SWAP5"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8944": {
      "op": "DUP5"
    },
    "8945": {
      "op": "ADD"
    },
    "8946": {
      "op": "CALLDATALOAD"
    },
    "8947": {
      "op": "SWAP5"
    },
    "8948": {
      "op": "POP"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8951": {
      "op": "SWAP1"
    },
    "8952": {
      "op": "SWAP4"
    },
    "8953": {
      "op": "ADD"
    },
    "8954": {
      "op": "CALLDATALOAD"
    },
    "8955": {
      "op": "SWAP3"
    },
    "8956": {
      "op": "SWAP2"
    },
    "8957": {
      "op": "POP"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "jump": "o",
      "op": "JUMP"
    },
    "8960": {
      "op": "JUMPDEST"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8963": {
      "op": "DUP1"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8966": {
      "op": "DUP4"
    },
    "8967": {
      "op": "DUP6"
    },
    "8968": {
      "op": "SUB"
    },
    "8969": {
      "op": "SLT"
    },
    "8970": {
      "op": "ISZERO"
    },
    "8971": {
      "op": "PUSH2",
      "value": "0x2313"
    },
    "8974": {
      "op": "JUMPI"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8977": {
      "op": "DUP1"
    },
    "8978": {
      "op": "REVERT"
    },
    "8979": {
      "op": "JUMPDEST"
    },
    "8980": {
      "op": "DUP3"
    },
    "8981": {
      "op": "CALLDATALOAD"
    },
    "8982": {
      "op": "PUSH2",
      "value": "0x231E"
    },
    "8985": {
      "op": "DUP2"
    },
    "8986": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "8989": {
      "jump": "i",
      "op": "JUMP"
    },
    "8990": {
      "op": "JUMPDEST"
    },
    "8991": {
      "op": "SWAP2"
    },
    "8992": {
      "op": "POP"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8995": {
      "op": "DUP4"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "CALLDATALOAD"
    },
    "8998": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9001": {
      "op": "DUP2"
    },
    "9002": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "9005": {
      "jump": "i",
      "op": "JUMP"
    },
    "9006": {
      "op": "JUMPDEST"
    },
    "9007": {
      "op": "DUP1"
    },
    "9008": {
      "op": "SWAP2"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "op": "SWAP3"
    },
    "9012": {
      "op": "POP"
    },
    "9013": {
      "op": "SWAP3"
    },
    "9014": {
      "op": "SWAP1"
    },
    "9015": {
      "op": "POP"
    },
    "9016": {
      "jump": "o",
      "op": "JUMP"
    },
    "9017": {
      "op": "JUMPDEST"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9020": {
      "op": "DUP2"
    },
    "9021": {
      "op": "DUP2"
    },
    "9022": {
      "op": "SHR"
    },
    "9023": {
      "op": "SWAP1"
    },
    "9024": {
      "op": "DUP3"
    },
    "9025": {
      "op": "AND"
    },
    "9026": {
      "op": "DUP1"
    },
    "9027": {
      "op": "PUSH2",
      "value": "0x234D"
    },
    "9030": {
      "op": "JUMPI"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9033": {
      "op": "DUP3"
    },
    "9034": {
      "op": "AND"
    },
    "9035": {
      "op": "SWAP2"
    },
    "9036": {
      "op": "POP"
    },
    "9037": {
      "op": "JUMPDEST"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9040": {
      "op": "DUP3"
    },
    "9041": {
      "op": "LT"
    },
    "9042": {
      "op": "DUP2"
    },
    "9043": {
      "op": "EQ"
    },
    "9044": {
      "op": "ISZERO"
    },
    "9045": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "9048": {
      "op": "JUMPI"
    },
    "9049": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9056": {
      "op": "SHL"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9059": {
      "op": "MSTORE"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9064": {
      "op": "MSTORE"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9069": {
      "op": "REVERT"
    },
    "9070": {
      "op": "JUMPDEST"
    },
    "9071": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9078": {
      "op": "SHL"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9081": {
      "op": "MSTORE"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9086": {
      "op": "MSTORE"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9091": {
      "op": "REVERT"
    },
    "9092": {
      "op": "JUMPDEST"
    },
    "9093": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9100": {
      "op": "SHL"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9103": {
      "op": "MSTORE"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9108": {
      "op": "MSTORE"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9113": {
      "op": "REVERT"
    },
    "9114": {
      "op": "JUMPDEST"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9119": {
      "op": "NOT"
    },
    "9120": {
      "op": "DUP3"
    },
    "9121": {
      "op": "EQ"
    },
    "9122": {
      "op": "ISZERO"
    },
    "9123": {
      "op": "PUSH2",
      "value": "0x23AE"
    },
    "9126": {
      "op": "JUMPI"
    },
    "9127": {
      "op": "PUSH2",
      "value": "0x23AE"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9133": {
      "jump": "i",
      "op": "JUMP"
    },
    "9134": {
      "op": "JUMPDEST"
    },
    "9135": {
      "op": "POP"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9138": {
      "op": "ADD"
    },
    "9139": {
      "op": "SWAP1"
    },
    "9140": {
      "jump": "o",
      "op": "JUMP"
    },
    "9141": {
      "op": "JUMPDEST"
    },
    "9142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9144": {
      "op": "DUP2"
    },
    "9145": {
      "op": "MLOAD"
    },
    "9146": {
      "op": "DUP1"
    },
    "9147": {
      "op": "DUP5"
    },
    "9148": {
      "op": "MSTORE"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9151": {
      "op": "DUP1"
    },
    "9152": {
      "op": "DUP6"
    },
    "9153": {
      "op": "ADD"
    },
    "9154": {
      "op": "SWAP5"
    },
    "9155": {
      "op": "POP"
    },
    "9156": {
      "op": "DUP1"
    },
    "9157": {
      "op": "DUP5"
    },
    "9158": {
      "op": "ADD"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "DUP4"
    },
    "9163": {
      "op": "DUP2"
    },
    "9164": {
      "op": "LT"
    },
    "9165": {
      "op": "ISZERO"
    },
    "9166": {
      "op": "PUSH2",
      "value": "0x23EE"
    },
    "9169": {
      "op": "JUMPI"
    },
    "9170": {
      "op": "DUP2"
    },
    "9171": {
      "op": "MLOAD"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9178": {
      "op": "SHL"
    },
    "9179": {
      "op": "SUB"
    },
    "9180": {
      "op": "AND"
    },
    "9181": {
      "op": "DUP8"
    },
    "9182": {
      "op": "MSTORE"
    },
    "9183": {
      "op": "SWAP6"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "ADD"
    },
    "9186": {
      "op": "SWAP6"
    },
    "9187": {
      "op": "SWAP1"
    },
    "9188": {
      "op": "DUP3"
    },
    "9189": {
      "op": "ADD"
    },
    "9190": {
      "op": "SWAP1"
    },
    "9191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9193": {
      "op": "ADD"
    },
    "9194": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9197": {
      "op": "JUMP"
    },
    "9198": {
      "op": "JUMPDEST"
    },
    "9199": {
      "op": "POP"
    },
    "9200": {
      "op": "SWAP5"
    },
    "9201": {
      "op": "SWAP6"
    },
    "9202": {
      "op": "SWAP5"
    },
    "9203": {
      "op": "POP"
    },
    "9204": {
      "op": "POP"
    },
    "9205": {
      "op": "POP"
    },
    "9206": {
      "op": "POP"
    },
    "9207": {
      "op": "POP"
    },
    "9208": {
      "jump": "o",
      "op": "JUMP"
    },
    "9209": {
      "op": "JUMPDEST"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9212": {
      "op": "DUP2"
    },
    "9213": {
      "op": "MLOAD"
    },
    "9214": {
      "op": "DUP1"
    },
    "9215": {
      "op": "DUP5"
    },
    "9216": {
      "op": "MSTORE"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9219": {
      "op": "DUP1"
    },
    "9220": {
      "op": "DUP6"
    },
    "9221": {
      "op": "ADD"
    },
    "9222": {
      "op": "SWAP5"
    },
    "9223": {
      "op": "POP"
    },
    "9224": {
      "op": "DUP1"
    },
    "9225": {
      "op": "DUP5"
    },
    "9226": {
      "op": "ADD"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9229": {
      "op": "JUMPDEST"
    },
    "9230": {
      "op": "DUP4"
    },
    "9231": {
      "op": "DUP2"
    },
    "9232": {
      "op": "LT"
    },
    "9233": {
      "op": "ISZERO"
    },
    "9234": {
      "op": "PUSH2",
      "value": "0x23EE"
    },
    "9237": {
      "op": "JUMPI"
    },
    "9238": {
      "op": "DUP2"
    },
    "9239": {
      "op": "MLOAD"
    },
    "9240": {
      "op": "DUP8"
    },
    "9241": {
      "op": "MSTORE"
    },
    "9242": {
      "op": "SWAP6"
    },
    "9243": {
      "op": "DUP3"
    },
    "9244": {
      "op": "ADD"
    },
    "9245": {
      "op": "SWAP6"
    },
    "9246": {
      "op": "SWAP1"
    },
    "9247": {
      "op": "DUP3"
    },
    "9248": {
      "op": "ADD"
    },
    "9249": {
      "op": "SWAP1"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9252": {
      "op": "ADD"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x240D"
    },
    "9256": {
      "op": "JUMP"
    },
    "9257": {
      "op": "JUMPDEST"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9260": {
      "op": "DUP2"
    },
    "9261": {
      "op": "MSTORE"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9264": {
      "op": "PUSH2",
      "value": "0x243C"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9269": {
      "op": "DUP4"
    },
    "9270": {
      "op": "ADD"
    },
    "9271": {
      "op": "DUP10"
    },
    "9272": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9275": {
      "jump": "i",
      "op": "JUMP"
    },
    "9276": {
      "op": "JUMPDEST"
    },
    "9277": {
      "op": "DUP3"
    },
    "9278": {
      "op": "DUP2"
    },
    "9279": {
      "op": "SUB"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9282": {
      "op": "DUP5"
    },
    "9283": {
      "op": "DUP2"
    },
    "9284": {
      "op": "ADD"
    },
    "9285": {
      "op": "SWAP2"
    },
    "9286": {
      "op": "SWAP1"
    },
    "9287": {
      "op": "SWAP2"
    },
    "9288": {
      "op": "MSTORE"
    },
    "9289": {
      "op": "DUP9"
    },
    "9290": {
      "op": "MLOAD"
    },
    "9291": {
      "op": "DUP1"
    },
    "9292": {
      "op": "DUP4"
    },
    "9293": {
      "op": "MSTORE"
    },
    "9294": {
      "op": "DUP10"
    },
    "9295": {
      "op": "DUP3"
    },
    "9296": {
      "op": "ADD"
    },
    "9297": {
      "op": "SWAP3"
    },
    "9298": {
      "op": "DUP3"
    },
    "9299": {
      "op": "ADD"
    },
    "9300": {
      "op": "SWAP1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9303": {
      "op": "JUMPDEST"
    },
    "9304": {
      "op": "DUP2"
    },
    "9305": {
      "op": "DUP2"
    },
    "9306": {
      "op": "LT"
    },
    "9307": {
      "op": "ISZERO"
    },
    "9308": {
      "op": "PUSH2",
      "value": "0x247C"
    },
    "9311": {
      "op": "JUMPI"
    },
    "9312": {
      "op": "DUP5"
    },
    "9313": {
      "op": "MLOAD"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9320": {
      "op": "SHL"
    },
    "9321": {
      "op": "SUB"
    },
    "9322": {
      "op": "AND"
    },
    "9323": {
      "op": "DUP4"
    },
    "9324": {
      "op": "MSTORE"
    },
    "9325": {
      "op": "SWAP4"
    },
    "9326": {
      "op": "DUP4"
    },
    "9327": {
      "op": "ADD"
    },
    "9328": {
      "op": "SWAP4"
    },
    "9329": {
      "op": "SWAP2"
    },
    "9330": {
      "op": "DUP4"
    },
    "9331": {
      "op": "ADD"
    },
    "9332": {
      "op": "SWAP2"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9335": {
      "op": "ADD"
    },
    "9336": {
      "op": "PUSH2",
      "value": "0x2457"
    },
    "9339": {
      "op": "JUMP"
    },
    "9340": {
      "op": "JUMPDEST"
    },
    "9341": {
      "op": "POP"
    },
    "9342": {
      "op": "POP"
    },
    "9343": {
      "op": "DUP5"
    },
    "9344": {
      "op": "DUP2"
    },
    "9345": {
      "op": "SUB"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9348": {
      "op": "DUP7"
    },
    "9349": {
      "op": "ADD"
    },
    "9350": {
      "op": "MSTORE"
    },
    "9351": {
      "op": "PUSH2",
      "value": "0x2490"
    },
    "9354": {
      "op": "DUP2"
    },
    "9355": {
      "op": "DUP11"
    },
    "9356": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9359": {
      "jump": "i",
      "op": "JUMP"
    },
    "9360": {
      "op": "JUMPDEST"
    },
    "9361": {
      "op": "SWAP3"
    },
    "9362": {
      "op": "POP"
    },
    "9363": {
      "op": "POP"
    },
    "9364": {
      "op": "POP"
    },
    "9365": {
      "op": "DUP3"
    },
    "9366": {
      "op": "DUP2"
    },
    "9367": {
      "op": "SUB"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9370": {
      "op": "DUP5"
    },
    "9371": {
      "op": "ADD"
    },
    "9372": {
      "op": "MSTORE"
    },
    "9373": {
      "op": "PUSH2",
      "value": "0x24A6"
    },
    "9376": {
      "op": "DUP2"
    },
    "9377": {
      "op": "DUP8"
    },
    "9378": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9381": {
      "jump": "i",
      "op": "JUMP"
    },
    "9382": {
      "op": "JUMPDEST"
    },
    "9383": {
      "op": "SWAP2"
    },
    "9384": {
      "op": "POP"
    },
    "9385": {
      "op": "POP"
    },
    "9386": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9391": {
      "op": "DUP4"
    },
    "9392": {
      "op": "ADD"
    },
    "9393": {
      "op": "DUP6"
    },
    "9394": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9399": {
      "op": "AND"
    },
    "9400": {
      "op": "SWAP1"
    },
    "9401": {
      "op": "MSTORE"
    },
    "9402": {
      "op": "JUMP"
    },
    "9403": {
      "op": "JUMPDEST"
    },
    "9404": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9409": {
      "op": "DUP4"
    },
    "9410": {
      "op": "AND"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9413": {
      "op": "DUP4"
    },
    "9414": {
      "op": "ADD"
    },
    "9415": {
      "op": "MSTORE"
    },
    "9416": {
      "op": "JUMPDEST"
    },
    "9417": {
      "op": "SWAP8"
    },
    "9418": {
      "op": "SWAP7"
    },
    "9419": {
      "op": "POP"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "POP"
    },
    "9422": {
      "op": "POP"
    },
    "9423": {
      "op": "POP"
    },
    "9424": {
      "op": "POP"
    },
    "9425": {
      "op": "POP"
    },
    "9426": {
      "jump": "o",
      "op": "JUMP"
    },
    "9427": {
      "op": "JUMPDEST"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9430": {
      "op": "DUP3"
    },
    "9431": {
      "op": "DUP3"
    },
    "9432": {
      "op": "LT"
    },
    "9433": {
      "op": "ISZERO"
    },
    "9434": {
      "op": "PUSH2",
      "value": "0x24E5"
    },
    "9437": {
      "op": "JUMPI"
    },
    "9438": {
      "op": "PUSH2",
      "value": "0x24E5"
    },
    "9441": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9444": {
      "jump": "i",
      "op": "JUMP"
    },
    "9445": {
      "op": "JUMPDEST"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "op": "SUB"
    },
    "9448": {
      "op": "SWAP1"
    },
    "9449": {
      "jump": "o",
      "op": "JUMP"
    },
    "9450": {
      "op": "JUMPDEST"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9453": {
      "op": "DUP2"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9456": {
      "op": "NOT"
    },
    "9457": {
      "op": "DIV"
    },
    "9458": {
      "op": "DUP4"
    },
    "9459": {
      "op": "GT"
    },
    "9460": {
      "op": "DUP3"
    },
    "9461": {
      "op": "ISZERO"
    },
    "9462": {
      "op": "ISZERO"
    },
    "9463": {
      "op": "AND"
    },
    "9464": {
      "op": "ISZERO"
    },
    "9465": {
      "op": "PUSH2",
      "value": "0x2504"
    },
    "9468": {
      "op": "JUMPI"
    },
    "9469": {
      "op": "PUSH2",
      "value": "0x2504"
    },
    "9472": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9475": {
      "jump": "i",
      "op": "JUMP"
    },
    "9476": {
      "op": "JUMPDEST"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "op": "MUL"
    },
    "9479": {
      "op": "SWAP1"
    },
    "9480": {
      "jump": "o",
      "op": "JUMP"
    },
    "9481": {
      "op": "JUMPDEST"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9484": {
      "op": "DUP3"
    },
    "9485": {
      "op": "PUSH2",
      "value": "0x2526"
    },
    "9488": {
      "op": "JUMPI"
    },
    "9489": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9496": {
      "op": "SHL"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9499": {
      "op": "MSTORE"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9504": {
      "op": "MSTORE"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9509": {
      "op": "REVERT"
    },
    "9510": {
      "op": "JUMPDEST"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "op": "DIV"
    },
    "9513": {
      "op": "SWAP1"
    },
    "9514": {
      "jump": "o",
      "op": "JUMP"
    },
    "9515": {
      "op": "JUMPDEST"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9518": {
      "op": "DUP3"
    },
    "9519": {
      "op": "NOT"
    },
    "9520": {
      "op": "DUP3"
    },
    "9521": {
      "op": "GT"
    },
    "9522": {
      "op": "ISZERO"
    },
    "9523": {
      "op": "PUSH2",
      "value": "0x253E"
    },
    "9526": {
      "op": "JUMPI"
    },
    "9527": {
      "op": "PUSH2",
      "value": "0x253E"
    },
    "9530": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9533": {
      "jump": "i",
      "op": "JUMP"
    },
    "9534": {
      "op": "JUMPDEST"
    },
    "9535": {
      "op": "POP"
    },
    "9536": {
      "op": "ADD"
    },
    "9537": {
      "op": "SWAP1"
    },
    "9538": {
      "jump": "o",
      "op": "JUMP"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9544": {
      "op": "DUP3"
    },
    "9545": {
      "op": "DUP5"
    },
    "9546": {
      "op": "SUB"
    },
    "9547": {
      "op": "SLT"
    },
    "9548": {
      "op": "ISZERO"
    },
    "9549": {
      "op": "PUSH2",
      "value": "0x2555"
    },
    "9552": {
      "op": "JUMPI"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9555": {
      "op": "DUP1"
    },
    "9556": {
      "op": "REVERT"
    },
    "9557": {
      "op": "JUMPDEST"
    },
    "9558": {
      "op": "DUP2"
    },
    "9559": {
      "op": "MLOAD"
    },
    "9560": {
      "op": "DUP1"
    },
    "9561": {
      "op": "ISZERO"
    },
    "9562": {
      "op": "ISZERO"
    },
    "9563": {
      "op": "DUP2"
    },
    "9564": {
      "op": "EQ"
    },
    "9565": {
      "op": "PUSH2",
      "value": "0x1E48"
    },
    "9568": {
      "op": "JUMPI"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9571": {
      "op": "DUP1"
    },
    "9572": {
      "op": "REVERT"
    },
    "9573": {
      "op": "JUMPDEST"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9576": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9581": {
      "op": "DUP1"
    },
    "9582": {
      "op": "DUP4"
    },
    "9583": {
      "op": "AND"
    },
    "9584": {
      "op": "DUP2"
    },
    "9585": {
      "op": "DUP6"
    },
    "9586": {
      "op": "AND"
    },
    "9587": {
      "op": "DUP1"
    },
    "9588": {
      "op": "DUP4"
    },
    "9589": {
      "op": "SUB"
    },
    "9590": {
      "op": "DUP3"
    },
    "9591": {
      "op": "GT"
    },
    "9592": {
      "op": "ISZERO"
    },
    "9593": {
      "op": "PUSH2",
      "value": "0x2584"
    },
    "9596": {
      "op": "JUMPI"
    },
    "9597": {
      "op": "PUSH2",
      "value": "0x2584"
    },
    "9600": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9603": {
      "jump": "i",
      "op": "JUMP"
    },
    "9604": {
      "op": "JUMPDEST"
    },
    "9605": {
      "op": "ADD"
    },
    "9606": {
      "op": "SWAP5"
    },
    "9607": {
      "op": "SWAP4"
    },
    "9608": {
      "op": "POP"
    },
    "9609": {
      "op": "POP"
    },
    "9610": {
      "op": "POP"
    },
    "9611": {
      "op": "POP"
    },
    "9612": {
      "jump": "o",
      "op": "JUMP"
    },
    "9613": {
      "op": "JUMPDEST"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9618": {
      "op": "DUP3"
    },
    "9619": {
      "op": "DUP5"
    },
    "9620": {
      "op": "SUB"
    },
    "9621": {
      "op": "SLT"
    },
    "9622": {
      "op": "ISZERO"
    },
    "9623": {
      "op": "PUSH2",
      "value": "0x259F"
    },
    "9626": {
      "op": "JUMPI"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9629": {
      "op": "DUP1"
    },
    "9630": {
      "op": "REVERT"
    },
    "9631": {
      "op": "JUMPDEST"
    },
    "9632": {
      "op": "POP"
    },
    "9633": {
      "op": "MLOAD"
    },
    "9634": {
      "op": "SWAP2"
    },
    "9635": {
      "op": "SWAP1"
    },
    "9636": {
      "op": "POP"
    },
    "9637": {
      "jump": "o",
      "op": "JUMP"
    },
    "9638": {
      "op": "JUMPDEST"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9641": {
      "op": "DUP1"
    },
    "9642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9644": {
      "op": "SHL"
    },
    "9645": {
      "op": "SUB"
    },
    "9646": {
      "op": "DUP6"
    },
    "9647": {
      "op": "AND"
    },
    "9648": {
      "op": "DUP2"
    },
    "9649": {
      "op": "MSTORE"
    },
    "9650": {
      "op": "DUP4"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9653": {
      "op": "DUP3"
    },
    "9654": {
      "op": "ADD"
    },
    "9655": {
      "op": "MSTORE"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "MSTORE"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9665": {
      "op": "PUSH2",
      "value": "0x25CD"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9670": {
      "op": "DUP4"
    },
    "9671": {
      "op": "ADD"
    },
    "9672": {
      "op": "DUP6"
    },
    "9673": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9676": {
      "jump": "i",
      "op": "JUMP"
    },
    "9677": {
      "op": "JUMPDEST"
    },
    "9678": {
      "op": "DUP3"
    },
    "9679": {
      "op": "DUP2"
    },
    "9680": {
      "op": "SUB"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9683": {
      "op": "DUP5"
    },
    "9684": {
      "op": "ADD"
    },
    "9685": {
      "op": "MSTORE"
    },
    "9686": {
      "op": "PUSH2",
      "value": "0x24C8"
    },
    "9689": {
      "op": "DUP2"
    },
    "9690": {
      "op": "DUP6"
    },
    "9691": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9694": {
      "jump": "i",
      "op": "JUMP"
    },
    "9695": {
      "op": "JUMPDEST"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9698": {
      "op": "DUP1"
    },
    "9699": {
      "op": "DUP4"
    },
    "9700": {
      "op": "SLOAD"
    },
    "9701": {
      "op": "DUP2"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9704": {
      "op": "DUP3"
    },
    "9705": {
      "op": "DUP2"
    },
    "9706": {
      "op": "SHR"
    },
    "9707": {
      "op": "SWAP2"
    },
    "9708": {
      "op": "POP"
    },
    "9709": {
      "op": "DUP1"
    },
    "9710": {
      "op": "DUP4"
    },
    "9711": {
      "op": "AND"
    },
    "9712": {
      "op": "DUP1"
    },
    "9713": {
      "op": "PUSH2",
      "value": "0x25FB"
    },
    "9716": {
      "op": "JUMPI"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9719": {
      "op": "DUP4"
    },
    "9720": {
      "op": "AND"
    },
    "9721": {
      "op": "SWAP3"
    },
    "9722": {
      "op": "POP"
    },
    "9723": {
      "op": "JUMPDEST"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9726": {
      "op": "DUP1"
    },
    "9727": {
      "op": "DUP5"
    },
    "9728": {
      "op": "LT"
    },
    "9729": {
      "op": "DUP3"
    },
    "9730": {
      "op": "EQ"
    },
    "9731": {
      "op": "ISZERO"
    },
    "9732": {
      "op": "PUSH2",
      "value": "0x261B"
    },
    "9735": {
      "op": "JUMPI"
    },
    "9736": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9743": {
      "op": "SHL"
    },
    "9744": {
      "op": "DUP7"
    },
    "9745": {
      "op": "MSTORE"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9750": {
      "op": "MSTORE"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9753": {
      "op": "DUP7"
    },
    "9754": {
      "op": "REVERT"
    },
    "9755": {
      "op": "JUMPDEST"
    },
    "9756": {
      "op": "DUP2"
    },
    "9757": {
      "op": "DUP1"
    },
    "9758": {
      "op": "ISZERO"
    },
    "9759": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "9762": {
      "op": "JUMPI"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9765": {
      "op": "DUP2"
    },
    "9766": {
      "op": "EQ"
    },
    "9767": {
      "op": "PUSH2",
      "value": "0x2640"
    },
    "9770": {
      "op": "JUMPI"
    },
    "9771": {
      "op": "PUSH2",
      "value": "0x266D"
    },
    "9774": {
      "op": "JUMP"
    },
    "9775": {
      "op": "JUMPDEST"
    },
    "9776": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9778": {
      "op": "NOT"
    },
    "9779": {
      "op": "DUP7"
    },
    "9780": {
      "op": "AND"
    },
    "9781": {
      "op": "DUP10"
    },
    "9782": {
      "op": "MSTORE"
    },
    "9783": {
      "op": "DUP5"
    },
    "9784": {
      "op": "DUP10"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "SWAP7"
    },
    "9787": {
      "op": "POP"
    },
    "9788": {
      "op": "PUSH2",
      "value": "0x266D"
    },
    "9791": {
      "op": "JUMP"
    },
    "9792": {
      "op": "JUMPDEST"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9795": {
      "op": "DUP11"
    },
    "9796": {
      "op": "DUP2"
    },
    "9797": {
      "op": "MSTORE"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9800": {
      "op": "SWAP1"
    },
    "9801": {
      "op": "KECCAK256"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9804": {
      "op": "JUMPDEST"
    },
    "9805": {
      "op": "DUP7"
    },
    "9806": {
      "op": "DUP2"
    },
    "9807": {
      "op": "LT"
    },
    "9808": {
      "op": "ISZERO"
    },
    "9809": {
      "op": "PUSH2",
      "value": "0x2665"
    },
    "9812": {
      "op": "JUMPI"
    },
    "9813": {
      "op": "DUP2"
    },
    "9814": {
      "op": "SLOAD"
    },
    "9815": {
      "op": "DUP12"
    },
    "9816": {
      "op": "DUP3"
    },
    "9817": {
      "op": "ADD"
    },
    "9818": {
      "op": "MSTORE"
    },
    "9819": {
      "op": "SWAP1"
    },
    "9820": {
      "op": "DUP6"
    },
    "9821": {
      "op": "ADD"
    },
    "9822": {
      "op": "SWAP1"
    },
    "9823": {
      "op": "DUP4"
    },
    "9824": {
      "op": "ADD"
    },
    "9825": {
      "op": "PUSH2",
      "value": "0x264C"
    },
    "9828": {
      "op": "JUMP"
    },
    "9829": {
      "op": "JUMPDEST"
    },
    "9830": {
      "op": "POP"
    },
    "9831": {
      "op": "POP"
    },
    "9832": {
      "op": "DUP5"
    },
    "9833": {
      "op": "DUP10"
    },
    "9834": {
      "op": "ADD"
    },
    "9835": {
      "op": "SWAP7"
    },
    "9836": {
      "op": "POP"
    },
    "9837": {
      "op": "JUMPDEST"
    },
    "9838": {
      "op": "POP"
    },
    "9839": {
      "op": "SWAP5"
    },
    "9840": {
      "op": "SWAP9"
    },
    "9841": {
      "op": "SWAP8"
    },
    "9842": {
      "op": "POP"
    },
    "9843": {
      "op": "POP"
    },
    "9844": {
      "op": "POP"
    },
    "9845": {
      "op": "POP"
    },
    "9846": {
      "op": "POP"
    },
    "9847": {
      "op": "POP"
    },
    "9848": {
      "op": "POP"
    },
    "9849": {
      "op": "POP"
    },
    "9850": {
      "jump": "o",
      "op": "JUMP"
    },
    "9851": {
      "op": "JUMPDEST"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9854": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9859": {
      "op": "DUP4"
    },
    "9860": {
      "op": "DUP2"
    },
    "9861": {
      "op": "AND"
    },
    "9862": {
      "op": "SWAP1"
    },
    "9863": {
      "op": "DUP4"
    },
    "9864": {
      "op": "AND"
    },
    "9865": {
      "op": "DUP2"
    },
    "9866": {
      "op": "DUP2"
    },
    "9867": {
      "op": "LT"
    },
    "9868": {
      "op": "ISZERO"
    },
    "9869": {
      "op": "PUSH2",
      "value": "0x2698"
    },
    "9872": {
      "op": "JUMPI"
    },
    "9873": {
      "op": "PUSH2",
      "value": "0x2698"
    },
    "9876": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9879": {
      "jump": "i",
      "op": "JUMP"
    },
    "9880": {
      "op": "JUMPDEST"
    },
    "9881": {
      "op": "SUB"
    },
    "9882": {
      "op": "SWAP4"
    },
    "9883": {
      "op": "SWAP3"
    },
    "9884": {
      "op": "POP"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "op": "POP"
    },
    "9887": {
      "jump": "o",
      "op": "JUMP"
    },
    "9888": {
      "op": "JUMPDEST"
    },
    "9889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9891": {
      "op": "DUP2"
    },
    "9892": {
      "op": "DUP2"
    },
    "9893": {
      "op": "JUMPDEST"
    },
    "9894": {
      "op": "DUP1"
    },
    "9895": {
      "op": "DUP6"
    },
    "9896": {
      "op": "GT"
    },
    "9897": {
      "op": "ISZERO"
    },
    "9898": {
      "op": "PUSH2",
      "value": "0x26DD"
    },
    "9901": {
      "op": "JUMPI"
    },
    "9902": {
      "op": "DUP2"
    },
    "9903": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9908": {
      "op": "DIV"
    },
    "9909": {
      "op": "DUP3"
    },
    "9910": {
      "op": "GT"
    },
    "9911": {
      "op": "ISZERO"
    },
    "9912": {
      "op": "PUSH2",
      "value": "0x26C3"
    },
    "9915": {
      "op": "JUMPI"
    },
    "9916": {
      "op": "PUSH2",
      "value": "0x26C3"
    },
    "9919": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9922": {
      "jump": "i",
      "op": "JUMP"
    },
    "9923": {
      "op": "JUMPDEST"
    },
    "9924": {
      "op": "DUP1"
    },
    "9925": {
      "op": "DUP6"
    },
    "9926": {
      "op": "AND"
    },
    "9927": {
      "op": "ISZERO"
    },
    "9928": {
      "op": "PUSH2",
      "value": "0x26D0"
    },
    "9931": {
      "op": "JUMPI"
    },
    "9932": {
      "op": "SWAP2"
    },
    "9933": {
      "op": "DUP2"
    },
    "9934": {
      "op": "MUL"
    },
    "9935": {
      "op": "SWAP2"
    },
    "9936": {
      "op": "JUMPDEST"
    },
    "9937": {
      "op": "SWAP4"
    },
    "9938": {
      "op": "DUP5"
    },
    "9939": {
      "op": "SHR"
    },
    "9940": {
      "op": "SWAP4"
    },
    "9941": {
      "op": "SWAP1"
    },
    "9942": {
      "op": "DUP1"
    },
    "9943": {
      "op": "MUL"
    },
    "9944": {
      "op": "SWAP1"
    },
    "9945": {
      "op": "PUSH2",
      "value": "0x26A5"
    },
    "9948": {
      "op": "JUMP"
    },
    "9949": {
      "op": "JUMPDEST"
    },
    "9950": {
      "op": "POP"
    },
    "9951": {
      "op": "SWAP3"
    },
    "9952": {
      "op": "POP"
    },
    "9953": {
      "op": "SWAP3"
    },
    "9954": {
      "op": "SWAP1"
    },
    "9955": {
      "op": "POP"
    },
    "9956": {
      "jump": "o",
      "op": "JUMP"
    },
    "9957": {
      "op": "JUMPDEST"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9960": {
      "op": "DUP3"
    },
    "9961": {
      "op": "PUSH2",
      "value": "0x26F4"
    },
    "9964": {
      "op": "JUMPI"
    },
    "9965": {
      "op": "POP"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9968": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "9971": {
      "op": "JUMP"
    },
    "9972": {
      "op": "JUMPDEST"
    },
    "9973": {
      "op": "DUP2"
    },
    "9974": {
      "op": "PUSH2",
      "value": "0x2701"
    },
    "9977": {
      "op": "JUMPI"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9981": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "9984": {
      "op": "JUMP"
    },
    "9985": {
      "op": "JUMPDEST"
    },
    "9986": {
      "op": "DUP2"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9989": {
      "op": "DUP2"
    },
    "9990": {
      "op": "EQ"
    },
    "9991": {
      "op": "PUSH2",
      "value": "0x2717"
    },
    "9994": {
      "op": "JUMPI"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9997": {
      "op": "DUP2"
    },
    "9998": {
      "op": "EQ"
    },
    "9999": {
      "op": "PUSH2",
      "value": "0x2721"
    },
    "10002": {
      "op": "JUMPI"
    },
    "10003": {
      "op": "PUSH2",
      "value": "0x2752"
    },
    "10006": {
      "op": "JUMP"
    },
    "10007": {
      "op": "JUMPDEST"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10010": {
      "op": "SWAP2"
    },
    "10011": {
      "op": "POP"
    },
    "10012": {
      "op": "POP"
    },
    "10013": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "10016": {
      "op": "JUMP"
    },
    "10017": {
      "op": "JUMPDEST"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10020": {
      "op": "DUP5"
    },
    "10021": {
      "op": "GT"
    },
    "10022": {
      "op": "ISZERO"
    },
    "10023": {
      "op": "PUSH2",
      "value": "0x2732"
    },
    "10026": {
      "op": "JUMPI"
    },
    "10027": {
      "op": "PUSH2",
      "value": "0x2732"
    },
    "10030": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10033": {
      "jump": "i",
      "op": "JUMP"
    },
    "10034": {
      "op": "JUMPDEST"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10037": {
      "op": "DUP5"
    },
    "10038": {
      "op": "SHL"
    },
    "10039": {
      "op": "SWAP2"
    },
    "10040": {
      "op": "POP"
    },
    "10041": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10046": {
      "op": "DUP3"
    },
    "10047": {
      "op": "GT"
    },
    "10048": {
      "op": "ISZERO"
    },
    "10049": {
      "op": "PUSH2",
      "value": "0x274C"
    },
    "10052": {
      "op": "JUMPI"
    },
    "10053": {
      "op": "PUSH2",
      "value": "0x274C"
    },
    "10056": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10059": {
      "jump": "i",
      "op": "JUMP"
    },
    "10060": {
      "op": "JUMPDEST"
    },
    "10061": {
      "op": "POP"
    },
    "10062": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "10065": {
      "op": "JUMP"
    },
    "10066": {
      "op": "JUMPDEST"
    },
    "10067": {
      "op": "POP"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10070": {
      "op": "DUP4"
    },
    "10071": {
      "op": "LT"
    },
    "10072": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "10075": {
      "op": "DUP4"
    },
    "10076": {
      "op": "LT"
    },
    "10077": {
      "op": "AND"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "10080": {
      "op": "DUP5"
    },
    "10081": {
      "op": "LT"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "10084": {
      "op": "DUP5"
    },
    "10085": {
      "op": "LT"
    },
    "10086": {
      "op": "AND"
    },
    "10087": {
      "op": "OR"
    },
    "10088": {
      "op": "ISZERO"
    },
    "10089": {
      "op": "PUSH2",
      "value": "0x2789"
    },
    "10092": {
      "op": "JUMPI"
    },
    "10093": {
      "op": "POP"
    },
    "10094": {
      "op": "DUP2"
    },
    "10095": {
      "op": "DUP2"
    },
    "10096": {
      "op": "EXP"
    },
    "10097": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10102": {
      "op": "DUP2"
    },
    "10103": {
      "op": "GT"
    },
    "10104": {
      "op": "ISZERO"
    },
    "10105": {
      "op": "PUSH2",
      "value": "0x2784"
    },
    "10108": {
      "op": "JUMPI"
    },
    "10109": {
      "op": "PUSH2",
      "value": "0x2784"
    },
    "10112": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10115": {
      "jump": "i",
      "op": "JUMP"
    },
    "10116": {
      "op": "JUMPDEST"
    },
    "10117": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "10120": {
      "op": "JUMP"
    },
    "10121": {
      "op": "JUMPDEST"
    },
    "10122": {
      "op": "PUSH2",
      "value": "0x2793"
    },
    "10125": {
      "op": "DUP4"
    },
    "10126": {
      "op": "DUP4"
    },
    "10127": {
      "op": "PUSH2",
      "value": "0x26A0"
    },
    "10130": {
      "jump": "i",
      "op": "JUMP"
    },
    "10131": {
      "op": "JUMPDEST"
    },
    "10132": {
      "op": "DUP1"
    },
    "10133": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10138": {
      "op": "DIV"
    },
    "10139": {
      "op": "DUP3"
    },
    "10140": {
      "op": "GT"
    },
    "10141": {
      "op": "ISZERO"
    },
    "10142": {
      "op": "PUSH2",
      "value": "0x27A9"
    },
    "10145": {
      "op": "JUMPI"
    },
    "10146": {
      "op": "PUSH2",
      "value": "0x27A9"
    },
    "10149": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10152": {
      "jump": "i",
      "op": "JUMP"
    },
    "10153": {
      "op": "JUMPDEST"
    },
    "10154": {
      "op": "MUL"
    },
    "10155": {
      "op": "SWAP4"
    },
    "10156": {
      "op": "SWAP3"
    },
    "10157": {
      "op": "POP"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "op": "POP"
    },
    "10160": {
      "jump": "o",
      "op": "JUMP"
    },
    "10161": {
      "op": "JUMPDEST"
    },
    "10162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10164": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10169": {
      "op": "PUSH2",
      "value": "0x27C6"
    },
    "10172": {
      "op": "DUP2"
    },
    "10173": {
      "op": "DUP6"
    },
    "10174": {
      "op": "AND"
    },
    "10175": {
      "op": "DUP3"
    },
    "10176": {
      "op": "DUP6"
    },
    "10177": {
      "op": "AND"
    },
    "10178": {
      "op": "PUSH2",
      "value": "0x26E5"
    },
    "10181": {
      "jump": "i",
      "op": "JUMP"
    },
    "10182": {
      "op": "JUMPDEST"
    },
    "10183": {
      "op": "SWAP5"
    },
    "10184": {
      "op": "SWAP4"
    },
    "10185": {
      "op": "POP"
    },
    "10186": {
      "op": "POP"
    },
    "10187": {
      "op": "POP"
    },
    "10188": {
      "op": "POP"
    },
    "10189": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5afec772d638cfda5d317bef116f6af90b3fdd1c",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.10;\n\nimport \"../interfaces/IBuidlCollective.sol\";\nimport {ERC20} from \"./solmate/src/tokens/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract BuidlCollective is ERC20, IBuidlCollective, Initializable{\n    //using SafeERC20 for ERC20;\n    bool collectiveStarted;\n    \n    struct Collective {\n        uint32 vestingTime;\n        uint32 cliff;\n        uint32 collectiveStart;\n    }\n    // tokenInfo\n    address[] public tokens;\n\n    mapping(address => TokenInfo) public tokenInfo;\n\n    address public admin;\n\n    struct TokenInfo {\n        uint256 target;\n        uint128 price;\n        uint128 claimed;\n        address user;\n    }\n\n    uint256 public totalAssets;\n    // keep track of tokenBalances\n    //mapping(address => uint256) tokenBalances;\n\n    Collective public collectiveInfo;\n    \n    ///////////////////////////////////////////\n    // Staking Logic\n    uint32 constant public BP  = 10000;\n    uint32 constant public VEST_MULTIPLIER = 10 ** 8;\n    mapping(address => UserInfo) public userInfo;\n    // timestamp\n    uint256 public lastCheckpoint;\n    // a checkpoint number based on percentageStaked(bp) * every second passed\n    uint256 public lastTWAP;\n    // totalStaked in percetnage(bp)\n    uint256 public totalStaked;\n    uint256 public releaseFactor = 86400 * 3;\n    \n    struct UserInfo {\n        // percentage(bp) in VEST_MULTIPLIER\n        uint256 depositedShare;\n        // last TWAP during stake/unstake/claim\n        uint256 lastCheckpointTWAP;\n        // last timestamp during stake/unstake/claim\n        uint256 lastCheckpointTime;\n        // last percentageVested during stake/unstake/claim\n        uint256 lastCheckpointPercentageVested;\n    }\n\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin);\n        _;\n    }\n\n    constructor(string memory _name, string memory _symbol, uint8 _decimals) ERC20(_name, _symbol, _decimals) {}\n    //////////////////////////////////////////// SETTERS\n    // ADMIN FUNCTION //\n    // assumptions - 1 wallet => 1 token => 1 price\n    function initialize(Collective memory _collectiveInfo, address[] memory _tokens, uint128[] memory _prices, address[] memory _users, uint256[] memory _targets) onlyAdmin external {\n    //function initialize(string memory _name, string memory _symbol, uint8 _decimals, Collective memory _collectiveInfo, address[] memory _tokens, uint128[] memory _prices, address[] memory _users, uint256[] memory _targets) onlyAdmin external {\n        //admin = msg.sender;\n        //emit AdminChanged(_admin);\n        // name = _name;\n        // symbol = _symbol;\n        // decimals = _decimals;\n        collectiveInfo = _collectiveInfo;\n        collectiveInfo.collectiveStart = 0;\n        uint256 tokenLength = _tokens.length;\n        for (uint256 i = 0; i < tokenLength; i++) {\n            TokenInfo memory t = TokenInfo(\n                _targets[i],\n                _prices[i],\n                0,\n                _users[i]\n        );\n            tokenInfo[_tokens[i]] = t;\n            tokens.push(_tokens[i]);\n        }\n        emit LogNewCollectiveInitialized(_tokens, _prices, _users, _targets, collectiveInfo.cliff, collectiveInfo.vestingTime);\n        //emit LogNewCollectiveInitialized(_name, _symbol, _decimals, _tokens, _prices, _users, _targets, collectiveInfo.cliff, collectiveInfo.vestingTime);\n    }\n\n    // before startCollective, cancel the collective\n    function cancel(address payable to) onlyAdmin external {\n        require(collectiveStarted == false);\n        selfdestruct(to);\n    }\n    \n    function updateAdmin(address _newAdmin) onlyAdmin external {\n        admin = _newAdmin;\n        //AdminChanged(_newAdmin);\n        emit LogNewAdmin(_newAdmin);\n    }\n\n    function startCollective() external onlyAdmin returns (bool) {\n        require(collectiveStarted == false);\n        collectiveStarted = true;\n        address[] memory _tokens = tokens;\n        TokenInfo storage _tokenInfo;\n        uint256 amount;\n        uint256 _totalAssets;\n        for (uint256 i; i < _tokens.length; i++) {\n            _tokenInfo = tokenInfo[_tokens[i]]; \n            uint256 amount = _tokenInfo.target;\n            address contributor = _tokenInfo.user;\n            IERC20(_tokens[i]).transferFrom(contributor, address(this), amount);\n            // @TODO assetValue in price(128) / divided 10 ** 8\n            uint256 assetValue = amount * _tokenInfo.price / 1E8;\n            _totalAssets += assetValue;\n            //tokenBalances[_tokens[i]] = amount;\n            _mint(contributor, assetValue);\n        }\n        collectiveInfo.collectiveStart = uint32(block.timestamp);\n        lastCheckpoint = collectiveInfo.collectiveStart + collectiveInfo.cliff;\n        emit LogNewPoolInitialized(block.timestamp);\n    }\n\n    //////////\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // VIEW FUNCTION\n    // return adddress, targetSupply, price, contributor and also percentage\n    function readToken(uint256 _tokenId) public view returns (address, TokenInfo memory){\n        address tokenAddr = tokens[_tokenId];\n        return (tokenAddr, tokenInfo[tokenAddr]);\n    }\n    // return if tokens approval is completed for each tokens\n    function pokeApproval() public view returns(bool[] memory) {\n        bool[] memory approvals = new bool[](tokens.length);\n        for (uint256 i; i < tokens.length; i++) {\n            address contributor = tokenInfo[tokens[i]].user;\n            uint256 allowance = IERC20(tokens[i]).allowance(contributor, address(this));\n            bool approval = allowance >= tokenInfo[tokens[i]].target;\n            approvals[i] = approval;\n        }\n        return approvals;\n    } \n    //n /////////////////////////// STAKING LOGIC\n\n    modifier updateCheckpoint() {\n        if (block.timestamp > lastCheckpoint) {\n            lastTWAP += totalStaked * BP / totalAssets * (block.timestamp - lastCheckpoint);\n            lastCheckpoint = block.timestamp;\n            _;\n        } else {\n            _;\n        }\n        \n    }\n    \n\n    function stake(uint256 _assetValue) updateCheckpoint external {\n        //safeTransferFrom(address(this), comsg.senderaddress(this), _assetValue);\n        UserInfo memory u = UserInfo(_assetValue * BP * VEST_MULTIPLIER / totalAssets, lastTWAP, block.timestamp, getVestingPercent());\n        userInfo[msg.sender] = u;\n        totalStaked += _assetValue;\n    }\n\n    function unstake(uint256 _assetValueLeft) updateCheckpoint external {\n        _claim(msg.sender);\n        uint256 p = _assetValueLeft * BP * VEST_MULTIPLIER / totalAssets;\n        require( p < userInfo[msg.sender].depositedShare, \"UNSTAKE AMOUNT TOO BIG\");\n        IERC20(address(this)).transfer(msg.sender, _assetValueLeft);\n        userInfo[msg.sender].depositedShare = 0;\n    }\n    \n    function unstakeAll() updateCheckpoint external {\n        IERC20(address(this)).transfer(msg.sender, userInfo[msg.sender].depositedShare * totalAssets / VEST_MULTIPLIER);\n        _claim(msg.sender);\n    }\n\n    function claim(address user) updateCheckpoint external {\n        _claim(user);   \n    }\n\n    function _claim(address user) internal {\n        // @TODO should this share be simply percentage in BP?\n        uint256 share = _calculateShareToClaim(user);\n        address[] memory _tokens = tokens;\n        uint256[] memory amounts = new uint256[](_tokens.length);\n        if (share > 0) {\n            userInfo[user].lastCheckpointTWAP = lastTWAP;\n            userInfo[user].lastCheckpointPercentageVested = getVestingPercent();\n            userInfo[user].lastCheckpointTime = block.timestamp;\n            userInfo[user].depositedShare -= share;\n            _burn(user, share * totalAssets);\n            for (uint256 i = 0; i < _tokens.length; i++) {\n                uint256 amount = convertShareToToken(share, i);\n                amounts[i] = amount;\n                IERC20(_tokens[i]).transfer(user, amount);\n            }\n            emit LogClaim(user, share, _tokens, amounts);\n        }\n    }\n\n    function convertShareToToken(uint256 share, uint256 tokenId) internal view returns(uint256){\n        return tokenInfo[tokens[tokenId]].target * share / (BP ** VEST_MULTIPLIER);\n    } \n\n    // function vestedMultiplier(address user) internal view returns(uint256) {\n    //     uint256 elapsedTime = block.timestamp - UserInfo[user].lastCheckpointTime;\n    //     uint256 elapsedTWAP = lastTWAP - UserInfo[user].lastTWAP;\n    //     uint256 avgPercentage = elapsedTWAP / elapsedTime;\n    //     return VEST_MULTIPLIER * BP / avgPercentage;\n\n    // }\n    // return the share(% but in BP) to be claimed by user, multiplier by 10 ** 8\n    // \n    function _calculateShareToClaim(address user) internal view returns(uint256) {\n        uint256 elapsedTime = block.timestamp - userInfo[user].lastCheckpointTime;\n        uint256 elapsedVestingPercentage = getVestingPercent() - userInfo[user].lastCheckpointPercentageVested;\n        // stakedAvg\n        uint256 elapsedTWAP = lastTWAP - userInfo[user].lastCheckpointTWAP;\n        uint256 avgPercentageStaked = elapsedTWAP / elapsedTime;\n        // user's percentage out of allStaked during the period\n        uint256 userShareOfStaked = userInfo[user].depositedShare * BP / avgPercentageStaked;\n        // user can get elapsedAmount \n        uint256 userEntitlement = elapsedVestingPercentage * userShareOfStaked / BP;\n\n        if (elapsedTime >= releaseFactor) {\n            return userEntitlement;\n        } else {\n            return userEntitlement * elapsedTime / releaseFactor;\n        }\n        \n        \n   }\n    \n    ///////////////////////////// VESTING LOGIC\n    function getVestingPercent() internal view returns(uint256) {\n        uint32 startTime = collectiveInfo.collectiveStart;\n        if (startTime == 0) return 0;\n        uint32 vestingTime = collectiveInfo.vestingTime;\n        uint32 timePassed = uint32(block.timestamp) - startTime;\n        if (vestingTime <= timePassed) return BP;\n        if (timePassed <= collectiveInfo.cliff) return 0;\n        return uint256(timePassed) * BP / uint256(vestingTime);\n    }\n}\n",
  "sourceMap": "349:9913:3:-:0;;;1483:9;1452:40;;1974:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2053:5;2060:7;2069:9;2310:5:4;2303:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2325:16:4;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2351:20:4;;;;;2401:13;2382:32;;2451:24;:22;:24::i;:::-;2424:51;;-1:-1:-1;349:9913:3;;-1:-1:-1;;;;;349:9913:3;5629:492:4;5694:7;5791:141;5970:4;5954:22;;;;;;:::i;:::-;;;;;;;;;;5759:341;;;3635:25:6;;;;3676:18;;3669:34;;;;5998:14:4;3719:18:6;;;3712:34;6034:13:4;3762:18:6;;;3755:34;6077:4:4;3805:19:6;;;3798:61;3607:19;;5759:341:4;;;;;;;;;;;;5732:382;;;;;;5713:401;;5629:492;:::o;349:9913:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;349:9913:3;;;-1:-1:-1;349:9913:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:6:o;1036:712::-;1142:6;1150;1158;1211:2;1199:9;1190:7;1186:23;1182:32;1179:52;;;1227:1;1224;1217:12;1179:52;1254:16;;-1:-1:-1;;;;;1319:14:6;;;1316:34;;;1346:1;1343;1336:12;1316:34;1369:61;1422:7;1413:6;1402:9;1398:22;1369:61;:::i;:::-;1359:71;;1476:2;1465:9;1461:18;1455:25;1439:41;;1505:2;1495:8;1492:16;1489:36;;;1521:1;1518;1511:12;1489:36;;1544:63;1599:7;1588:8;1577:9;1573:24;1544:63;:::i;:::-;1534:73;;;1650:2;1639:9;1635:18;1629:25;1694:4;1687:5;1683:16;1676:5;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;1737:5;1727:15;;;1036:712;;;;;:::o;1753:380::-;1832:1;1828:12;;;;1875;;;1896:61;;1950:4;1942:6;1938:17;1928:27;;1896:61;2003:2;1995:6;1992:14;1972:18;1969:38;1966:161;;;2049:10;2044:3;2040:20;2037:1;2030:31;2084:4;2081:1;2074:15;2112:4;2109:1;2102:15;1966:161;;1753:380;;;:::o;2267:1104::-;2397:3;2426:1;2459:6;2453:13;2489:3;2511:1;2539:9;2535:2;2531:18;2521:28;;2599:2;2588:9;2584:18;2621;2611:61;;2665:4;2657:6;2653:17;2643:27;;2611:61;2691:2;2739;2731:6;2728:14;2708:18;2705:38;2702:165;;;-1:-1:-1;;;2766:33:6;;2822:4;2819:1;2812:15;2852:4;2773:3;2840:17;2702:165;2883:18;2910:104;;;;3028:1;3023:323;;;;2876:470;;2910:104;-1:-1:-1;;2943:24:6;;2931:37;;2988:16;;;;-1:-1:-1;2910:104:6;;3023:323;2214:1;2207:14;;;2251:4;2238:18;;3121:1;3135:165;3149:6;3146:1;3143:13;3135:165;;;3227:14;;3214:11;;;3207:35;3270:16;;;;3164:10;;3135:165;;;3139:3;;3329:6;3324:3;3320:16;3313:23;;2876:470;-1:-1:-1;3362:3:6;;2267:1104;-1:-1:-1;;;;;;;;2267:1104:6:o;3376:489::-;349:9913:3;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BuidlCollective.sol",
  "type": "contract"
}